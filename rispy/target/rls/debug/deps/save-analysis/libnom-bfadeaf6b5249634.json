{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0","program":"/Users/merisb/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","nom","--edition=2018","/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=bfadeaf6b5249634","-C","extra-filename=-bfadeaf6b5249634","--out-dir","/Users/merisb/code/react-rust/@rsw/hey/target/rls/debug/deps","-L","dependency=/Users/merisb/code/react-rust/@rsw/hey/target/rls/debug/deps","--extern","memchr=/Users/merisb/code/react-rust/@rsw/hey/target/rls/debug/deps/libmemchr-1b09d63f86be502b.rmeta","--extern","minimal_lexical=/Users/merisb/code/react-rust/@rsw/hey/target/rls/debug/deps/libminimal_lexical-d12a3c6033312804.rmeta","--cap-lints","allow","--cfg","stable_i128","--error-format=json","--sysroot","/Users/merisb/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/merisb/code/react-rust/@rsw/hey/target/rls/debug/deps/libnom-bfadeaf6b5249634.rmeta"},"prelude":{"crate_id":{"name":"nom","disambiguator":[13720874331502082026,0]},"crate_root":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src","external_crates":[{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9888355131369537266,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","num":2,"id":{"name":"core","disambiguator":[11275466351773074568,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14505302196044876161,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12672318884608983985,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9602480897548461658,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6215642551405411717,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11323364399412649918,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[505106994998565642,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5151717038203672608,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12015404889719386584,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6634436157752397486,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10627139614780737919,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15241097753775192730,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[4193977997774401605,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4301272078305384557,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12250611045243811845,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[8394371263132856076,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","num":18,"id":{"name":"memchr","disambiguator":[15546568893218382993,0]}},{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","num":19,"id":{"name":"minimal_lexical","disambiguator":[6666400326049826211,0]}}],"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":0,"byte_end":15904,"line_start":1,"line_end":475,"column_start":1,"column_end":19}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":9336},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15070,"byte_end":15075,"line_start":427,"line_end":427,"column_start":7,"column_end":12},"alias_span":null,"name":"alloc","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":498},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15077,"byte_end":15083,"line_start":427,"line_end":427,"column_start":14,"column_end":20},"alias_span":null,"name":"borrow","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":72},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15085,"byte_end":15090,"line_start":427,"line_end":427,"column_start":22,"column_end":27},"alias_span":null,"name":"boxed","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":2638},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15092,"byte_end":15095,"line_start":427,"line_end":427,"column_start":29,"column_end":32},"alias_span":null,"name":"cmp","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":1,"index":989},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15097,"byte_end":15108,"line_start":427,"line_end":427,"column_start":34,"column_end":45},"alias_span":null,"name":"collections","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":2800},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15110,"byte_end":15117,"line_start":427,"line_end":427,"column_start":47,"column_end":54},"alias_span":null,"name":"convert","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":4259},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15119,"byte_end":15122,"line_start":427,"line_end":427,"column_start":56,"column_end":59},"alias_span":null,"name":"fmt","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":9444},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15124,"byte_end":15128,"line_start":427,"line_end":427,"column_start":61,"column_end":65},"alias_span":null,"name":"hash","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":4705},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15130,"byte_end":15134,"line_start":427,"line_end":427,"column_start":67,"column_end":71},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":1822},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15136,"byte_end":15139,"line_start":427,"line_end":427,"column_start":73,"column_end":76},"alias_span":null,"name":"mem","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":3054},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15141,"byte_end":15144,"line_start":427,"line_end":427,"column_start":78,"column_end":81},"alias_span":null,"name":"ops","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":7958},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15146,"byte_end":15152,"line_start":427,"line_end":427,"column_start":83,"column_end":89},"alias_span":null,"name":"option","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":8529},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15154,"byte_end":15160,"line_start":427,"line_end":427,"column_start":91,"column_end":97},"alias_span":null,"name":"result","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":4902},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15168,"byte_end":15173,"line_start":428,"line_end":428,"column_start":7,"column_end":12},"alias_span":null,"name":"slice","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":5177},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15175,"byte_end":15178,"line_start":428,"line_end":428,"column_start":14,"column_end":17},"alias_span":null,"name":"str","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":5382},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15180,"byte_end":15186,"line_start":428,"line_end":428,"column_start":19,"column_end":25},"alias_span":null,"name":"string","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":6237},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15188,"byte_end":15191,"line_start":428,"line_end":428,"column_start":27,"column_end":30},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":5},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15188,"byte_end":15191,"line_start":428,"line_end":428,"column_start":27,"column_end":30},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":1,"index":15},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15306,"byte_end":15313,"line_start":434,"line_end":434,"column_start":20,"column_end":27},"alias_span":null,"name":"v1","value":"","parent":{"krate":0,"index":58}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15354,"byte_end":15355,"line_start":439,"line_end":439,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15381,"byte_end":15382,"line_start":440,"line_end":440,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15406,"byte_end":15407,"line_start":441,"line_end":441,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"HexDisplay","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15429,"byte_end":15430,"line_start":443,"line_end":443,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":0,"byte_end":15904,"line_start":1,"line_end":475,"column_start":1,"column_end":19},"name":"","qualname":"::","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":185},{"krate":0,"index":401},{"krate":0,"index":816},{"krate":0,"index":1075},{"krate":0,"index":1123},{"krate":0,"index":1209},{"krate":0,"index":1377},{"krate":0,"index":1696},{"krate":0,"index":1862},{"krate":0,"index":2219},{"krate":0,"index":2220}],"decl_id":null,"docs":" # nom, eating data byte by byte","sig":null,"attributes":[{"value":"/ # nom, eating data byte by byte","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ nom is a parser combinator library with a focus on safe parsing,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":40,"byte_end":108,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ streaming patterns, and as much as possible zero copy.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":109,"byte_end":167,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":168,"byte_end":171,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":172,"byte_end":186,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":187,"byte_end":190,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":191,"byte_end":202,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"/ use nom::{","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":203,"byte_end":217,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/   IResult,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":218,"byte_end":232,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/   bytes::complete::{tag, take_while_m_n},","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":233,"byte_end":278,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"/   combinator::map_res,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":279,"byte_end":305,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/   sequence::tuple};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":306,"byte_end":329,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":330,"byte_end":333,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug,PartialEq)]","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":334,"byte_end":364,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/ pub struct Color {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":365,"byte_end":387,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/   pub red:     u8,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":388,"byte_end":410,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/   pub green:   u8,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":411,"byte_end":433,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/   pub blue:    u8,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":434,"byte_end":456,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":457,"byte_end":462,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":463,"byte_end":466,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn from_hex(input: &str) -> Result<u8, std::num::ParseIntError> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":467,"byte_end":536,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/   u8::from_str_radix(input, 16)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":537,"byte_end":572,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":573,"byte_end":578,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":579,"byte_end":582,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ fn is_hex_digit(c: char) -> bool {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":583,"byte_end":621,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/   c.is_digit(16)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":622,"byte_end":642,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":643,"byte_end":648,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":649,"byte_end":652,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fn hex_primary(input: &str) -> IResult<&str, u8> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":653,"byte_end":707,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/   map_res(","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":708,"byte_end":722,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/     take_while_m_n(2, 2, is_hex_digit),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":723,"byte_end":766,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/     from_hex","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":767,"byte_end":783,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"/   )(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":784,"byte_end":798,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":799,"byte_end":804,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":805,"byte_end":808,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ fn hex_color(input: &str) -> IResult<&str, Color> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":809,"byte_end":864,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/   let (input, _) = tag(\"#\")(input)?;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":865,"byte_end":905,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/   let (input, (red, green, blue)) = tuple((hex_primary, hex_primary, hex_primary))(input)?;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":906,"byte_end":1001,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1002,"byte_end":1005,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/   Ok((input, Color { red, green, blue }))","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1006,"byte_end":1051,"line_start":41,"line_end":41,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1052,"byte_end":1057,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1058,"byte_end":1061,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1062,"byte_end":1077,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/   assert_eq!(hex_color(\"#2F14DF\"), Ok((\"\", Color {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1078,"byte_end":1132,"line_start":45,"line_end":45,"column_start":1,"column_end":55}},{"value":"/     red: 47,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1133,"byte_end":1149,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/     green: 20,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1150,"byte_end":1168,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"/     blue: 223,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1169,"byte_end":1187,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/   })));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1188,"byte_end":1199,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1200,"byte_end":1205,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1206,"byte_end":1213,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1214,"byte_end":1217,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The code is available on [Github](https://github.com/Geal/nom)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1218,"byte_end":1284,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1285,"byte_end":1288,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ There are a few [guides](https://github.com/Geal/nom/tree/master/doc) with more details","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1289,"byte_end":1380,"line_start":55,"line_end":55,"column_start":1,"column_end":92}},{"value":"/ about [how to write parsers](https://github.com/Geal/nom/blob/master/doc/making_a_new_parser_from_scratch.md),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1381,"byte_end":1495,"line_start":56,"line_end":56,"column_start":1,"column_end":115}},{"value":"/ or the [error management system](https://github.com/Geal/nom/blob/master/doc/error_management.md).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1496,"byte_end":1598,"line_start":57,"line_end":57,"column_start":1,"column_end":103}},{"value":"/ You can also check out the [recipes] module that contains examples of common patterns.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1599,"byte_end":1689,"line_start":58,"line_end":58,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1690,"byte_end":1693,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Looking for a specific combinator? Read the","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1694,"byte_end":1743,"line_start":60,"line_end":60,"column_start":1,"column_end":50}},{"value":"/ [\"choose a combinator\" guide](https://github.com/Geal/nom/blob/master/doc/choosing_a_combinator.md)**","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1744,"byte_end":1849,"line_start":61,"line_end":61,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1850,"byte_end":1853,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ If you are upgrading to nom 5.0, please read the","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1854,"byte_end":1906,"line_start":63,"line_end":63,"column_start":1,"column_end":53}},{"value":"/ [migration document](https://github.com/Geal/nom/blob/master/doc/upgrading_to_nom_5.md).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":1907,"byte_end":1999,"line_start":64,"line_end":64,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2000,"byte_end":2003,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ## Parser combinators","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2004,"byte_end":2029,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2030,"byte_end":2033,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Parser combinators are an approach to parsers that is very different from","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2034,"byte_end":2111,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ software like [lex](https://en.wikipedia.org/wiki/Lex_(software)) and","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2112,"byte_end":2185,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/ [yacc](https://en.wikipedia.org/wiki/Yacc). Instead of writing the grammar","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2186,"byte_end":2264,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ in a separate syntax and generating the corresponding code, you use very small","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2265,"byte_end":2347,"line_start":71,"line_end":71,"column_start":1,"column_end":83}},{"value":"/ functions with very specific purposes, like \"take 5 bytes\", or \"recognize the","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2348,"byte_end":2429,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"/ word 'HTTP'\", and assemble them in meaningful patterns like \"recognize","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2430,"byte_end":2504,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ 'HTTP', then a space, then a version\".","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2505,"byte_end":2547,"line_start":74,"line_end":74,"column_start":1,"column_end":43}},{"value":"/ The resulting code is small, and looks like the grammar you would have","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2548,"byte_end":2622,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/ written with other parser approaches.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2623,"byte_end":2664,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2665,"byte_end":2668,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ This gives us a few advantages:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2669,"byte_end":2704,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2705,"byte_end":2708,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ - The parsers are small and easy to write","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2709,"byte_end":2754,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/ - The parsers components are easy to reuse (if they're general enough, please add them to nom!)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2755,"byte_end":2854,"line_start":81,"line_end":81,"column_start":1,"column_end":100}},{"value":"/ - The parsers components are easy to test separately (unit tests and property-based tests)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2855,"byte_end":2949,"line_start":82,"line_end":82,"column_start":1,"column_end":95}},{"value":"/ - The parser combination code looks close to the grammar you would have written","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":2950,"byte_end":3033,"line_start":83,"line_end":83,"column_start":1,"column_end":84}},{"value":"/ - You can build partial parsers, specific to the data you need at the moment, and ignore the rest","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3034,"byte_end":3135,"line_start":84,"line_end":84,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3136,"byte_end":3139,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Here is an example of one such parser, to recognize text between parentheses:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3140,"byte_end":3221,"line_start":86,"line_end":86,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3222,"byte_end":3225,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3226,"byte_end":3237,"line_start":88,"line_end":88,"column_start":1,"column_end":12}},{"value":"/ use nom::{","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3238,"byte_end":3252,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/   IResult,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3253,"byte_end":3267,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/   sequence::delimited,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3268,"byte_end":3294,"line_start":91,"line_end":91,"column_start":1,"column_end":27}},{"value":"/   // see the \"streaming/complete\" paragraph lower for an explanation of these submodules","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3295,"byte_end":3387,"line_start":92,"line_end":92,"column_start":1,"column_end":93}},{"value":"/   character::complete::char,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3388,"byte_end":3420,"line_start":93,"line_end":93,"column_start":1,"column_end":33}},{"value":"/   bytes::complete::is_not","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3421,"byte_end":3450,"line_start":94,"line_end":94,"column_start":1,"column_end":30}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3451,"byte_end":3457,"line_start":95,"line_end":95,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3458,"byte_end":3461,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ fn parens(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3462,"byte_end":3513,"line_start":97,"line_end":97,"column_start":1,"column_end":52}},{"value":"/   delimited(char('('), is_not(\")\"), char(')'))(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3514,"byte_end":3571,"line_start":98,"line_end":98,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3572,"byte_end":3577,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3578,"byte_end":3585,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3586,"byte_end":3589,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ It defines a function named `parens` which will recognize a sequence of the","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3590,"byte_end":3669,"line_start":102,"line_end":102,"column_start":1,"column_end":80}},{"value":"/ character `(`, the longest byte array not containing `)`, then the character","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3670,"byte_end":3750,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"/ `)`, and will return the byte array in the middle.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3751,"byte_end":3805,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3806,"byte_end":3809,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Here is another parser, written without using nom's combinators this time:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3810,"byte_end":3888,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3889,"byte_end":3892,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3893,"byte_end":3904,"line_start":108,"line_end":108,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, Err, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3905,"byte_end":3941,"line_start":109,"line_end":109,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3942,"byte_end":3945,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3946,"byte_end":3963,"line_start":111,"line_end":111,"column_start":1,"column_end":18}},{"value":"/ fn take4(i: &[u8]) -> IResult<&[u8], &[u8]>{","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":3964,"byte_end":4012,"line_start":112,"line_end":112,"column_start":1,"column_end":49}},{"value":"/   if i.len() < 4 {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4013,"byte_end":4035,"line_start":113,"line_end":113,"column_start":1,"column_end":23}},{"value":"/     Err(Err::Incomplete(Needed::new(4)))","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4036,"byte_end":4080,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/   } else {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4081,"byte_end":4095,"line_start":115,"line_end":115,"column_start":1,"column_end":15}},{"value":"/     Ok((&i[4..], &i[0..4]))","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4096,"byte_end":4127,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/   }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4128,"byte_end":4135,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4136,"byte_end":4141,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4142,"byte_end":4149,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4150,"byte_end":4157,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4158,"byte_end":4161,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ This function takes a byte array as input, and tries to consume 4 bytes.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4162,"byte_end":4238,"line_start":122,"line_end":122,"column_start":1,"column_end":77}},{"value":"/ Writing all the parsers manually, like this, is dangerous, despite Rust's","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4239,"byte_end":4316,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"/ safety features. There are still a lot of mistakes one can make. That's why","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4317,"byte_end":4396,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"/ nom provides a list of functions to help in developing parsers.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4397,"byte_end":4464,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4465,"byte_end":4468,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ With functions, you would write it like this:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4469,"byte_end":4518,"line_start":127,"line_end":127,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4519,"byte_end":4522,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4523,"byte_end":4534,"line_start":129,"line_end":129,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, bytes::streaming::take};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4535,"byte_end":4582,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/ fn take4(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4583,"byte_end":4633,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/   take(4u8)(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4634,"byte_end":4656,"line_start":132,"line_end":132,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4657,"byte_end":4662,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4663,"byte_end":4670,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4671,"byte_end":4674,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ A parser in nom is a function which, for an input type `I`, an output type `O`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4675,"byte_end":4757,"line_start":136,"line_end":136,"column_start":1,"column_end":83}},{"value":"/ and an optional error type `E`, will have the following signature:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4758,"byte_end":4828,"line_start":137,"line_end":137,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4829,"byte_end":4832,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4833,"byte_end":4851,"line_start":139,"line_end":139,"column_start":1,"column_end":19}},{"value":"/ fn parser(input: I) -> IResult<I, O, E>;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4852,"byte_end":4896,"line_start":140,"line_end":140,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4897,"byte_end":4904,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4905,"byte_end":4908,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Or like this, if you don't want to specify a custom error type (it will be `(I, ErrorKind)` by default):","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":4909,"byte_end":5017,"line_start":143,"line_end":143,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5018,"byte_end":5021,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5022,"byte_end":5040,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ fn parser(input: I) -> IResult<I, O>;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5041,"byte_end":5082,"line_start":146,"line_end":146,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5083,"byte_end":5090,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5091,"byte_end":5094,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ `IResult` is an alias for the `Result` type:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5095,"byte_end":5143,"line_start":149,"line_end":149,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5144,"byte_end":5147,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5148,"byte_end":5159,"line_start":151,"line_end":151,"column_start":1,"column_end":12}},{"value":"/ use nom::{Needed, error::Error};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5160,"byte_end":5196,"line_start":152,"line_end":152,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5197,"byte_end":5200,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ type IResult<I, O, E = Error<I>> = Result<(I, O), Err<E>>;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5201,"byte_end":5263,"line_start":154,"line_end":154,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5264,"byte_end":5267,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ enum Err<E> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5268,"byte_end":5285,"line_start":156,"line_end":156,"column_start":1,"column_end":18}},{"value":"/   Incomplete(Needed),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5286,"byte_end":5311,"line_start":157,"line_end":157,"column_start":1,"column_end":26}},{"value":"/   Error(E),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5312,"byte_end":5327,"line_start":158,"line_end":158,"column_start":1,"column_end":16}},{"value":"/   Failure(E),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5328,"byte_end":5345,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5346,"byte_end":5351,"line_start":160,"line_end":160,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5352,"byte_end":5359,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5360,"byte_end":5363,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ It can have the following values:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5364,"byte_end":5401,"line_start":163,"line_end":163,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5402,"byte_end":5405,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ - A correct result `Ok((I,O))` with the first element being the remaining of the input (not parsed yet), and the second the output value;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5406,"byte_end":5547,"line_start":165,"line_end":165,"column_start":1,"column_end":142}},{"value":"/ - An error `Err(Err::Error(c))` with `c` an error that can be built from the input position and a parser specific error","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5548,"byte_end":5671,"line_start":166,"line_end":166,"column_start":1,"column_end":124}},{"value":"/ - An error `Err(Err::Incomplete(Needed))` indicating that more input is necessary. `Needed` can indicate how much data is needed","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5672,"byte_end":5804,"line_start":167,"line_end":167,"column_start":1,"column_end":133}},{"value":"/ - An error `Err(Err::Failure(c))`. It works like the `Error` case, except it indicates an unrecoverable error: We cannot backtrack and test another parser","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5805,"byte_end":5963,"line_start":168,"line_end":168,"column_start":1,"column_end":159}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5964,"byte_end":5967,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ Please refer to the [\"choose a combinator\" guide](https://github.com/Geal/nom/blob/master/doc/choosing_a_combinator.md) for an exhaustive list of parsers.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":5968,"byte_end":6126,"line_start":170,"line_end":170,"column_start":1,"column_end":159}},{"value":"/ See also the rest of the documentation [here](https://github.com/Geal/nom/blob/master/doc).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6127,"byte_end":6222,"line_start":171,"line_end":171,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6223,"byte_end":6226,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ## Making new parsers with function combinators","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6227,"byte_end":6278,"line_start":173,"line_end":173,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6279,"byte_end":6282,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ nom is based on functions that generate parsers, with a signature like","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6283,"byte_end":6357,"line_start":175,"line_end":175,"column_start":1,"column_end":75}},{"value":"/ this: `(arguments) -> impl Fn(Input) -> IResult<Input, Output, Error>`.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6358,"byte_end":6433,"line_start":176,"line_end":176,"column_start":1,"column_end":76}},{"value":"/ The arguments of a combinator can be direct values (like `take` which uses","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6434,"byte_end":6512,"line_start":177,"line_end":177,"column_start":1,"column_end":79}},{"value":"/ a number of bytes or character as argument) or even other parsers (like","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6513,"byte_end":6588,"line_start":178,"line_end":178,"column_start":1,"column_end":76}},{"value":"/ `delimited` which takes as argument 3 parsers, and returns the result of","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6589,"byte_end":6665,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"/ the second one if all are successful).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6666,"byte_end":6708,"line_start":180,"line_end":180,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6709,"byte_end":6712,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ Here are some examples:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6713,"byte_end":6740,"line_start":182,"line_end":182,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6741,"byte_end":6744,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6745,"byte_end":6756,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/ use nom::IResult;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6757,"byte_end":6778,"line_start":185,"line_end":185,"column_start":1,"column_end":22}},{"value":"/ use nom::bytes::complete::{tag, take};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6779,"byte_end":6821,"line_start":186,"line_end":186,"column_start":1,"column_end":43}},{"value":"/ fn abcd_parser(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6822,"byte_end":6874,"line_start":187,"line_end":187,"column_start":1,"column_end":53}},{"value":"/   tag(\"abcd\")(i) // will consume bytes if the input begins with \"abcd\"","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6875,"byte_end":6949,"line_start":188,"line_end":188,"column_start":1,"column_end":75}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6950,"byte_end":6955,"line_start":189,"line_end":189,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6956,"byte_end":6959,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ fn take_10(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":6960,"byte_end":7011,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/   take(10u8)(i) // will consume and return 10 bytes of input","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7012,"byte_end":7076,"line_start":192,"line_end":192,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7077,"byte_end":7082,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7083,"byte_end":7090,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7091,"byte_end":7094,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ ## Combining parsers","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7095,"byte_end":7119,"line_start":196,"line_end":196,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7120,"byte_end":7123,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ There are higher level patterns, like the **`alt`** combinator, which","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7124,"byte_end":7197,"line_start":198,"line_end":198,"column_start":1,"column_end":74}},{"value":"/ provides a choice between multiple parsers. If one branch fails, it tries","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7198,"byte_end":7275,"line_start":199,"line_end":199,"column_start":1,"column_end":78}},{"value":"/ the next, and returns the result of the first parser that succeeds:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7276,"byte_end":7347,"line_start":200,"line_end":200,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7348,"byte_end":7351,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7352,"byte_end":7363,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/ use nom::IResult;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7364,"byte_end":7385,"line_start":203,"line_end":203,"column_start":1,"column_end":22}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7386,"byte_end":7411,"line_start":204,"line_end":204,"column_start":1,"column_end":26}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7412,"byte_end":7446,"line_start":205,"line_end":205,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7447,"byte_end":7450,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ let mut alt_tags = alt((tag(\"abcd\"), tag(\"efgh\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7451,"byte_end":7506,"line_start":207,"line_end":207,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7507,"byte_end":7510,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alt_tags(&b\"abcdxxx\"[..]), Ok((&b\"xxx\"[..], &b\"abcd\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7511,"byte_end":7586,"line_start":209,"line_end":209,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(alt_tags(&b\"efghxxx\"[..]), Ok((&b\"xxx\"[..], &b\"efgh\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7587,"byte_end":7662,"line_start":210,"line_end":210,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(alt_tags(&b\"ijklxxx\"[..]), Err(nom::Err::Error((&b\"ijklxxx\"[..], nom::error::ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7663,"byte_end":7774,"line_start":211,"line_end":211,"column_start":1,"column_end":112}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7775,"byte_end":7782,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7783,"byte_end":7786,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ The **`opt`** combinator makes a parser optional. If the child parser returns","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7787,"byte_end":7868,"line_start":214,"line_end":214,"column_start":1,"column_end":82}},{"value":"/ an error, **`opt`** will still succeed and return None:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7869,"byte_end":7928,"line_start":215,"line_end":215,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7929,"byte_end":7932,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7933,"byte_end":7944,"line_start":217,"line_end":217,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, combinator::opt, bytes::complete::tag};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":7945,"byte_end":8007,"line_start":218,"line_end":218,"column_start":1,"column_end":63}},{"value":"/ fn abcd_opt(i: &[u8]) -> IResult<&[u8], Option<&[u8]>> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8008,"byte_end":8068,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/   opt(tag(\"abcd\"))(i)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8069,"byte_end":8094,"line_start":220,"line_end":220,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8095,"byte_end":8100,"line_start":221,"line_end":221,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8101,"byte_end":8104,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(abcd_opt(&b\"abcdxxx\"[..]), Ok((&b\"xxx\"[..], Some(&b\"abcd\"[..]))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8105,"byte_end":8186,"line_start":223,"line_end":223,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(abcd_opt(&b\"efghxxx\"[..]), Ok((&b\"efghxxx\"[..], None)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8187,"byte_end":8258,"line_start":224,"line_end":224,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8259,"byte_end":8266,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8267,"byte_end":8270,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ **`many0`** applies a parser 0 or more times, and returns a vector of the aggregated results:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8271,"byte_end":8368,"line_start":227,"line_end":227,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8369,"byte_end":8372,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8373,"byte_end":8384,"line_start":229,"line_end":229,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"alloc\")]","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8385,"byte_end":8416,"line_start":230,"line_end":230,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8417,"byte_end":8434,"line_start":231,"line_end":231,"column_start":1,"column_end":18}},{"value":"/ use nom::{IResult, multi::many0, bytes::complete::tag};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8435,"byte_end":8494,"line_start":232,"line_end":232,"column_start":1,"column_end":60}},{"value":"/ use std::str;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8495,"byte_end":8512,"line_start":233,"line_end":233,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8513,"byte_end":8516,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ fn multi(i: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8517,"byte_end":8568,"line_start":235,"line_end":235,"column_start":1,"column_end":52}},{"value":"/   many0(tag(\"abcd\"))(i)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8569,"byte_end":8596,"line_start":236,"line_end":236,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8597,"byte_end":8602,"line_start":237,"line_end":237,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8603,"byte_end":8606,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ let a = \"abcdef\";","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8607,"byte_end":8628,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"/ let b = \"abcdabcdef\";","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8629,"byte_end":8654,"line_start":240,"line_end":240,"column_start":1,"column_end":26}},{"value":"/ let c = \"azerty\";","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8655,"byte_end":8676,"line_start":241,"line_end":241,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(multi(a), Ok((\"ef\",     vec![\"abcd\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8677,"byte_end":8732,"line_start":242,"line_end":242,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(multi(b), Ok((\"ef\",     vec![\"abcd\", \"abcd\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8733,"byte_end":8796,"line_start":243,"line_end":243,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(multi(c), Ok((\"azerty\", Vec::new())));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8797,"byte_end":8850,"line_start":244,"line_end":244,"column_start":1,"column_end":54}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8851,"byte_end":8858,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"alloc\"))]","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8859,"byte_end":8895,"line_start":246,"line_end":246,"column_start":1,"column_end":37}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8896,"byte_end":8914,"line_start":247,"line_end":247,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8915,"byte_end":8922,"line_start":248,"line_end":248,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8923,"byte_end":8926,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ Here are some basic combinators available:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8927,"byte_end":8973,"line_start":250,"line_end":250,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8974,"byte_end":8977,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ - **`opt`**: Will make the parser optional (if it returns the `O` type, the new parser returns `Option<O>`)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":8978,"byte_end":9089,"line_start":252,"line_end":252,"column_start":1,"column_end":112}},{"value":"/ - **`many0`**: Will apply the parser 0 or more times (if it returns the `O` type, the new parser returns `Vec<O>`)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9090,"byte_end":9208,"line_start":253,"line_end":253,"column_start":1,"column_end":119}},{"value":"/ - **`many1`**: Will apply the parser 1 or more times","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9209,"byte_end":9265,"line_start":254,"line_end":254,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9266,"byte_end":9269,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ There are more complex (and more useful) parsers like `tuple!`, which is","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9270,"byte_end":9346,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ used to apply a series of parsers then assemble their results.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9347,"byte_end":9413,"line_start":257,"line_end":257,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9414,"byte_end":9417,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ Example with `tuple`:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9418,"byte_end":9443,"line_start":259,"line_end":259,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9444,"byte_end":9447,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9448,"byte_end":9459,"line_start":261,"line_end":261,"column_start":1,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9460,"byte_end":9477,"line_start":262,"line_end":262,"column_start":1,"column_end":18}},{"value":"/ use nom::{error::ErrorKind, Needed,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9478,"byte_end":9517,"line_start":263,"line_end":263,"column_start":1,"column_end":40}},{"value":"/ number::streaming::be_u16,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9518,"byte_end":9548,"line_start":264,"line_end":264,"column_start":1,"column_end":31}},{"value":"/ bytes::streaming::{tag, take},","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9549,"byte_end":9583,"line_start":265,"line_end":265,"column_start":1,"column_end":35}},{"value":"/ sequence::tuple};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9584,"byte_end":9605,"line_start":266,"line_end":266,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9606,"byte_end":9609,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ let mut tpl = tuple((be_u16, take(3u8), tag(\"fg\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9610,"byte_end":9666,"line_start":268,"line_end":268,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9667,"byte_end":9670,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9671,"byte_end":9686,"line_start":270,"line_end":270,"column_start":1,"column_end":16}},{"value":"/   tpl(&b\"abcdefgh\"[..]),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9687,"byte_end":9715,"line_start":271,"line_end":271,"column_start":1,"column_end":29}},{"value":"/   Ok((","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9716,"byte_end":9726,"line_start":272,"line_end":272,"column_start":1,"column_end":11}},{"value":"/     &b\"h\"[..],","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9727,"byte_end":9745,"line_start":273,"line_end":273,"column_start":1,"column_end":19}},{"value":"/     (0x6162u16, &b\"cde\"[..], &b\"fg\"[..])","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9746,"byte_end":9790,"line_start":274,"line_end":274,"column_start":1,"column_end":45}},{"value":"/   ))","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9791,"byte_end":9799,"line_start":275,"line_end":275,"column_start":1,"column_end":9}},{"value":"/ );","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9800,"byte_end":9806,"line_start":276,"line_end":276,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(tpl(&b\"abcde\"[..]), Err(nom::Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9807,"byte_end":9885,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ let input = &b\"abcdejk\"[..];","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9886,"byte_end":9918,"line_start":278,"line_end":278,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(tpl(input), Err(nom::Err::Error((&input[5..], ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":9919,"byte_end":9999,"line_start":279,"line_end":279,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10000,"byte_end":10007,"line_start":280,"line_end":280,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10008,"byte_end":10015,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10016,"byte_end":10019,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ But you can also use a sequence of combinators written in imperative style,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10020,"byte_end":10099,"line_start":283,"line_end":283,"column_start":1,"column_end":80}},{"value":"/ thanks to the `?` operator:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10100,"byte_end":10131,"line_start":284,"line_end":284,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10132,"byte_end":10135,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10136,"byte_end":10147,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10148,"byte_end":10165,"line_start":287,"line_end":287,"column_start":1,"column_end":18}},{"value":"/ use nom::{IResult, bytes::complete::tag};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10166,"byte_end":10211,"line_start":288,"line_end":288,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10212,"byte_end":10215,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10216,"byte_end":10247,"line_start":290,"line_end":290,"column_start":1,"column_end":32}},{"value":"/ struct A {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10248,"byte_end":10262,"line_start":291,"line_end":291,"column_start":1,"column_end":15}},{"value":"/   a: u8,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10263,"byte_end":10275,"line_start":292,"line_end":292,"column_start":1,"column_end":13}},{"value":"/   b: u8","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10276,"byte_end":10287,"line_start":293,"line_end":293,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10288,"byte_end":10293,"line_start":294,"line_end":294,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10294,"byte_end":10297,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ fn ret_int1(i:&[u8]) -> IResult<&[u8], u8> { Ok((i,1)) }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10298,"byte_end":10358,"line_start":296,"line_end":296,"column_start":1,"column_end":61}},{"value":"/ fn ret_int2(i:&[u8]) -> IResult<&[u8], u8> { Ok((i,2)) }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10359,"byte_end":10419,"line_start":297,"line_end":297,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10420,"byte_end":10423,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ fn f(i: &[u8]) -> IResult<&[u8], A> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10424,"byte_end":10465,"line_start":299,"line_end":299,"column_start":1,"column_end":42}},{"value":"/   // if successful, the parser returns `Ok((remaining_input, output_value))` that we can destructure","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10466,"byte_end":10570,"line_start":300,"line_end":300,"column_start":1,"column_end":105}},{"value":"/   let (i, _) = tag(\"abcd\")(i)?;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10571,"byte_end":10606,"line_start":301,"line_end":301,"column_start":1,"column_end":36}},{"value":"/   let (i, a) = ret_int1(i)?;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10607,"byte_end":10639,"line_start":302,"line_end":302,"column_start":1,"column_end":33}},{"value":"/   let (i, _) = tag(\"efgh\")(i)?;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10640,"byte_end":10675,"line_start":303,"line_end":303,"column_start":1,"column_end":36}},{"value":"/   let (i, b) = ret_int2(i)?;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10676,"byte_end":10708,"line_start":304,"line_end":304,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10709,"byte_end":10712,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/   Ok((i, A { a, b }))","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10713,"byte_end":10738,"line_start":306,"line_end":306,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10739,"byte_end":10744,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10745,"byte_end":10748,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ let r = f(b\"abcdefghX\");","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10749,"byte_end":10777,"line_start":309,"line_end":309,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(r, Ok((&b\"X\"[..], A{a: 1, b: 2})));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10778,"byte_end":10828,"line_start":310,"line_end":310,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10829,"byte_end":10836,"line_start":311,"line_end":311,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10837,"byte_end":10844,"line_start":312,"line_end":312,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10845,"byte_end":10848,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ ## Streaming / Complete","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10849,"byte_end":10876,"line_start":314,"line_end":314,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10877,"byte_end":10880,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ Some of nom's modules have `streaming` or `complete` submodules. They hold","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10881,"byte_end":10959,"line_start":316,"line_end":316,"column_start":1,"column_end":79}},{"value":"/ different variants of the same combinators.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":10960,"byte_end":11007,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11008,"byte_end":11011,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ A streaming parser assumes that we might not have all of the input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11012,"byte_end":11088,"line_start":319,"line_end":319,"column_start":1,"column_end":77}},{"value":"/ This can happen with some network protocol or large file parsers, where the","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11089,"byte_end":11168,"line_start":320,"line_end":320,"column_start":1,"column_end":80}},{"value":"/ input buffer can be full and need to be resized or refilled.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11169,"byte_end":11233,"line_start":321,"line_end":321,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11234,"byte_end":11237,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ A complete parser assumes that we already have all of the input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11238,"byte_end":11311,"line_start":323,"line_end":323,"column_start":1,"column_end":74}},{"value":"/ This will be the common case with small files that can be read entirely to","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11312,"byte_end":11390,"line_start":324,"line_end":324,"column_start":1,"column_end":79}},{"value":"/ memory.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11391,"byte_end":11402,"line_start":325,"line_end":325,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11403,"byte_end":11406,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ Here is how it works in practice:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11407,"byte_end":11444,"line_start":327,"line_end":327,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11445,"byte_end":11448,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11449,"byte_end":11460,"line_start":329,"line_end":329,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, Err, Needed, error::{Error, ErrorKind}, bytes, character};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11461,"byte_end":11542,"line_start":330,"line_end":330,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11543,"byte_end":11546,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ fn take_streaming(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11547,"byte_end":11605,"line_start":332,"line_end":332,"column_start":1,"column_end":59}},{"value":"/   bytes::streaming::take(4u8)(i)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11606,"byte_end":11642,"line_start":333,"line_end":333,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11643,"byte_end":11648,"line_start":334,"line_end":334,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11649,"byte_end":11652,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ fn take_complete(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11653,"byte_end":11710,"line_start":336,"line_end":336,"column_start":1,"column_end":58}},{"value":"/   bytes::complete::take(4u8)(i)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11711,"byte_end":11746,"line_start":337,"line_end":337,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11747,"byte_end":11752,"line_start":338,"line_end":338,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11753,"byte_end":11756,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ // both parsers will take 4 bytes as expected","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11757,"byte_end":11806,"line_start":340,"line_end":340,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(take_streaming(&b\"abcde\"[..]), Ok((&b\"e\"[..], &b\"abcd\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11807,"byte_end":11884,"line_start":341,"line_end":341,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(take_complete(&b\"abcde\"[..]), Ok((&b\"e\"[..], &b\"abcd\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11885,"byte_end":11961,"line_start":342,"line_end":342,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11962,"byte_end":11965,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ // if the input is smaller than 4 bytes, the streaming parser","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":11966,"byte_end":12031,"line_start":344,"line_end":344,"column_start":1,"column_end":66}},{"value":"/ // will return `Incomplete` to indicate that we need more data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12032,"byte_end":12098,"line_start":345,"line_end":345,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(take_streaming(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12099,"byte_end":12181,"line_start":346,"line_end":346,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12182,"byte_end":12185,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ // but the complete parser will return an error","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12186,"byte_end":12237,"line_start":348,"line_end":348,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(take_complete(&b\"abc\"[..]), Err(Err::Error(Error::new(&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12238,"byte_end":12339,"line_start":349,"line_end":349,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12340,"byte_end":12343,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ // the alpha0 function recognizes 0 or more alphabetic characters","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12344,"byte_end":12413,"line_start":351,"line_end":351,"column_start":1,"column_end":70}},{"value":"/ fn alpha0_streaming(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12414,"byte_end":12471,"line_start":352,"line_end":352,"column_start":1,"column_end":58}},{"value":"/   character::streaming::alpha0(i)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12472,"byte_end":12509,"line_start":353,"line_end":353,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12510,"byte_end":12515,"line_start":354,"line_end":354,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12516,"byte_end":12519,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ fn alpha0_complete(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12520,"byte_end":12576,"line_start":356,"line_end":356,"column_start":1,"column_end":57}},{"value":"/   character::complete::alpha0(i)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12577,"byte_end":12613,"line_start":357,"line_end":357,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12614,"byte_end":12619,"line_start":358,"line_end":358,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12620,"byte_end":12623,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ // if there's a clear limit to the recognized characters, both parsers work the same way","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12624,"byte_end":12716,"line_start":360,"line_end":360,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(alpha0_streaming(\"abcd;\"), Ok((\";\", \"abcd\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12717,"byte_end":12778,"line_start":361,"line_end":361,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(alpha0_complete(\"abcd;\"), Ok((\";\", \"abcd\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12779,"byte_end":12839,"line_start":362,"line_end":362,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12840,"byte_end":12843,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ // but when there's no limit, the streaming version returns `Incomplete`, because it cannot","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12844,"byte_end":12939,"line_start":364,"line_end":364,"column_start":1,"column_end":96}},{"value":"/ // know if more input data should be recognized. The whole input could be \"abcd;\", or","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":12940,"byte_end":13029,"line_start":365,"line_end":365,"column_start":1,"column_end":90}},{"value":"/ // \"abcde;\"","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":13030,"byte_end":13045,"line_start":366,"line_end":366,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(alpha0_streaming(\"abcd\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":13046,"byte_end":13125,"line_start":367,"line_end":367,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":13126,"byte_end":13129,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ // while the complete version knows that all of the data is there","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":13130,"byte_end":13199,"line_start":369,"line_end":369,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha0_complete(\"abcd\"), Ok((\"\", \"abcd\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":13200,"byte_end":13258,"line_start":370,"line_end":370,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":13259,"byte_end":13266,"line_start":371,"line_end":371,"column_start":1,"column_end":8}},{"value":"/ **Going further:** Read the [guides](https://github.com/Geal/nom/tree/master/doc),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":13267,"byte_end":13353,"line_start":372,"line_end":372,"column_start":1,"column_end":87}},{"value":"/ check out the [recipes]!","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":13354,"byte_end":13382,"line_start":373,"line_end":373,"column_start":1,"column_end":29}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":13655,"byte_end":13677,"line_start":379,"line_end":379,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":14147,"byte_end":14150,"line_start":396,"line_end":396,"column_start":9,"column_end":12},"name":"lib","qualname":"::lib","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":5}],"decl_id":null,"docs":" Lib module to re-export everything needed from `std` or `core`/`alloc`. This is how `serde` does\n it, albeit there it is not public.\n","sig":null,"attributes":[{"value":"/ Lib module to re-export everything needed from `std` or `core`/`alloc`. This is how `serde` does","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":13935,"byte_end":14035,"line_start":393,"line_end":393,"column_start":1,"column_end":101}},{"value":"/ it, albeit there it is not public.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":14036,"byte_end":14074,"line_start":394,"line_end":394,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15020,"byte_end":15023,"line_start":424,"line_end":424,"column_start":11,"column_end":14},"name":"std","qualname":"::lib::std","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":58}],"decl_id":null,"docs":" internal std exports for no_std compatibility\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":14868,"byte_end":14891,"line_start":421,"line_end":421,"column_start":3,"column_end":26}},{"value":"/ internal std exports for no_std compatibility","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":14960,"byte_end":15009,"line_start":423,"line_end":423,"column_start":3,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":58},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15277,"byte_end":15284,"line_start":433,"line_end":433,"column_start":13,"column_end":20},"name":"prelude","qualname":"::lib::std::prelude","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":59}],"decl_id":null,"docs":" internal reproduction of std prelude\n","sig":null,"attributes":[{"value":"/ internal reproduction of std prelude","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15205,"byte_end":15245,"line_start":431,"line_end":431,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":66},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":2679},{"krate":0,"index":2683},{"krate":0,"index":2686},{"krate":0,"index":2688},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":2692},{"krate":0,"index":2695},{"krate":0,"index":2698},{"krate":0,"index":2701},{"krate":0,"index":2703},{"krate":0,"index":2707},{"krate":0,"index":2717},{"krate":0,"index":2719},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":130},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":161},{"krate":0,"index":2725},{"krate":0,"index":2832},{"krate":0,"index":2834},{"krate":0,"index":2835},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2840},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"decl_id":null,"docs":" Error management","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15433,"byte_end":15445,"line_start":445,"line_end":445,"column_start":1,"column_end":13}},{"value":"/ Error management","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":15906,"byte_end":15926,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":15927,"byte_end":15930,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Parsers are generic over their error type, requiring that it implements","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":15931,"byte_end":16006,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ the `error::ParseError<Input>` trait.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16007,"byte_end":16048,"line_start":4,"line_end":4,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":73},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16419,"byte_end":16429,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"name":"ParseError","qualname":"::error::ParseError","value":"ParseError<I>: Sized","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" This trait must be implemented by the error type of a nom parser.","sig":null,"attributes":[{"value":"/ This trait must be implemented by the error type of a nom parser.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16106,"byte_end":16175,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16176,"byte_end":16179,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ There are already implementations of it for `(Input, ErrorKind)`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16180,"byte_end":16248,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ and `VerboseError<Input>`.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16249,"byte_end":16279,"line_start":12,"line_end":12,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16280,"byte_end":16283,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ It provides methods to create an error from some combinators,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16284,"byte_end":16349,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ and combine existing errors in combinators like `alt`.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16350,"byte_end":16408,"line_start":15,"line_end":15,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16513,"byte_end":16528,"line_start":18,"line_end":18,"column_start":6,"column_end":21},"name":"from_error_kind","qualname":"::error::ParseError::from_error_kind","value":"pub fn from_error_kind(I, ErrorKind) -> Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Creates an error from the input position and an [ErrorKind]\n","sig":null,"attributes":[{"value":"/ Creates an error from the input position and an [ErrorKind]","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16444,"byte_end":16507,"line_start":17,"line_end":17,"column_start":3,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16776,"byte_end":16782,"line_start":23,"line_end":23,"column_start":6,"column_end":12},"name":"append","qualname":"::error::ParseError::append","value":"pub fn append(I, ErrorKind, Self) -> Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Combines an existing error with a new one created from the input\n position and an [ErrorKind]. This is useful when backtracking\n through a parse tree, accumulating error context on the way\n","sig":null,"attributes":[{"value":"/ Combines an existing error with a new one created from the input","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16568,"byte_end":16636,"line_start":20,"line_end":20,"column_start":3,"column_end":71}},{"value":"/ position and an [ErrorKind]. This is useful when backtracking","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16639,"byte_end":16704,"line_start":21,"line_end":21,"column_start":3,"column_end":68}},{"value":"/ through a parse tree, accumulating error context on the way","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16707,"byte_end":16770,"line_start":22,"line_end":22,"column_start":3,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16910,"byte_end":16919,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"name":"from_char","qualname":"::error::ParseError::from_char","value":"pub fn from_char(I, char) -> Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Creates an error from an input position and an expected character\n","sig":null,"attributes":[{"value":"/ Creates an error from an input position and an expected character","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16835,"byte_end":16904,"line_start":25,"line_end":25,"column_start":3,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17131,"byte_end":17133,"line_start":32,"line_end":32,"column_start":6,"column_end":8},"name":"or","qualname":"::error::ParseError::or","value":"pub fn or(Self, Self) -> Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Combines two existing errors. This function is used to compare errors\n generated in various branches of `alt`.\n","sig":null,"attributes":[{"value":"/ Combines two existing errors. This function is used to compare errors","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17006,"byte_end":17079,"line_start":30,"line_end":30,"column_start":3,"column_end":76}},{"value":"/ generated in various branches of `alt`.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17082,"byte_end":17125,"line_start":31,"line_end":31,"column_start":3,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":79},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17293,"byte_end":17305,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"ContextError","qualname":"::error::ContextError","value":"ContextError<I>: Sized","parent":null,"children":[{"krate":0,"index":81}],"decl_id":null,"docs":" This trait is required by the `context` combinator to add a static string\n to an existing error\n","sig":null,"attributes":[{"value":"/ This trait is required by the `context` combinator to add a static string","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17180,"byte_end":17257,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ to an existing error","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17258,"byte_end":17282,"line_start":38,"line_end":38,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17555,"byte_end":17566,"line_start":43,"line_end":43,"column_start":6,"column_end":17},"name":"add_context","qualname":"::error::ContextError::add_context","value":"pub fn add_context(I, &'static str, Self) -> Self","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Creates a new error from an input position, a static string and an existing error.\n This is used mainly in the [context] combinator, to add user friendly information\n to errors when backtracking through a parse tree\n","sig":null,"attributes":[{"value":"/ Creates a new error from an input position, a static string and an existing error.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17320,"byte_end":17406,"line_start":40,"line_end":40,"column_start":3,"column_end":89}},{"value":"/ This is used mainly in the [context] combinator, to add user friendly information","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17409,"byte_end":17494,"line_start":41,"line_end":41,"column_start":3,"column_end":88}},{"value":"/ to errors when backtracking through a parse tree","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17497,"byte_end":17549,"line_start":42,"line_end":42,"column_start":3,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":82},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17782,"byte_end":17799,"line_start":50,"line_end":50,"column_start":11,"column_end":28},"name":"FromExternalError","qualname":"::error::FromExternalError","value":"FromExternalError<I, E>","parent":null,"children":[{"krate":0,"index":85}],"decl_id":null,"docs":" This trait is required by the `map_res` combinator to integrate\n error types from external functions, like [std::str::FromStr]\n","sig":null,"attributes":[{"value":"/ This trait is required by the `map_res` combinator to integrate","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17638,"byte_end":17705,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ error types from external functions, like [std::str::FromStr]","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17706,"byte_end":17771,"line_start":49,"line_end":49,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17938,"byte_end":17957,"line_start":53,"line_end":53,"column_start":6,"column_end":25},"name":"from_external_error","qualname":"::error::FromExternalError::from_external_error","value":"pub fn from_external_error(I, ErrorKind, E) -> Self","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Creates a new error from an input position, an [ErrorKind] indicating the\n wrapping parser, and an external error\n","sig":null,"attributes":[{"value":"/ Creates a new error from an input position, an [ErrorKind] indicating the","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17810,"byte_end":17887,"line_start":51,"line_end":51,"column_start":3,"column_end":80}},{"value":"/ wrapping parser, and an external error","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17890,"byte_end":17932,"line_start":52,"line_end":52,"column_start":3,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18109,"byte_end":18114,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error { input, code }","parent":null,"children":[{"krate":0,"index":2681},{"krate":0,"index":2682}],"decl_id":null,"docs":" default error type, only contains the error' location and code\n","sig":null,"attributes":[{"value":"/ default error type, only contains the error' location and code","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18003,"byte_end":18069,"line_start":56,"line_end":56,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2681},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18172,"byte_end":18177,"line_start":60,"line_end":60,"column_start":7,"column_end":12},"name":"input","qualname":"::error::Error::input","value":"I","parent":{"krate":0,"index":2679},"children":[],"decl_id":null,"docs":" position of the error in the input data\n","sig":null,"attributes":[{"value":"/ position of the error in the input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18122,"byte_end":18165,"line_start":59,"line_end":59,"column_start":3,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18209,"byte_end":18213,"line_start":62,"line_end":62,"column_start":7,"column_end":11},"name":"code","qualname":"::error::Error::code","value":"error::ErrorKind","parent":{"krate":0,"index":2679},"children":[],"decl_id":null,"docs":" nom error code\n","sig":null,"attributes":[{"value":"/ nom error code","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18184,"byte_end":18202,"line_start":61,"line_end":61,"column_start":3,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18289,"byte_end":18292,"line_start":67,"line_end":67,"column_start":10,"column_end":13},"name":"new","qualname":"<Error<I>>::new","value":"pub fn new(I, ErrorKind) -> Error<I>","parent":null,"children":[],"decl_id":null,"docs":" creates a new basic error\n","sig":null,"attributes":[{"value":"/ creates a new basic error","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18250,"byte_end":18279,"line_start":66,"line_end":66,"column_start":3,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":124},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":20044,"byte_end":20054,"line_start":134,"line_end":134,"column_start":8,"column_end":18},"name":"make_error","qualname":"::error::make_error","value":"pub fn make_error<I, E: ParseError<I>>(I, ErrorKind) -> E","parent":null,"children":[],"decl_id":null,"docs":" Creates an error from the input position and an [ErrorKind]\n","sig":null,"attributes":[{"value":"/ Creates an error from the input position and an [ErrorKind]","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":19973,"byte_end":20036,"line_start":133,"line_end":133,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":20353,"byte_end":20365,"line_start":141,"line_end":141,"column_start":8,"column_end":20},"name":"append_error","qualname":"::error::append_error","value":"pub fn append_error<I, E: ParseError<I>>(I, ErrorKind, E) -> E","parent":null,"children":[],"decl_id":null,"docs":" Combines an existing error with a new one created from the input\n position and an [ErrorKind]. This is useful when backtracking\n through a parse tree, accumulating error context on the way\n","sig":null,"attributes":[{"value":"/ Combines an existing error with a new one created from the input","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":20147,"byte_end":20215,"line_start":138,"line_end":138,"column_start":1,"column_end":69}},{"value":"/ position and an [ErrorKind]. This is useful when backtracking","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":20216,"byte_end":20281,"line_start":139,"line_end":139,"column_start":1,"column_end":66}},{"value":"/ through a parse tree, accumulating error context on the way","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":20282,"byte_end":20345,"line_start":140,"line_end":140,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2692},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":20811,"byte_end":20823,"line_start":151,"line_end":151,"column_start":12,"column_end":24},"name":"VerboseError","qualname":"::error::VerboseError","value":"VerboseError { errors }","parent":null,"children":[{"krate":0,"index":2694}],"decl_id":null,"docs":" This error type accumulates errors and their position when backtracking\n through a parse tree. With some post processing (cf `examples/json.rs`),\n it can be used to display user friendly error messages\n","sig":null,"attributes":[{"value":"/ This error type accumulates errors and their position when backtracking","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":20466,"byte_end":20541,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/ through a parse tree. With some post processing (cf `examples/json.rs`),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":20542,"byte_end":20618,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"/ it can be used to display user friendly error messages","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":20619,"byte_end":20677,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":20678,"byte_end":20703,"line_start":148,"line_end":148,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2694},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":20954,"byte_end":20960,"line_start":154,"line_end":154,"column_start":7,"column_end":13},"name":"errors","qualname":"::error::VerboseError::errors","value":"std::vec::Vec<(I, error::VerboseErrorKind)>","parent":{"krate":0,"index":2692},"children":[],"decl_id":null,"docs":" List of errors accumulated by `VerboseError`, containing the affected\n part of input data, and some context\n","sig":null,"attributes":[{"value":"/ List of errors accumulated by `VerboseError`, containing the affected","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":20831,"byte_end":20904,"line_start":152,"line_end":152,"column_start":3,"column_end":76}},{"value":"/ part of input data, and some context","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":20907,"byte_end":20947,"line_start":153,"line_end":153,"column_start":3,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2708},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":21256,"byte_end":21263,"line_start":163,"line_end":163,"column_start":3,"column_end":10},"name":"Context","qualname":"::error::VerboseErrorKind::Context","value":"VerboseErrorKind::Context(&'static str)","parent":{"krate":0,"index":2707},"children":[],"decl_id":null,"docs":" Static string added by the `context` function\n","sig":null,"attributes":[{"value":"/ Static string added by the `context` function","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":21204,"byte_end":21253,"line_start":162,"line_end":162,"column_start":3,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2711},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":21349,"byte_end":21353,"line_start":165,"line_end":165,"column_start":3,"column_end":7},"name":"Char","qualname":"::error::VerboseErrorKind::Char","value":"VerboseErrorKind::Char(char)","parent":{"krate":0,"index":2707},"children":[],"decl_id":null,"docs":" Indicates which character was expected by the `char` function\n","sig":null,"attributes":[{"value":"/ Indicates which character was expected by the `char` function","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":21281,"byte_end":21346,"line_start":164,"line_end":164,"column_start":3,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2714},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":21409,"byte_end":21412,"line_start":167,"line_end":167,"column_start":3,"column_end":6},"name":"Nom","qualname":"::error::VerboseErrorKind::Nom","value":"VerboseErrorKind::Nom(ErrorKind)","parent":{"krate":0,"index":2707},"children":[],"decl_id":null,"docs":" Error kind given by various nom parsers\n","sig":null,"attributes":[{"value":"/ Error kind given by various nom parsers","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":21363,"byte_end":21406,"line_start":166,"line_end":166,"column_start":3,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":2707},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":21183,"byte_end":21199,"line_start":161,"line_end":161,"column_start":10,"column_end":26},"name":"VerboseErrorKind","qualname":"::error::VerboseErrorKind","value":"pub enum VerboseErrorKind {\n    Context(&'static str),\n    Char(char),\n    Nom(ErrorKind),\n}","parent":null,"children":[{"krate":0,"index":2708},{"krate":0,"index":2711},{"krate":0,"index":2714}],"decl_id":null,"docs":" Error context for `VerboseError`\n","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":21015,"byte_end":21040,"line_start":157,"line_end":157,"column_start":1,"column_end":26}},{"value":"/ Error context for `VerboseError`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":21137,"byte_end":21173,"line_start":160,"line_end":160,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":23489,"byte_end":23496,"line_start":233,"line_end":233,"column_start":8,"column_end":15},"name":"context","qualname":"::error::context","value":"pub fn context<I: Clone, E: ContextError<I>, F, O>(&'static str, F)\n-> /*impl Trait*/ where F: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Create a new error from an input position, a static string and an existing error.\n This is used mainly in the [context] combinator, to add user friendly information\n to errors when backtracking through a parse tree\n","sig":null,"attributes":[{"value":"/ Create a new error from an input position, a static string and an existing error.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":23257,"byte_end":23342,"line_start":230,"line_end":230,"column_start":1,"column_end":86}},{"value":"/ This is used mainly in the [context] combinator, to add user friendly information","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":23343,"byte_end":23428,"line_start":231,"line_end":231,"column_start":1,"column_end":86}},{"value":"/ to errors when backtracking through a parse tree","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":23429,"byte_end":23481,"line_start":232,"line_end":232,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":161},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":24087,"byte_end":24100,"line_start":251,"line_end":251,"column_start":8,"column_end":21},"name":"convert_error","qualname":"::error::convert_error","value":"pub fn convert_error<I: core::ops::Deref<Target = str>>(I, VerboseError<I>)\n-> crate::lib::std::string::String","parent":null,"children":[],"decl_id":null,"docs":" Transforms a `VerboseError` into a trace with input position information\n","sig":null,"attributes":[{"value":"/ Transforms a `VerboseError` into a trace with input position information","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":23916,"byte_end":23992,"line_start":248,"line_end":248,"column_start":1,"column_end":77}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":23993,"byte_end":24018,"line_start":249,"line_end":249,"column_start":1,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2726},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27619,"byte_end":27622,"line_start":367,"line_end":367,"column_start":3,"column_end":6},"name":"Tag","qualname":"::error::ErrorKind::Tag","value":"ErrorKind::Tag","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2728},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27626,"byte_end":27632,"line_start":368,"line_end":368,"column_start":3,"column_end":9},"name":"MapRes","qualname":"::error::ErrorKind::MapRes","value":"ErrorKind::MapRes","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2730},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27636,"byte_end":27642,"line_start":369,"line_end":369,"column_start":3,"column_end":9},"name":"MapOpt","qualname":"::error::ErrorKind::MapOpt","value":"ErrorKind::MapOpt","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2732},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27646,"byte_end":27649,"line_start":370,"line_end":370,"column_start":3,"column_end":6},"name":"Alt","qualname":"::error::ErrorKind::Alt","value":"ErrorKind::Alt","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2734},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27653,"byte_end":27658,"line_start":371,"line_end":371,"column_start":3,"column_end":8},"name":"IsNot","qualname":"::error::ErrorKind::IsNot","value":"ErrorKind::IsNot","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2736},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27662,"byte_end":27665,"line_start":372,"line_end":372,"column_start":3,"column_end":6},"name":"IsA","qualname":"::error::ErrorKind::IsA","value":"ErrorKind::IsA","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2738},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27669,"byte_end":27682,"line_start":373,"line_end":373,"column_start":3,"column_end":16},"name":"SeparatedList","qualname":"::error::ErrorKind::SeparatedList","value":"ErrorKind::SeparatedList","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2740},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27686,"byte_end":27707,"line_start":374,"line_end":374,"column_start":3,"column_end":24},"name":"SeparatedNonEmptyList","qualname":"::error::ErrorKind::SeparatedNonEmptyList","value":"ErrorKind::SeparatedNonEmptyList","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2742},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27711,"byte_end":27716,"line_start":375,"line_end":375,"column_start":3,"column_end":8},"name":"Many0","qualname":"::error::ErrorKind::Many0","value":"ErrorKind::Many0","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2744},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27720,"byte_end":27725,"line_start":376,"line_end":376,"column_start":3,"column_end":8},"name":"Many1","qualname":"::error::ErrorKind::Many1","value":"ErrorKind::Many1","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2746},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27729,"byte_end":27737,"line_start":377,"line_end":377,"column_start":3,"column_end":11},"name":"ManyTill","qualname":"::error::ErrorKind::ManyTill","value":"ErrorKind::ManyTill","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2748},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27741,"byte_end":27746,"line_start":378,"line_end":378,"column_start":3,"column_end":8},"name":"Count","qualname":"::error::ErrorKind::Count","value":"ErrorKind::Count","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2750},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27750,"byte_end":27759,"line_start":379,"line_end":379,"column_start":3,"column_end":12},"name":"TakeUntil","qualname":"::error::ErrorKind::TakeUntil","value":"ErrorKind::TakeUntil","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2752},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27763,"byte_end":27774,"line_start":380,"line_end":380,"column_start":3,"column_end":14},"name":"LengthValue","qualname":"::error::ErrorKind::LengthValue","value":"ErrorKind::LengthValue","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2754},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27778,"byte_end":27788,"line_start":381,"line_end":381,"column_start":3,"column_end":13},"name":"TagClosure","qualname":"::error::ErrorKind::TagClosure","value":"ErrorKind::TagClosure","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2756},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27792,"byte_end":27797,"line_start":382,"line_end":382,"column_start":3,"column_end":8},"name":"Alpha","qualname":"::error::ErrorKind::Alpha","value":"ErrorKind::Alpha","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2758},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27801,"byte_end":27806,"line_start":383,"line_end":383,"column_start":3,"column_end":8},"name":"Digit","qualname":"::error::ErrorKind::Digit","value":"ErrorKind::Digit","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2760},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27810,"byte_end":27818,"line_start":384,"line_end":384,"column_start":3,"column_end":11},"name":"HexDigit","qualname":"::error::ErrorKind::HexDigit","value":"ErrorKind::HexDigit","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2762},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27822,"byte_end":27830,"line_start":385,"line_end":385,"column_start":3,"column_end":11},"name":"OctDigit","qualname":"::error::ErrorKind::OctDigit","value":"ErrorKind::OctDigit","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2764},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27834,"byte_end":27846,"line_start":386,"line_end":386,"column_start":3,"column_end":15},"name":"AlphaNumeric","qualname":"::error::ErrorKind::AlphaNumeric","value":"ErrorKind::AlphaNumeric","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27850,"byte_end":27855,"line_start":387,"line_end":387,"column_start":3,"column_end":8},"name":"Space","qualname":"::error::ErrorKind::Space","value":"ErrorKind::Space","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2768},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27859,"byte_end":27869,"line_start":388,"line_end":388,"column_start":3,"column_end":13},"name":"MultiSpace","qualname":"::error::ErrorKind::MultiSpace","value":"ErrorKind::MultiSpace","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2770},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27873,"byte_end":27886,"line_start":389,"line_end":389,"column_start":3,"column_end":16},"name":"LengthValueFn","qualname":"::error::ErrorKind::LengthValueFn","value":"ErrorKind::LengthValueFn","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2772},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27890,"byte_end":27893,"line_start":390,"line_end":390,"column_start":3,"column_end":6},"name":"Eof","qualname":"::error::ErrorKind::Eof","value":"ErrorKind::Eof","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2774},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27897,"byte_end":27903,"line_start":391,"line_end":391,"column_start":3,"column_end":9},"name":"Switch","qualname":"::error::ErrorKind::Switch","value":"ErrorKind::Switch","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2776},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27907,"byte_end":27914,"line_start":392,"line_end":392,"column_start":3,"column_end":10},"name":"TagBits","qualname":"::error::ErrorKind::TagBits","value":"ErrorKind::TagBits","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2778},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27918,"byte_end":27923,"line_start":393,"line_end":393,"column_start":3,"column_end":8},"name":"OneOf","qualname":"::error::ErrorKind::OneOf","value":"ErrorKind::OneOf","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2780},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27927,"byte_end":27933,"line_start":394,"line_end":394,"column_start":3,"column_end":9},"name":"NoneOf","qualname":"::error::ErrorKind::NoneOf","value":"ErrorKind::NoneOf","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2782},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27937,"byte_end":27941,"line_start":395,"line_end":395,"column_start":3,"column_end":7},"name":"Char","qualname":"::error::ErrorKind::Char","value":"ErrorKind::Char","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2784},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27945,"byte_end":27949,"line_start":396,"line_end":396,"column_start":3,"column_end":7},"name":"CrLf","qualname":"::error::ErrorKind::CrLf","value":"ErrorKind::CrLf","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2786},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27953,"byte_end":27964,"line_start":397,"line_end":397,"column_start":3,"column_end":14},"name":"RegexpMatch","qualname":"::error::ErrorKind::RegexpMatch","value":"ErrorKind::RegexpMatch","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2788},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27968,"byte_end":27981,"line_start":398,"line_end":398,"column_start":3,"column_end":16},"name":"RegexpMatches","qualname":"::error::ErrorKind::RegexpMatches","value":"ErrorKind::RegexpMatches","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2790},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27985,"byte_end":27995,"line_start":399,"line_end":399,"column_start":3,"column_end":13},"name":"RegexpFind","qualname":"::error::ErrorKind::RegexpFind","value":"ErrorKind::RegexpFind","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2792},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27999,"byte_end":28012,"line_start":400,"line_end":400,"column_start":3,"column_end":16},"name":"RegexpCapture","qualname":"::error::ErrorKind::RegexpCapture","value":"ErrorKind::RegexpCapture","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2794},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28016,"byte_end":28030,"line_start":401,"line_end":401,"column_start":3,"column_end":17},"name":"RegexpCaptures","qualname":"::error::ErrorKind::RegexpCaptures","value":"ErrorKind::RegexpCaptures","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2796},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28034,"byte_end":28044,"line_start":402,"line_end":402,"column_start":3,"column_end":13},"name":"TakeWhile1","qualname":"::error::ErrorKind::TakeWhile1","value":"ErrorKind::TakeWhile1","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2798},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28048,"byte_end":28056,"line_start":403,"line_end":403,"column_start":3,"column_end":11},"name":"Complete","qualname":"::error::ErrorKind::Complete","value":"ErrorKind::Complete","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2800},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28060,"byte_end":28063,"line_start":404,"line_end":404,"column_start":3,"column_end":6},"name":"Fix","qualname":"::error::ErrorKind::Fix","value":"ErrorKind::Fix","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2802},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28067,"byte_end":28074,"line_start":405,"line_end":405,"column_start":3,"column_end":10},"name":"Escaped","qualname":"::error::ErrorKind::Escaped","value":"ErrorKind::Escaped","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2804},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28078,"byte_end":28094,"line_start":406,"line_end":406,"column_start":3,"column_end":19},"name":"EscapedTransform","qualname":"::error::ErrorKind::EscapedTransform","value":"ErrorKind::EscapedTransform","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2806},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28098,"byte_end":28106,"line_start":407,"line_end":407,"column_start":3,"column_end":11},"name":"NonEmpty","qualname":"::error::ErrorKind::NonEmpty","value":"ErrorKind::NonEmpty","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2808},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28110,"byte_end":28116,"line_start":408,"line_end":408,"column_start":3,"column_end":9},"name":"ManyMN","qualname":"::error::ErrorKind::ManyMN","value":"ErrorKind::ManyMN","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2810},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28120,"byte_end":28123,"line_start":409,"line_end":409,"column_start":3,"column_end":6},"name":"Not","qualname":"::error::ErrorKind::Not","value":"ErrorKind::Not","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2812},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28127,"byte_end":28138,"line_start":410,"line_end":410,"column_start":3,"column_end":14},"name":"Permutation","qualname":"::error::ErrorKind::Permutation","value":"ErrorKind::Permutation","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2814},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28142,"byte_end":28148,"line_start":411,"line_end":411,"column_start":3,"column_end":9},"name":"Verify","qualname":"::error::ErrorKind::Verify","value":"ErrorKind::Verify","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2816},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28152,"byte_end":28161,"line_start":412,"line_end":412,"column_start":3,"column_end":12},"name":"TakeTill1","qualname":"::error::ErrorKind::TakeTill1","value":"ErrorKind::TakeTill1","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2818},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28165,"byte_end":28176,"line_start":413,"line_end":413,"column_start":3,"column_end":14},"name":"TakeWhileMN","qualname":"::error::ErrorKind::TakeWhileMN","value":"ErrorKind::TakeWhileMN","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2820},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28180,"byte_end":28188,"line_start":414,"line_end":414,"column_start":3,"column_end":11},"name":"TooLarge","qualname":"::error::ErrorKind::TooLarge","value":"ErrorKind::TooLarge","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2822},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28192,"byte_end":28202,"line_start":415,"line_end":415,"column_start":3,"column_end":13},"name":"Many0Count","qualname":"::error::ErrorKind::Many0Count","value":"ErrorKind::Many0Count","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2824},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28206,"byte_end":28216,"line_start":416,"line_end":416,"column_start":3,"column_end":13},"name":"Many1Count","qualname":"::error::ErrorKind::Many1Count","value":"ErrorKind::Many1Count","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2826},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28220,"byte_end":28225,"line_start":417,"line_end":417,"column_start":3,"column_end":8},"name":"Float","qualname":"::error::ErrorKind::Float","value":"ErrorKind::Float","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2828},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28229,"byte_end":28236,"line_start":418,"line_end":418,"column_start":3,"column_end":10},"name":"Satisfy","qualname":"::error::ErrorKind::Satisfy","value":"ErrorKind::Satisfy","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2830},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28240,"byte_end":28244,"line_start":419,"line_end":419,"column_start":3,"column_end":7},"name":"Fail","qualname":"::error::ErrorKind::Fail","value":"ErrorKind::Fail","parent":{"krate":0,"index":2725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2725},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27605,"byte_end":27614,"line_start":366,"line_end":366,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n    Tag,\n    MapRes,\n    MapOpt,\n    Alt,\n    IsNot,\n    IsA,\n    SeparatedList,\n    SeparatedNonEmptyList,\n    Many0,\n    Many1,\n    ManyTill,\n    Count,\n    TakeUntil,\n    LengthValue,\n    TagClosure,\n    Alpha,\n    Digit,\n    HexDigit,\n    OctDigit,\n    AlphaNumeric,\n    Space,\n    MultiSpace,\n    LengthValueFn,\n    Eof,\n    Switch,\n    TagBits,\n    OneOf,\n    NoneOf,\n    Char,\n    CrLf,\n    RegexpMatch,\n    RegexpMatches,\n    RegexpFind,\n    RegexpCapture,\n    RegexpCaptures,\n    TakeWhile1,\n    Complete,\n    Fix,\n    Escaped,\n    EscapedTransform,\n    NonEmpty,\n    ManyMN,\n    Not,\n    Permutation,\n    Verify,\n    TakeTill1,\n    TakeWhileMN,\n    TooLarge,\n    Many0Count,\n    Many1Count,\n    Float,\n    Satisfy,\n    Fail,\n}","parent":null,"children":[{"krate":0,"index":2726},{"krate":0,"index":2728},{"krate":0,"index":2730},{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2736},{"krate":0,"index":2738},{"krate":0,"index":2740},{"krate":0,"index":2742},{"krate":0,"index":2744},{"krate":0,"index":2746},{"krate":0,"index":2748},{"krate":0,"index":2750},{"krate":0,"index":2752},{"krate":0,"index":2754},{"krate":0,"index":2756},{"krate":0,"index":2758},{"krate":0,"index":2760},{"krate":0,"index":2762},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2772},{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2786},{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2792},{"krate":0,"index":2794},{"krate":0,"index":2796},{"krate":0,"index":2798},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2804},{"krate":0,"index":2806},{"krate":0,"index":2808},{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":2822},{"krate":0,"index":2824},{"krate":0,"index":2826},{"krate":0,"index":2828},{"krate":0,"index":2830}],"decl_id":null,"docs":" Indicates which parser returned an error\n","sig":null,"attributes":[{"value":"/ Indicates which parser returned an error","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27454,"byte_end":27498,"line_start":362,"line_end":362,"column_start":1,"column_end":45}},{"value":"rustfmt::skip","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27499,"byte_end":27515,"line_start":363,"line_end":363,"column_start":1,"column_end":17}},{"value":"allow(deprecated, missing_docs)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":27562,"byte_end":27595,"line_start":365,"line_end":365,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":2846},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28332,"byte_end":28344,"line_start":425,"line_end":425,"column_start":8,"column_end":20},"name":"error_to_u32","qualname":"::error::error_to_u32","value":"pub fn error_to_u32(&ErrorKind) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Converts an ErrorKind to a number\n","sig":null,"attributes":[{"value":"rustfmt::skip","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28249,"byte_end":28265,"line_start":422,"line_end":422,"column_start":1,"column_end":17}},{"value":"allow(deprecated)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28266,"byte_end":28286,"line_start":423,"line_end":423,"column_start":1,"column_end":21}},{"value":"/ Converts an ErrorKind to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":28287,"byte_end":28324,"line_start":424,"line_end":424,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2847},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":31042,"byte_end":31053,"line_start":487,"line_end":487,"column_start":10,"column_end":21},"name":"description","qualname":"<ErrorKind>::description","value":"pub fn description(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Converts an ErrorKind to a text description\n","sig":null,"attributes":[{"value":"rustfmt::skip","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":30943,"byte_end":30959,"line_start":484,"line_end":484,"column_start":3,"column_end":19}},{"value":"allow(deprecated)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":30962,"byte_end":30982,"line_start":485,"line_end":485,"column_start":3,"column_end":23}},{"value":"/ Converts an ErrorKind to a text description","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":30985,"byte_end":31032,"line_start":486,"line_end":486,"column_start":3,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":175},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35657,"byte_end":35664,"line_start":590,"line_end":590,"column_start":8,"column_end":15},"name":"dbg_dmp","qualname":"::error::dbg_dmp","value":"pub fn dbg_dmp<'a, F, O, E: std::fmt::Debug>(F, &'static str)\n-> /*impl Trait*/ where F: Fn(&'a [u8]) -> IResult<&'a [u8], O, E>","parent":null,"children":[],"decl_id":null,"docs":" Prints a message and the input if the parser fails.","sig":null,"attributes":[{"value":"/ Prints a message and the input if the parser fails.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":34935,"byte_end":34990,"line_start":567,"line_end":567,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":34991,"byte_end":34994,"line_start":568,"line_end":568,"column_start":1,"column_end":4}},{"value":"/ The message prints the `Error` or `Incomplete`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":34995,"byte_end":35045,"line_start":569,"line_end":569,"column_start":1,"column_end":51}},{"value":"/ and the parser's calling code.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35046,"byte_end":35080,"line_start":570,"line_end":570,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35081,"byte_end":35084,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ It also displays the input in hexdump format","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35085,"byte_end":35133,"line_start":572,"line_end":572,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35134,"byte_end":35137,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35138,"byte_end":35149,"line_start":574,"line_end":574,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, error::dbg_dmp, bytes::complete::tag};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35150,"byte_end":35211,"line_start":575,"line_end":575,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35212,"byte_end":35215,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ fn f(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35216,"byte_end":35261,"line_start":577,"line_end":577,"column_start":1,"column_end":46}},{"value":"/   dbg_dmp(tag(\"abcd\"), \"tag\")(i)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35262,"byte_end":35298,"line_start":578,"line_end":578,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35299,"byte_end":35304,"line_start":579,"line_end":579,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35305,"byte_end":35308,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/   let a = &b\"efghijkl\"[..];","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35309,"byte_end":35340,"line_start":581,"line_end":581,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35341,"byte_end":35344,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ // Will print the following message:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35345,"byte_end":35385,"line_start":583,"line_end":583,"column_start":1,"column_end":41}},{"value":"/ // Error(Position(0, [101, 102, 103, 104, 105, 106, 107, 108])) at l.5 by ' tag ! ( \"abcd\" ) '","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35386,"byte_end":35484,"line_start":584,"line_end":584,"column_start":1,"column_end":99}},{"value":"/ // 00000000        65 66 67 68 69 6a 6b 6c         efghijkl","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35485,"byte_end":35548,"line_start":585,"line_end":585,"column_start":1,"column_end":64}},{"value":"/ f(a);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35549,"byte_end":35558,"line_start":586,"line_end":586,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35559,"byte_end":35566,"line_start":587,"line_end":587,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":35567,"byte_end":35590,"line_start":588,"line_end":588,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":200},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":42223,"byte_end":42230,"line_start":18,"line_end":18,"column_start":10,"column_end":17},"name":"IResult","qualname":"::internal::IResult","value":"Result<(I, O), Err<E>>","parent":null,"children":[],"decl_id":null,"docs":" Holds the result of parsing functions","sig":null,"attributes":[{"value":"/ Holds the result of parsing functions","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":41731,"byte_end":41772,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":41773,"byte_end":41776,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ It depends on the input type `I`, the output type `O`, and the error type `E`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":41777,"byte_end":41858,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ (by default `(I, nom::ErrorKind)`)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":41859,"byte_end":41897,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":41898,"byte_end":41901,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The `Ok` side is a pair containing the remainder of the input (the part of the data that","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":41902,"byte_end":41994,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/ was not parsed) and the produced value. The `Err` side contains an instance of `nom::Err`.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":41995,"byte_end":42089,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":42090,"byte_end":42093,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Outside of the parsing code, you can use the [Finish::finish] method to convert","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":42094,"byte_end":42177,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/ it to a more common result type","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":42178,"byte_end":42213,"line_start":17,"line_end":17,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":204},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":42367,"byte_end":42373,"line_start":21,"line_end":21,"column_start":11,"column_end":17},"name":"Finish","qualname":"::internal::Finish","value":"Finish<I, O, E>","parent":null,"children":[{"krate":0,"index":208}],"decl_id":null,"docs":" Helper trait to convert a parser's result to a more manageable type\n","sig":null,"attributes":[{"value":"/ Helper trait to convert a parser's result to a more manageable type","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":42285,"byte_end":42356,"line_start":20,"line_end":20,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":43119,"byte_end":43125,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"name":"finish","qualname":"::internal::Finish::finish","value":"pub fn finish(Self) -> Result<(I, O), E>","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" converts the parser's result to a type that is more consumable by error\n management libraries. It keeps the same `Ok` branch, and merges `Err::Error`\n and `Err::Failure` into the `Err` side.","sig":null,"attributes":[{"value":"/ converts the parser's result to a type that is more consumable by error","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":42387,"byte_end":42462,"line_start":22,"line_end":22,"column_start":3,"column_end":78}},{"value":"/ management libraries. It keeps the same `Ok` branch, and merges `Err::Error`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":42465,"byte_end":42545,"line_start":23,"line_end":23,"column_start":3,"column_end":83}},{"value":"/ and `Err::Failure` into the `Err` side.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":42548,"byte_end":42591,"line_start":24,"line_end":24,"column_start":3,"column_end":46}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":42594,"byte_end":42597,"line_start":25,"line_end":25,"column_start":3,"column_end":6}},{"value":"/ *warning*: if the result is `Err(Err::Incomplete(_))`, this method will panic.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":42600,"byte_end":42682,"line_start":26,"line_end":26,"column_start":3,"column_end":85}},{"value":"/ - \"complete\" parsers: It will not be an issue, `Incomplete` is never used","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":42685,"byte_end":42762,"line_start":27,"line_end":27,"column_start":3,"column_end":80}},{"value":"/ - \"streaming\" parsers: `Incomplete` will be returned if there's not enough data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":42765,"byte_end":42848,"line_start":28,"line_end":28,"column_start":3,"column_end":86}},{"value":"/ for the parser to decide, and you should gather more data before parsing again.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":42851,"byte_end":42934,"line_start":29,"line_end":29,"column_start":3,"column_end":86}},{"value":"/ Once the parser returns either `Ok(_)`, `Err(Err::Error(_))` or `Err(Err::Failure(_))`,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":42937,"byte_end":43028,"line_start":30,"line_end":30,"column_start":3,"column_end":94}},{"value":"/ you can get out of the parsing loop and call `finish()` on the parser's result","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":43031,"byte_end":43113,"line_start":31,"line_end":31,"column_start":3,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2849},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":43871,"byte_end":43878,"line_start":52,"line_end":52,"column_start":3,"column_end":10},"name":"Unknown","qualname":"::internal::Needed::Unknown","value":"Needed::Unknown","parent":{"krate":0,"index":2848},"children":[],"decl_id":null,"docs":" Needs more data, but we do not know how much\n","sig":null,"attributes":[{"value":"/ Needs more data, but we do not know how much","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":43820,"byte_end":43868,"line_start":51,"line_end":51,"column_start":3,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2851},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":43929,"byte_end":43933,"line_start":54,"line_end":54,"column_start":3,"column_end":7},"name":"Size","qualname":"::internal::Needed::Size","value":"Needed::Size(NonZeroUsize)","parent":{"krate":0,"index":2848},"children":[],"decl_id":null,"docs":" Contains the required data size in bytes\n","sig":null,"attributes":[{"value":"/ Contains the required data size in bytes","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":43882,"byte_end":43926,"line_start":53,"line_end":53,"column_start":3,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":2848},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":43809,"byte_end":43815,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Needed","qualname":"::internal::Needed","value":"pub enum Needed { Unknown, Size(NonZeroUsize), }","parent":null,"children":[{"krate":0,"index":2849},{"krate":0,"index":2851}],"decl_id":null,"docs":" Contains information on needed data if a parser returned `Incomplete`\n","sig":null,"attributes":[{"value":"/ Contains information on needed data if a parser returned `Incomplete`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":43618,"byte_end":43691,"line_start":47,"line_end":47,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":44058,"byte_end":44061,"line_start":59,"line_end":59,"column_start":10,"column_end":13},"name":"new","qualname":"<Needed>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates `Needed` instance, returns `Needed::Unknown` if the argument is zero\n","sig":null,"attributes":[{"value":"/ Creates `Needed` instance, returns `Needed::Unknown` if the argument is zero","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":43968,"byte_end":44048,"line_start":58,"line_end":58,"column_start":3,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":44252,"byte_end":44260,"line_start":67,"line_end":67,"column_start":10,"column_end":18},"name":"is_known","qualname":"<Needed>::is_known","value":"pub fn is_known(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if we know how many bytes we need\n","sig":null,"attributes":[{"value":"/ Indicates if we know how many bytes we need","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":44195,"byte_end":44242,"line_start":66,"line_end":66,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":44411,"byte_end":44414,"line_start":73,"line_end":73,"column_start":10,"column_end":13},"name":"map","qualname":"<Needed>::map","value":"pub fn map<F: Fn(NonZeroUsize) -> usize>(Self, F) -> Needed","parent":null,"children":[],"decl_id":null,"docs":" Maps a `Needed` to `Needed` by applying a function to a contained `Size` value.\n","sig":null,"attributes":[{"value":"/ Maps a `Needed` to `Needed` by applying a function to a contained `Size` value.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":44306,"byte_end":44389,"line_start":71,"line_end":71,"column_start":3,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":44392,"byte_end":44401,"line_start":72,"line_end":72,"column_start":3,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2868},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45513,"byte_end":45523,"line_start":99,"line_end":99,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::internal::Err::Incomplete","value":"Err::Incomplete(Needed)","parent":{"krate":0,"index":2866},"children":[],"decl_id":null,"docs":" There was not enough data\n","sig":null,"attributes":[{"value":"/ There was not enough data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45481,"byte_end":45510,"line_start":98,"line_end":98,"column_start":3,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2871},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45579,"byte_end":45584,"line_start":101,"line_end":101,"column_start":3,"column_end":8},"name":"Error","qualname":"::internal::Err::Error","value":"Err::Error(E)","parent":{"krate":0,"index":2866},"children":[],"decl_id":null,"docs":" The parser had an error (recoverable)\n","sig":null,"attributes":[{"value":"/ The parser had an error (recoverable)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45535,"byte_end":45576,"line_start":100,"line_end":100,"column_start":3,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2874},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45747,"byte_end":45754,"line_start":105,"line_end":105,"column_start":3,"column_end":10},"name":"Failure","qualname":"::internal::Err::Failure","value":"Err::Failure(E)","parent":{"krate":0,"index":2866},"children":[],"decl_id":null,"docs":" The parser had an unrecoverable error: we got to the right\n branch and we know other branches won't work, so backtrack\n as fast as possible\n","sig":null,"attributes":[{"value":"/ The parser had an unrecoverable error: we got to the right","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45591,"byte_end":45653,"line_start":102,"line_end":102,"column_start":3,"column_end":65}},{"value":"/ branch and we know other branches won't work, so backtrack","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45656,"byte_end":45718,"line_start":103,"line_end":103,"column_start":3,"column_end":65}},{"value":"/ as fast as possible","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45721,"byte_end":45744,"line_start":104,"line_end":104,"column_start":3,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":2866},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45470,"byte_end":45473,"line_start":97,"line_end":97,"column_start":10,"column_end":13},"name":"Err","qualname":"::internal::Err","value":"pub enum Err<E> { Incomplete(Needed), Error(E), Failure(E), }","parent":null,"children":[{"krate":0,"index":2868},{"krate":0,"index":2871},{"krate":0,"index":2874}],"decl_id":null,"docs":" The `Err` enum indicates the parser was not successful","sig":null,"attributes":[{"value":"/ The `Err` enum indicates the parser was not successful","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":44561,"byte_end":44619,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":44620,"byte_end":44623,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ It has three cases:","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":44624,"byte_end":44647,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":44648,"byte_end":44651,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ * `Incomplete` indicates that more data is needed to decide. The `Needed` enum","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":44652,"byte_end":44734,"line_start":85,"line_end":85,"column_start":1,"column_end":83}},{"value":"/ can contain how many additional bytes are necessary. If you are sure your parser","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":44735,"byte_end":44819,"line_start":86,"line_end":86,"column_start":1,"column_end":85}},{"value":"/ is working on full data, you can wrap your parser with the `complete` combinator","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":44820,"byte_end":44904,"line_start":87,"line_end":87,"column_start":1,"column_end":85}},{"value":"/ to transform that case in `Error`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":44905,"byte_end":44942,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/ * `Error` means some parser did not succeed, but another one might (as an example,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":44943,"byte_end":45029,"line_start":89,"line_end":89,"column_start":1,"column_end":87}},{"value":"/ when testing different branches of an `alt` combinator)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45030,"byte_end":45089,"line_start":90,"line_end":90,"column_start":1,"column_end":60}},{"value":"/ * `Failure` indicates an unrecoverable error. As an example, if you recognize a prefix","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45090,"byte_end":45180,"line_start":91,"line_end":91,"column_start":1,"column_end":91}},{"value":"/ to decide on the next parser to apply, and that parser fails, you know there's no need","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45181,"byte_end":45271,"line_start":92,"line_end":92,"column_start":1,"column_end":91}},{"value":"/ to try other parsers, you were already in the right branch, so the data is invalid","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45272,"byte_end":45358,"line_start":93,"line_end":93,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45359,"byte_end":45362,"line_start":94,"line_end":94,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45828,"byte_end":45841,"line_start":110,"line_end":110,"column_start":10,"column_end":23},"name":"is_incomplete","qualname":"<Err<E>>::is_incomplete","value":"pub fn is_incomplete(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the result is Incomplete\n","sig":null,"attributes":[{"value":"/ Tests if the result is Incomplete","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45781,"byte_end":45818,"line_start":109,"line_end":109,"column_start":3,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":46006,"byte_end":46009,"line_start":119,"line_end":119,"column_start":10,"column_end":13},"name":"map","qualname":"<Err<E>>::map","value":"pub fn map<E2, F>(Self, F) -> Err<E2> where F: FnOnce(E) -> E2","parent":null,"children":[],"decl_id":null,"docs":" Applies the given function to the inner error\n","sig":null,"attributes":[{"value":"/ Applies the given function to the inner error","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45947,"byte_end":45996,"line_start":118,"line_end":118,"column_start":3,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":46326,"byte_end":46333,"line_start":131,"line_end":131,"column_start":10,"column_end":17},"name":"convert","qualname":"<Err<E>>::convert","value":"pub fn convert<F>(Err<F>) -> Self where E: From<F>","parent":null,"children":[],"decl_id":null,"docs":" Automatically converts between errors if the underlying type supports it\n","sig":null,"attributes":[{"value":"/ Automatically converts between errors if the underlying type supports it","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":46240,"byte_end":46316,"line_start":130,"line_end":130,"column_start":3,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":46563,"byte_end":46572,"line_start":141,"line_end":141,"column_start":10,"column_end":19},"name":"map_input","qualname":"<Err<(T, ErrorKind)>>::map_input","value":"pub fn map_input<U, F>(Self, F) -> Err<(U, ErrorKind)> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps `Err<(T, ErrorKind)>` to `Err<(U, ErrorKind)>` with the given `F: T -> U`\n","sig":null,"attributes":[{"value":"/ Maps `Err<(T, ErrorKind)>` to `Err<(U, ErrorKind)>` with the given `F: T -> U`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":46471,"byte_end":46553,"line_start":140,"line_end":140,"column_start":3,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":46976,"byte_end":46985,"line_start":155,"line_end":155,"column_start":10,"column_end":19},"name":"map_input","qualname":"<Err<error::Error<T>>>::map_input","value":"pub fn map_input<U, F>(Self, F) -> Err<error::Error<U>> where F: FnOnce(T) ->\nU","parent":null,"children":[],"decl_id":null,"docs":" Maps `Err<error::Error<T>>` to `Err<error::Error<U>>` with the given `F: T -> U`\n","sig":null,"attributes":[{"value":"/ Maps `Err<error::Error<T>>` to `Err<error::Error<U>>` with the given `F: T -> U`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":46882,"byte_end":46966,"line_start":154,"line_end":154,"column_start":3,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":47642,"byte_end":47650,"line_start":179,"line_end":179,"column_start":10,"column_end":18},"name":"to_owned","qualname":"<Err<(&'_ [u8], ErrorKind)>>::to_owned","value":"pub fn to_owned(Self) -> Err<(Vec<u8>, ErrorKind)>","parent":null,"children":[],"decl_id":null,"docs":" Obtaining ownership\n","sig":null,"attributes":[{"value":"/ Obtaining ownership","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":47546,"byte_end":47569,"line_start":177,"line_end":177,"column_start":3,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":47887,"byte_end":47895,"line_start":188,"line_end":188,"column_start":10,"column_end":18},"name":"to_owned","qualname":"<Err<(&'_ str, ErrorKind)>>::to_owned","value":"pub fn to_owned(Self) -> Err<(String, ErrorKind)>","parent":null,"children":[],"decl_id":null,"docs":" Obtaining ownership\n","sig":null,"attributes":[{"value":"/ Obtaining ownership","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":47791,"byte_end":47814,"line_start":186,"line_end":186,"column_start":3,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":48133,"byte_end":48141,"line_start":197,"line_end":197,"column_start":10,"column_end":18},"name":"to_owned","qualname":"<Err<error::Error<&'_ [u8]>>>::to_owned","value":"pub fn to_owned(Self) -> Err<error::Error<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Obtaining ownership\n","sig":null,"attributes":[{"value":"/ Obtaining ownership","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":48037,"byte_end":48060,"line_start":195,"line_end":195,"column_start":3,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":48380,"byte_end":48388,"line_start":206,"line_end":206,"column_start":10,"column_end":18},"name":"to_owned","qualname":"<Err<error::Error<&'_ str>>>::to_owned","value":"pub fn to_owned(Self) -> Err<error::Error<String>>","parent":null,"children":[],"decl_id":null,"docs":" Obtaining ownership\n","sig":null,"attributes":[{"value":"/ Obtaining ownership","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":48284,"byte_end":48307,"line_start":204,"line_end":204,"column_start":3,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":266},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":49214,"byte_end":49220,"line_start":241,"line_end":241,"column_start":11,"column_end":17},"name":"Parser","qualname":"::internal::Parser","value":"Parser<I, O, E>","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":286}],"decl_id":null,"docs":" All nom parsers implement this trait\n","sig":null,"attributes":[{"value":"/ All nom parsers implement this trait","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":49163,"byte_end":49203,"line_start":240,"line_end":240,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":49374,"byte_end":49379,"line_start":244,"line_end":244,"column_start":6,"column_end":11},"name":"parse","qualname":"::internal::Parser::parse","value":"pub fn parse(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" A parser takes in input type, and returns a `Result` containing\n either the remaining input and the output value, or an error\n","sig":null,"attributes":[{"value":"/ A parser takes in input type, and returns a `Result` containing","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":49234,"byte_end":49301,"line_start":242,"line_end":242,"column_start":3,"column_end":70}},{"value":"/ either the remaining input and the output value, or an error","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":49304,"byte_end":49368,"line_start":243,"line_end":243,"column_start":3,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":49478,"byte_end":49481,"line_start":247,"line_end":247,"column_start":6,"column_end":9},"name":"map","qualname":"::internal::Parser::map","value":"pub fn map<G, O2>(Self, G) -> Map<Self, G, O> where G: Fn(O) -> O2,\nSelf: core::marker::Sized","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Maps a function over the result of a parser\n","sig":null,"attributes":[{"value":"/ Maps a function over the result of a parser","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":49425,"byte_end":49472,"line_start":246,"line_end":246,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":49777,"byte_end":49785,"line_start":260,"line_end":260,"column_start":6,"column_end":14},"name":"flat_map","qualname":"::internal::Parser::flat_map","value":"pub fn flat_map<G, H, O2>(Self, G) -> FlatMap<Self, G, O> where G: Fn(O) -> H,\nH: Parser<I, O2, E>, Self: core::marker::Sized","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Creates a second parser from the output of the first one, then apply over the rest of the input\n","sig":null,"attributes":[{"value":"/ Creates a second parser from the output of the first one, then apply over the rest of the input","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":49672,"byte_end":49771,"line_start":259,"line_end":259,"column_start":3,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":50077,"byte_end":50085,"line_start":274,"line_end":274,"column_start":6,"column_end":14},"name":"and_then","qualname":"::internal::Parser::and_then","value":"pub fn and_then<G, O2>(Self, G) -> AndThen<Self, G, O> where\nG: Parser<O, O2, E>, Self: core::marker::Sized","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Applies a second parser over the output of the first one\n","sig":null,"attributes":[{"value":"/ Applies a second parser over the output of the first one","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":50011,"byte_end":50071,"line_start":273,"line_end":273,"column_start":3,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":50375,"byte_end":50378,"line_start":287,"line_end":287,"column_start":6,"column_end":9},"name":"and","qualname":"::internal::Parser::and","value":"pub fn and<G, O2>(Self, G) -> And<Self, G> where G: Parser<I, O2, E>,\nSelf: core::marker::Sized","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Applies a second parser after the first one, return their results as a tuple\n","sig":null,"attributes":[{"value":"/ Applies a second parser after the first one, return their results as a tuple","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":50289,"byte_end":50369,"line_start":286,"line_end":286,"column_start":3,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":50584,"byte_end":50586,"line_start":296,"line_end":296,"column_start":6,"column_end":8},"name":"or","qualname":"::internal::Parser::or","value":"pub fn or<G>(Self, G) -> Or<Self, G> where G: Parser<I, O, E>,\nSelf: core::marker::Sized","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Applies a second parser over the input if the first one failed\n","sig":null,"attributes":[{"value":"/ Applies a second parser over the input if the first one failed","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":50512,"byte_end":50578,"line_start":295,"line_end":295,"column_start":3,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":50848,"byte_end":50852,"line_start":306,"line_end":306,"column_start":6,"column_end":10},"name":"into","qualname":"::internal::Parser::into","value":"pub fn into<O2: From<O>, E2: From<E>>(Self) -> Into<Self, O, O2, E, E2> where\nSelf: core::marker::Sized","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" automatically converts the parser's output and error values to another type, as long as they\n implement the `From` trait\n","sig":null,"attributes":[{"value":"/ automatically converts the parser's output and error values to another type, as long as they","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":50713,"byte_end":50809,"line_start":304,"line_end":304,"column_start":3,"column_end":99}},{"value":"/ implement the `From` trait","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":50812,"byte_end":50842,"line_start":305,"line_end":305,"column_start":3,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":305},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":51686,"byte_end":51689,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"Map","qualname":"::internal::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"decl_id":null,"docs":" Implementation of `Parser::map`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::map`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":51576,"byte_end":51611,"line_start":339,"line_end":339,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":321},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":52134,"byte_end":52141,"line_start":358,"line_end":358,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::internal::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"decl_id":null,"docs":" Implementation of `Parser::flat_map`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::flat_map`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":52019,"byte_end":52059,"line_start":356,"line_end":356,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":338},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":52574,"byte_end":52581,"line_start":375,"line_end":375,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::internal::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"decl_id":null,"docs":" Implementation of `Parser::and_then`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::and_then`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":52459,"byte_end":52499,"line_start":373,"line_end":373,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":354},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":53021,"byte_end":53024,"line_start":393,"line_end":393,"column_start":12,"column_end":15},"name":"And","qualname":"::internal::And","value":"And {  }","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358}],"decl_id":null,"docs":" Implementation of `Parser::and`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::and`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":52911,"byte_end":52946,"line_start":391,"line_end":391,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":368},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":53425,"byte_end":53427,"line_start":410,"line_end":410,"column_start":12,"column_end":14},"name":"Or","qualname":"::internal::Or","value":"Or {  }","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"decl_id":null,"docs":" Implementation of `Parser::or`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::or`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":53316,"byte_end":53350,"line_start":408,"line_end":408,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":381},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":53951,"byte_end":53955,"line_start":431,"line_end":431,"column_start":12,"column_end":16},"name":"Into","qualname":"::internal::Into","value":"Into {  }","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391}],"decl_id":null,"docs":" Implementation of `Parser::into`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::into`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":53840,"byte_end":53876,"line_start":429,"line_end":429,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":460},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":55946,"byte_end":55957,"line_start":18,"line_end":18,"column_start":11,"column_end":22},"name":"InputLength","qualname":"::traits::InputLength","value":"InputLength","parent":null,"children":[{"krate":0,"index":461}],"decl_id":null,"docs":" Abstract method to calculate the input length\n","sig":null,"attributes":[{"value":"/ Abstract method to calculate the input length","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":55886,"byte_end":55935,"line_start":17,"line_end":17,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":56065,"byte_end":56074,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"name":"input_len","qualname":"::traits::InputLength::input_len","value":"pub fn input_len(&Self) -> usize","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" Calculates the input length, as indicated by its name,\n and the name of the trait itself\n","sig":null,"attributes":[{"value":"/ Calculates the input length, as indicated by its name,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":55962,"byte_end":56020,"line_start":19,"line_end":19,"column_start":3,"column_end":61}},{"value":"/ and the name of the trait itself","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":56023,"byte_end":56059,"line_start":20,"line_end":20,"column_start":3,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":472},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":56649,"byte_end":56655,"line_start":48,"line_end":48,"column_start":11,"column_end":17},"name":"Offset","qualname":"::traits::Offset","value":"Offset","parent":null,"children":[{"krate":0,"index":473}],"decl_id":null,"docs":" Useful functions to calculate the offset between slices and show a hexdump of a slice\n","sig":null,"attributes":[{"value":"/ Useful functions to calculate the offset between slices and show a hexdump of a slice","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":56549,"byte_end":56638,"line_start":47,"line_end":47,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":56742,"byte_end":56748,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"name":"offset","qualname":"::traits::Offset::offset","value":"pub fn offset(&Self, &Self) -> usize","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Offset between the first byte of self and the first byte of the argument\n","sig":null,"attributes":[{"value":"/ Offset between the first byte of self and the first byte of the argument","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":56660,"byte_end":56736,"line_start":49,"line_end":49,"column_start":3,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":484},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":57542,"byte_end":57549,"line_start":90,"line_end":90,"column_start":11,"column_end":18},"name":"AsBytes","qualname":"::traits::AsBytes","value":"AsBytes","parent":null,"children":[{"krate":0,"index":485}],"decl_id":null,"docs":" Helper trait for types that can be viewed as a byte slice\n","sig":null,"attributes":[{"value":"/ Helper trait for types that can be viewed as a byte slice","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":57470,"byte_end":57531,"line_start":89,"line_end":89,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":57600,"byte_end":57608,"line_start":92,"line_end":92,"column_start":6,"column_end":14},"name":"as_bytes","qualname":"::traits::AsBytes::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Casts the input type to a byte slice\n","sig":null,"attributes":[{"value":"/ Casts the input type to a byte slice","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":57554,"byte_end":57594,"line_start":91,"line_end":91,"column_start":3,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":497},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":58600,"byte_end":58606,"line_start":151,"line_end":151,"column_start":11,"column_end":17},"name":"AsChar","qualname":"::traits::AsChar","value":"AsChar","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"decl_id":null,"docs":" Transforms common types to a char for basic token parsing\n","sig":null,"attributes":[{"value":"/ Transforms common types to a char for basic token parsing","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":58528,"byte_end":58589,"line_start":150,"line_end":150,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":58643,"byte_end":58650,"line_start":153,"line_end":153,"column_start":6,"column_end":13},"name":"as_char","qualname":"::traits::AsChar::as_char","value":"pub fn as_char(Self) -> char","parent":{"krate":0,"index":497},"children":[],"decl_id":null,"docs":" makes a char from self\n","sig":null,"attributes":[{"value":"/ makes a char from self","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":58611,"byte_end":58637,"line_start":152,"line_end":152,"column_start":3,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":58827,"byte_end":58835,"line_start":159,"line_end":159,"column_start":6,"column_end":14},"name":"is_alpha","qualname":"::traits::AsChar::is_alpha","value":"pub fn is_alpha(Self) -> bool","parent":{"krate":0,"index":497},"children":[],"decl_id":null,"docs":" Tests that self is an alphabetic character","sig":null,"attributes":[{"value":"/ Tests that self is an alphabetic character","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":58669,"byte_end":58715,"line_start":155,"line_end":155,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":58718,"byte_end":58721,"line_start":156,"line_end":156,"column_start":3,"column_end":6}},{"value":"/ Warning: for `&str` it recognizes alphabetic","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":58724,"byte_end":58772,"line_start":157,"line_end":157,"column_start":3,"column_end":51}},{"value":"/ characters outside of the 52 ASCII letters","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":58775,"byte_end":58821,"line_start":158,"line_end":158,"column_start":3,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":58931,"byte_end":58942,"line_start":163,"line_end":163,"column_start":6,"column_end":17},"name":"is_alphanum","qualname":"::traits::AsChar::is_alphanum","value":"pub fn is_alphanum(Self) -> bool","parent":{"krate":0,"index":497},"children":[],"decl_id":null,"docs":" Tests that self is an alphabetic character\n or a decimal digit\n","sig":null,"attributes":[{"value":"/ Tests that self is an alphabetic character","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":58854,"byte_end":58900,"line_start":161,"line_end":161,"column_start":3,"column_end":49}},{"value":"/ or a decimal digit","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":58903,"byte_end":58925,"line_start":162,"line_end":162,"column_start":3,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":59004,"byte_end":59016,"line_start":165,"line_end":165,"column_start":6,"column_end":18},"name":"is_dec_digit","qualname":"::traits::AsChar::is_dec_digit","value":"pub fn is_dec_digit(Self) -> bool","parent":{"krate":0,"index":497},"children":[],"decl_id":null,"docs":" Tests that self is a decimal digit\n","sig":null,"attributes":[{"value":"/ Tests that self is a decimal digit","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":58960,"byte_end":58998,"line_start":164,"line_end":164,"column_start":3,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":59075,"byte_end":59087,"line_start":167,"line_end":167,"column_start":6,"column_end":18},"name":"is_hex_digit","qualname":"::traits::AsChar::is_hex_digit","value":"pub fn is_hex_digit(Self) -> bool","parent":{"krate":0,"index":497},"children":[],"decl_id":null,"docs":" Tests that self is an hex digit\n","sig":null,"attributes":[{"value":"/ Tests that self is an hex digit","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":59034,"byte_end":59069,"line_start":166,"line_end":166,"column_start":3,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":59148,"byte_end":59160,"line_start":169,"line_end":169,"column_start":6,"column_end":18},"name":"is_oct_digit","qualname":"::traits::AsChar::is_oct_digit","value":"pub fn is_oct_digit(Self) -> bool","parent":{"krate":0,"index":497},"children":[],"decl_id":null,"docs":" Tests that self is an octal digit\n","sig":null,"attributes":[{"value":"/ Tests that self is an octal digit","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":59105,"byte_end":59142,"line_start":168,"line_end":168,"column_start":3,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":59218,"byte_end":59221,"line_start":171,"line_end":171,"column_start":6,"column_end":9},"name":"len","qualname":"::traits::AsChar::len","value":"pub fn len(Self) -> usize","parent":{"krate":0,"index":497},"children":[],"decl_id":null,"docs":" Gets the len in bytes for self\n","sig":null,"attributes":[{"value":"/ Gets the len in bytes for self","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":59178,"byte_end":59212,"line_start":170,"line_end":170,"column_start":3,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":539},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":61760,"byte_end":61769,"line_start":302,"line_end":302,"column_start":11,"column_end":20},"name":"InputIter","qualname":"::traits::InputIter","value":"InputIter","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":547}],"decl_id":null,"docs":" Abstracts common iteration operations on the input type\n","sig":null,"attributes":[{"value":"/ Abstracts common iteration operations on the input type","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":61690,"byte_end":61749,"line_start":301,"line_end":301,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":540},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":61902,"byte_end":61906,"line_start":306,"line_end":306,"column_start":8,"column_end":12},"name":"Item","qualname":"::traits::InputIter::Item","value":"type Item;","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":" The current input type is a sequence of that `Item` type.","sig":null,"attributes":[{"value":"/ The current input type is a sequence of that `Item` type.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":61774,"byte_end":61835,"line_start":303,"line_end":303,"column_start":3,"column_end":64}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":61838,"byte_end":61841,"line_start":304,"line_end":304,"column_start":3,"column_end":6}},{"value":"/ Example: `u8` for `&[u8]` or `char` for `&str`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":61844,"byte_end":61894,"line_start":305,"line_end":305,"column_start":3,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":541},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62116,"byte_end":62120,"line_start":310,"line_end":310,"column_start":8,"column_end":12},"name":"Iter","qualname":"::traits::InputIter::Iter","value":"type Iter: Iterator<Item = (usize, Self::Item)>;","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":" An iterator over the input type, producing the item and its position\n for use with [Slice]. If we're iterating over `&str`, the position\n corresponds to the byte index of the character\n","sig":null,"attributes":[{"value":"/ An iterator over the input type, producing the item and its position","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":61910,"byte_end":61982,"line_start":307,"line_end":307,"column_start":3,"column_end":75}},{"value":"/ for use with [Slice]. If we're iterating over `&str`, the position","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":61985,"byte_end":62055,"line_start":308,"line_end":308,"column_start":3,"column_end":73}},{"value":"/ corresponds to the byte index of the character","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62058,"byte_end":62108,"line_start":309,"line_end":309,"column_start":3,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":542},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62226,"byte_end":62234,"line_start":313,"line_end":313,"column_start":8,"column_end":16},"name":"IterElem","qualname":"::traits::InputIter::IterElem","value":"type IterElem: Iterator<Item = Self::Item>;","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":" An iterator over the input type, producing the item\n","sig":null,"attributes":[{"value":"/ An iterator over the input type, producing the item","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62163,"byte_end":62218,"line_start":312,"line_end":312,"column_start":3,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62338,"byte_end":62350,"line_start":316,"line_end":316,"column_start":6,"column_end":18},"name":"iter_indices","qualname":"::traits::InputIter::iter_indices","value":"pub fn iter_indices(&Self) -> Self::Iter","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":" Returns an iterator over the elements and their byte offsets\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the elements and their byte offsets","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62268,"byte_end":62332,"line_start":315,"line_end":315,"column_start":3,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62422,"byte_end":62435,"line_start":318,"line_end":318,"column_start":6,"column_end":19},"name":"iter_elements","qualname":"::traits::InputIter::iter_elements","value":"pub fn iter_elements(&Self) -> Self::IterElem","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":" Returns an iterator over the elements\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the elements","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62375,"byte_end":62416,"line_start":317,"line_end":317,"column_start":3,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62512,"byte_end":62520,"line_start":320,"line_end":320,"column_start":6,"column_end":14},"name":"position","qualname":"::traits::InputIter::position","value":"pub fn position<P>(&Self, P) -> Option<usize> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":" Finds the byte position of the element\n","sig":null,"attributes":[{"value":"/ Finds the byte position of the element","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62464,"byte_end":62506,"line_start":319,"line_end":319,"column_start":3,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62674,"byte_end":62685,"line_start":324,"line_end":324,"column_start":6,"column_end":17},"name":"slice_index","qualname":"::traits::InputIter::slice_index","value":"pub fn slice_index(&Self, usize) -> Result<usize, Needed>","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":" Get the byte offset from the element's position in the stream\n","sig":null,"attributes":[{"value":"/ Get the byte offset from the element's position in the stream","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62603,"byte_end":62668,"line_start":323,"line_end":323,"column_start":3,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":548},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62779,"byte_end":62788,"line_start":328,"line_end":328,"column_start":11,"column_end":20},"name":"InputTake","qualname":"::traits::InputTake","value":"InputTake: Sized","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550}],"decl_id":null,"docs":" Abstracts slicing operations\n","sig":null,"attributes":[{"value":"/ Abstracts slicing operations","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62736,"byte_end":62768,"line_start":327,"line_end":327,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62868,"byte_end":62872,"line_start":330,"line_end":330,"column_start":6,"column_end":10},"name":"take","qualname":"::traits::InputTake::take","value":"pub fn take(&Self, usize) -> Self","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Returns a slice of `count` bytes. panics if count > length\n","sig":null,"attributes":[{"value":"/ Returns a slice of `count` bytes. panics if count > length","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62800,"byte_end":62862,"line_start":329,"line_end":329,"column_start":3,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62984,"byte_end":62994,"line_start":332,"line_end":332,"column_start":6,"column_end":16},"name":"take_split","qualname":"::traits::InputTake::take_split","value":"pub fn take_split(&Self, usize) -> (Self, Self)","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Split the stream at the `count` byte offset. panics if count > length\n","sig":null,"attributes":[{"value":"/ Split the stream at the `count` byte offset. panics if count > length","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62905,"byte_end":62978,"line_start":331,"line_end":331,"column_start":3,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":580},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65594,"byte_end":65612,"line_start":439,"line_end":439,"column_start":11,"column_end":29},"name":"UnspecializedInput","qualname":"::traits::UnspecializedInput","value":"UnspecializedInput","parent":null,"children":[],"decl_id":null,"docs":" Dummy trait used for default implementations (currently only used for `InputTakeAtPosition` and `Compare`).","sig":null,"attributes":[{"value":"/ Dummy trait used for default implementations (currently only used for `InputTakeAtPosition` and `Compare`).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65029,"byte_end":65140,"line_start":430,"line_end":430,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65141,"byte_end":65144,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ When implementing a custom input type, it is possible to use directly the","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65145,"byte_end":65222,"line_start":432,"line_end":432,"column_start":1,"column_end":78}},{"value":"/ default implementation: If the input type implements `InputLength`, `InputIter`,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65223,"byte_end":65307,"line_start":433,"line_end":433,"column_start":1,"column_end":85}},{"value":"/ `InputTake` and `Clone`, you can implement `UnspecializedInput` and get","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65308,"byte_end":65383,"line_start":434,"line_end":434,"column_start":1,"column_end":76}},{"value":"/ a default version of `InputTakeAtPosition` and `Compare`.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65384,"byte_end":65445,"line_start":435,"line_end":435,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65446,"byte_end":65449,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ For performance reasons, you might want to write a custom implementation of","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65450,"byte_end":65529,"line_start":437,"line_end":437,"column_start":1,"column_end":80}},{"value":"/ `InputTakeAtPosition` (like the one for `&[u8]`).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65530,"byte_end":65583,"line_start":438,"line_end":438,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":581},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65811,"byte_end":65830,"line_start":444,"line_end":444,"column_start":11,"column_end":30},"name":"InputTakeAtPosition","qualname":"::traits::InputTakeAtPosition","value":"InputTakeAtPosition: Sized","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592}],"decl_id":null,"docs":" Methods to take as much input as possible until the provided function returns true for the current element.","sig":null,"attributes":[{"value":"/ Methods to take as much input as possible until the provided function returns true for the current element.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65617,"byte_end":65728,"line_start":441,"line_end":441,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65729,"byte_end":65732,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ A large part of nom's basic parsers are built using this trait.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65733,"byte_end":65800,"line_start":443,"line_end":443,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":582},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65970,"byte_end":65974,"line_start":448,"line_end":448,"column_start":8,"column_end":12},"name":"Item","qualname":"::traits::InputTakeAtPosition::Item","value":"type Item;","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" The current input type is a sequence of that `Item` type.","sig":null,"attributes":[{"value":"/ The current input type is a sequence of that `Item` type.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65842,"byte_end":65903,"line_start":445,"line_end":445,"column_start":3,"column_end":64}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65906,"byte_end":65909,"line_start":446,"line_end":446,"column_start":3,"column_end":6}},{"value":"/ Example: `u8` for `&[u8]` or `char` for `&str`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65912,"byte_end":65962,"line_start":447,"line_end":447,"column_start":3,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":66231,"byte_end":66248,"line_start":454,"line_end":454,"column_start":6,"column_end":23},"name":"split_at_position","qualname":"::traits::InputTakeAtPosition::split_at_position","value":"pub fn split_at_position<P, E: ParseError<Self>>(&Self, P)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true,\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65979,"byte_end":66066,"line_start":450,"line_end":450,"column_start":3,"column_end":90}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":66069,"byte_end":66115,"line_start":451,"line_end":451,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":66118,"byte_end":66121,"line_start":452,"line_end":452,"column_start":3,"column_end":6}},{"value":"/ *streaming version*: If no element is found matching the condition, this will return `Incomplete`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":66124,"byte_end":66225,"line_start":453,"line_end":453,"column_start":3,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":66663,"byte_end":66681,"line_start":464,"line_end":464,"column_start":6,"column_end":24},"name":"split_at_position1","qualname":"::traits::InputTakeAtPosition::split_at_position1","value":"pub fn split_at_position1<P, E: ParseError<Self>>(&Self, P, ErrorKind)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":66362,"byte_end":66448,"line_start":458,"line_end":458,"column_start":3,"column_end":89}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":66451,"byte_end":66497,"line_start":459,"line_end":459,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":66500,"byte_end":66503,"line_start":460,"line_end":460,"column_start":3,"column_end":6}},{"value":"/ Fails if the produced slice is empty.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":66506,"byte_end":66547,"line_start":461,"line_end":461,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":66550,"byte_end":66553,"line_start":462,"line_end":462,"column_start":3,"column_end":6}},{"value":"/ *streaming version*: If no element is found matching the condition, this will return `Incomplete`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":66556,"byte_end":66657,"line_start":463,"line_end":463,"column_start":3,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":67080,"byte_end":67106,"line_start":476,"line_end":476,"column_start":6,"column_end":32},"name":"split_at_position_complete","qualname":"::traits::InputTakeAtPosition::split_at_position_complete","value":"pub fn split_at_position_complete<P, E: ParseError<Self>>(&Self, P)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true,\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":66826,"byte_end":66913,"line_start":472,"line_end":472,"column_start":3,"column_end":90}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":66916,"byte_end":66962,"line_start":473,"line_end":473,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":66965,"byte_end":66968,"line_start":474,"line_end":474,"column_start":3,"column_end":6}},{"value":"/ *complete version*: If no element is found matching the condition, this will return the whole input","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":66971,"byte_end":67074,"line_start":475,"line_end":475,"column_start":3,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":67536,"byte_end":67563,"line_start":489,"line_end":489,"column_start":6,"column_end":33},"name":"split_at_position1_complete","qualname":"::traits::InputTakeAtPosition::split_at_position1_complete","value":"pub fn split_at_position1_complete<P,\n                                   E: ParseError<Self>>(&Self, P, ErrorKind)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":67233,"byte_end":67319,"line_start":483,"line_end":483,"column_start":3,"column_end":89}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":67322,"byte_end":67368,"line_start":484,"line_end":484,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":67371,"byte_end":67374,"line_start":485,"line_end":485,"column_start":3,"column_end":6}},{"value":"/ Fails if the produced slice is empty.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":67377,"byte_end":67418,"line_start":486,"line_end":486,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":67421,"byte_end":67424,"line_start":487,"line_end":487,"column_start":3,"column_end":6}},{"value":"/ *complete version*: If no element is found matching the condition, this will return the whole input","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":67427,"byte_end":67530,"line_start":488,"line_end":488,"column_start":3,"column_end":106}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3121},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73382,"byte_end":73384,"line_start":709,"line_end":709,"column_start":3,"column_end":5},"name":"Ok","qualname":"::traits::CompareResult::Ok","value":"CompareResult::Ok","parent":{"krate":0,"index":3120},"children":[],"decl_id":null,"docs":" Comparison was successful\n","sig":null,"attributes":[{"value":"/ Comparison was successful","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73350,"byte_end":73379,"line_start":708,"line_end":708,"column_start":3,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3123},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73423,"byte_end":73433,"line_start":711,"line_end":711,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::traits::CompareResult::Incomplete","value":"CompareResult::Incomplete","parent":{"krate":0,"index":3120},"children":[],"decl_id":null,"docs":" We need more data to be sure\n","sig":null,"attributes":[{"value":"/ We need more data to be sure","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73388,"byte_end":73420,"line_start":710,"line_end":710,"column_start":3,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73461,"byte_end":73466,"line_start":713,"line_end":713,"column_start":3,"column_end":8},"name":"Error","qualname":"::traits::CompareResult::Error","value":"CompareResult::Error","parent":{"krate":0,"index":3120},"children":[],"decl_id":null,"docs":" Comparison failed\n","sig":null,"attributes":[{"value":"/ Comparison failed","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73437,"byte_end":73458,"line_start":712,"line_end":712,"column_start":3,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":3120},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73332,"byte_end":73345,"line_start":707,"line_end":707,"column_start":10,"column_end":23},"name":"CompareResult","qualname":"::traits::CompareResult","value":"pub enum CompareResult { Ok, Incomplete, Error, }","parent":null,"children":[{"krate":0,"index":3121},{"krate":0,"index":3123},{"krate":0,"index":3125}],"decl_id":null,"docs":" Indicates wether a comparison was successful, an error, or\n if more data was needed\n","sig":null,"attributes":[{"value":"/ Indicates wether a comparison was successful, an error, or","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73204,"byte_end":73266,"line_start":704,"line_end":704,"column_start":1,"column_end":63}},{"value":"/ if more data was needed","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73267,"byte_end":73294,"line_start":705,"line_end":705,"column_start":1,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":644},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73517,"byte_end":73524,"line_start":717,"line_end":717,"column_start":11,"column_end":18},"name":"Compare","qualname":"::traits::Compare","value":"Compare<T>","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647}],"decl_id":null,"docs":" Abstracts comparison operations\n","sig":null,"attributes":[{"value":"/ Abstracts comparison operations","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73471,"byte_end":73506,"line_start":716,"line_end":716,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73585,"byte_end":73592,"line_start":719,"line_end":719,"column_start":6,"column_end":13},"name":"compare","qualname":"::traits::Compare::compare","value":"pub fn compare(&Self, T) -> CompareResult","parent":{"krate":0,"index":644},"children":[],"decl_id":null,"docs":" Compares self to another value for equality\n","sig":null,"attributes":[{"value":"/ Compares self to another value for equality","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73532,"byte_end":73579,"line_start":718,"line_end":718,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73896,"byte_end":73911,"line_start":727,"line_end":727,"column_start":6,"column_end":21},"name":"compare_no_case","qualname":"::traits::Compare::compare_no_case","value":"pub fn compare_no_case(&Self, T) -> CompareResult","parent":{"krate":0,"index":644},"children":[],"decl_id":null,"docs":" Compares self to another value for equality\n independently of the case.","sig":null,"attributes":[{"value":"/ Compares self to another value for equality","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73626,"byte_end":73673,"line_start":720,"line_end":720,"column_start":3,"column_end":50}},{"value":"/ independently of the case.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73676,"byte_end":73706,"line_start":721,"line_end":721,"column_start":3,"column_end":33}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73709,"byte_end":73712,"line_start":722,"line_end":722,"column_start":3,"column_end":6}},{"value":"/ Warning: for `&str`, the comparison is done","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73715,"byte_end":73762,"line_start":723,"line_end":723,"column_start":3,"column_end":50}},{"value":"/ by lowercasing both strings and comparing","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73765,"byte_end":73810,"line_start":724,"line_end":724,"column_start":3,"column_end":48}},{"value":"/ the result. This is a temporary solution until","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73813,"byte_end":73863,"line_start":725,"line_end":725,"column_start":3,"column_end":53}},{"value":"/ a better one appears","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":73866,"byte_end":73890,"line_start":726,"line_end":726,"column_start":3,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":679},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":77299,"byte_end":77308,"line_start":876,"line_end":876,"column_start":11,"column_end":20},"name":"FindToken","qualname":"::traits::FindToken","value":"FindToken<T>","parent":null,"children":[{"krate":0,"index":681}],"decl_id":null,"docs":" Look for a token in self\n","sig":null,"attributes":[{"value":"/ Look for a token in self","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":77260,"byte_end":77288,"line_start":875,"line_end":875,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":77365,"byte_end":77375,"line_start":878,"line_end":878,"column_start":6,"column_end":16},"name":"find_token","qualname":"::traits::FindToken::find_token","value":"pub fn find_token(&Self, T) -> bool","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":" Returns true if self contains the token\n","sig":null,"attributes":[{"value":"/ Returns true if self contains the token","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":77316,"byte_end":77359,"line_start":877,"line_end":877,"column_start":3,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":704},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":78231,"byte_end":78244,"line_start":918,"line_end":918,"column_start":11,"column_end":24},"name":"FindSubstring","qualname":"::traits::FindSubstring","value":"FindSubstring<T>","parent":null,"children":[{"krate":0,"index":706}],"decl_id":null,"docs":" Look for a substring in self\n","sig":null,"attributes":[{"value":"/ Look for a substring in self","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":78188,"byte_end":78220,"line_start":917,"line_end":917,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":78319,"byte_end":78333,"line_start":920,"line_end":920,"column_start":6,"column_end":20},"name":"find_substring","qualname":"::traits::FindSubstring::find_substring","value":"pub fn find_substring(&Self, T) -> Option<usize>","parent":{"krate":0,"index":704},"children":[],"decl_id":null,"docs":" Returns the byte position of the substring if it is found\n","sig":null,"attributes":[{"value":"/ Returns the byte position of the substring if it is found","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":78252,"byte_end":78313,"line_start":919,"line_end":919,"column_start":3,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":719},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":79656,"byte_end":79663,"line_start":971,"line_end":971,"column_start":11,"column_end":18},"name":"ParseTo","qualname":"::traits::ParseTo","value":"ParseTo<R>","parent":null,"children":[{"krate":0,"index":721}],"decl_id":null,"docs":" Used to integrate `str`'s `parse()` method\n","sig":null,"attributes":[{"value":"/ Used to integrate `str`'s `parse()` method","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":79599,"byte_end":79645,"line_start":970,"line_end":970,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":79818,"byte_end":79826,"line_start":974,"line_end":974,"column_start":6,"column_end":14},"name":"parse_to","qualname":"::traits::ParseTo::parse_to","value":"pub fn parse_to(&Self) -> Option<R>","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" Succeeds if `parse()` succeeded. The byte slice implementation\n will first convert it to a `&str`, then apply the `parse()` function\n","sig":null,"attributes":[{"value":"/ Succeeds if `parse()` succeeded. The byte slice implementation","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":79671,"byte_end":79737,"line_start":972,"line_end":972,"column_start":3,"column_end":69}},{"value":"/ will first convert it to a `&str`, then apply the `parse()` function","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":79740,"byte_end":79812,"line_start":973,"line_end":973,"column_start":3,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":731},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":80272,"byte_end":80277,"line_start":994,"line_end":994,"column_start":11,"column_end":16},"name":"Slice","qualname":"::traits::Slice","value":"Slice<R>","parent":null,"children":[{"krate":0,"index":733}],"decl_id":null,"docs":" Slicing operations using ranges.","sig":null,"attributes":[{"value":"/ Slicing operations using ranges.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":80106,"byte_end":80142,"line_start":989,"line_end":989,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":80143,"byte_end":80146,"line_start":990,"line_end":990,"column_start":1,"column_end":4}},{"value":"/ This trait is loosely based on","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":80147,"byte_end":80181,"line_start":991,"line_end":991,"column_start":1,"column_end":35}},{"value":"/ `Index`, but can actually return","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":80182,"byte_end":80218,"line_start":992,"line_end":992,"column_start":1,"column_end":37}},{"value":"/ something else than a `&[T]` or `&str`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":80219,"byte_end":80261,"line_start":993,"line_end":993,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":80338,"byte_end":80343,"line_start":996,"line_end":996,"column_start":6,"column_end":11},"name":"slice","qualname":"::traits::Slice::slice","value":"pub fn slice(&Self, R) -> Self","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" Slices self according to the range argument\n","sig":null,"attributes":[{"value":"/ Slices self according to the range argument","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":80285,"byte_end":80332,"line_start":995,"line_end":995,"column_start":3,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":738},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":83557,"byte_end":83567,"line_start":1126,"line_end":1126,"column_start":11,"column_end":21},"name":"ExtendInto","qualname":"::traits::ExtendInto","value":"ExtendInto","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742}],"decl_id":null,"docs":" Abstracts something which can extend an `Extend`.\n Used to build modified input slices in `escaped_transform`\n","sig":null,"attributes":[{"value":"/ Abstracts something which can extend an `Extend`.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":83430,"byte_end":83483,"line_start":1124,"line_end":1124,"column_start":1,"column_end":54}},{"value":"/ Used to build modified input slices in `escaped_transform`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":83484,"byte_end":83546,"line_start":1125,"line_end":1125,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":739},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":83700,"byte_end":83704,"line_start":1130,"line_end":1130,"column_start":8,"column_end":12},"name":"Item","qualname":"::traits::ExtendInto::Item","value":"type Item;","parent":{"krate":0,"index":738},"children":[],"decl_id":null,"docs":" The current input type is a sequence of that `Item` type.","sig":null,"attributes":[{"value":"/ The current input type is a sequence of that `Item` type.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":83572,"byte_end":83633,"line_start":1127,"line_end":1127,"column_start":3,"column_end":64}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":83636,"byte_end":83639,"line_start":1128,"line_end":1128,"column_start":3,"column_end":6}},{"value":"/ Example: `u8` for `&[u8]` or `char` for `&str`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":83642,"byte_end":83692,"line_start":1129,"line_end":1129,"column_start":3,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":740},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":83751,"byte_end":83759,"line_start":1133,"line_end":1133,"column_start":8,"column_end":16},"name":"Extender","qualname":"::traits::ExtendInto::Extender","value":"type Extender;","parent":{"krate":0,"index":738},"children":[],"decl_id":null,"docs":" The type that will be produced\n","sig":null,"attributes":[{"value":"/ The type that will be produced","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":83709,"byte_end":83743,"line_start":1132,"line_end":1132,"column_start":3,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":83815,"byte_end":83826,"line_start":1136,"line_end":1136,"column_start":6,"column_end":17},"name":"new_builder","qualname":"::traits::ExtendInto::new_builder","value":"pub fn new_builder(&Self) -> Self::Extender","parent":{"krate":0,"index":738},"children":[],"decl_id":null,"docs":" Create a new `Extend` of the correct type\n","sig":null,"attributes":[{"value":"/ Create a new `Extend` of the correct type","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":83764,"byte_end":83809,"line_start":1135,"line_end":1135,"column_start":3,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":83905,"byte_end":83916,"line_start":1138,"line_end":1138,"column_start":6,"column_end":17},"name":"extend_into","qualname":"::traits::ExtendInto::extend_into","value":"pub fn extend_into(&Self, &mut Self::Extender)","parent":{"krate":0,"index":738},"children":[],"decl_id":null,"docs":" Accumulate the input into an accumulator\n","sig":null,"attributes":[{"value":"/ Accumulate the input into an accumulator","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":83855,"byte_end":83899,"line_start":1137,"line_end":1137,"column_start":3,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":768},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":85561,"byte_end":85568,"line_start":1222,"line_end":1222,"column_start":11,"column_end":18},"name":"ToUsize","qualname":"::traits::ToUsize","value":"ToUsize","parent":null,"children":[{"krate":0,"index":769}],"decl_id":null,"docs":" Helper trait to convert numbers to usize.","sig":null,"attributes":[{"value":"/ Helper trait to convert numbers to usize.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":85255,"byte_end":85300,"line_start":1216,"line_end":1216,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":85301,"byte_end":85304,"line_start":1217,"line_end":1217,"column_start":1,"column_end":4}},{"value":"/ By default, usize implements `From<u8>` and `From<u16>` but not","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":85305,"byte_end":85372,"line_start":1218,"line_end":1218,"column_start":1,"column_end":68}},{"value":"/ `From<u32>` and `From<u64>` because that would be invalid on some","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":85373,"byte_end":85442,"line_start":1219,"line_end":1219,"column_start":1,"column_end":70}},{"value":"/ platforms. This trait implements the conversion for platforms","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":85443,"byte_end":85508,"line_start":1220,"line_end":1220,"column_start":1,"column_end":66}},{"value":"/ with 32 and 64 bits pointer platforms","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":85509,"byte_end":85550,"line_start":1221,"line_end":1221,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":85605,"byte_end":85613,"line_start":1224,"line_end":1224,"column_start":6,"column_end":14},"name":"to_usize","qualname":"::traits::ToUsize::to_usize","value":"pub fn to_usize(&Self) -> usize","parent":{"krate":0,"index":768},"children":[],"decl_id":null,"docs":" converts self to usize\n","sig":null,"attributes":[{"value":"/ converts self to usize","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":85573,"byte_end":85599,"line_start":1223,"line_end":1223,"column_start":3,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":780},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":86280,"byte_end":86292,"line_start":1265,"line_end":1265,"column_start":11,"column_end":23},"name":"ErrorConvert","qualname":"::traits::ErrorConvert","value":"ErrorConvert<E>","parent":null,"children":[{"krate":0,"index":782}],"decl_id":null,"docs":" Equivalent From implementation to avoid orphan rules in bits parsers\n","sig":null,"attributes":[{"value":"/ Equivalent From implementation to avoid orphan rules in bits parsers","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":86197,"byte_end":86269,"line_start":1264,"line_end":1264,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":86341,"byte_end":86348,"line_start":1267,"line_end":1267,"column_start":6,"column_end":13},"name":"convert","qualname":"::traits::ErrorConvert::convert","value":"pub fn convert(Self) -> E","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Transform to another error type\n","sig":null,"attributes":[{"value":"/ Transform to another error type","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":86300,"byte_end":86335,"line_start":1266,"line_end":1266,"column_start":3,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":806},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":87875,"byte_end":87885,"line_start":1324,"line_end":1324,"column_start":11,"column_end":21},"name":"HexDisplay","qualname":"::traits::HexDisplay","value":"HexDisplay","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808}],"decl_id":null,"docs":" Helper trait to show a byte slice as a hex dump\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":87730,"byte_end":87753,"line_start":1321,"line_end":1321,"column_start":1,"column_end":24}},{"value":"/ Helper trait to show a byte slice as a hex dump","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":87813,"byte_end":87864,"line_start":1323,"line_end":1323,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":87979,"byte_end":87985,"line_start":1327,"line_end":1327,"column_start":6,"column_end":12},"name":"to_hex","qualname":"::traits::HexDisplay::to_hex","value":"pub fn to_hex(&Self, usize) -> String","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a hex dump, returning the owned\n `String`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a hex dump, returning the owned","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":87890,"byte_end":87957,"line_start":1325,"line_end":1325,"column_start":3,"column_end":70}},{"value":"/ `String`.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":87960,"byte_end":87973,"line_start":1326,"line_end":1326,"column_start":3,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":88143,"byte_end":88154,"line_start":1331,"line_end":1331,"column_start":6,"column_end":17},"name":"to_hex_from","qualname":"::traits::HexDisplay::to_hex_from","value":"pub fn to_hex_from(&Self, usize, usize) -> String","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a hex dump beginning at `from` address, returning the owned\n `String`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a hex dump beginning at `from` address, returning the owned","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":88026,"byte_end":88121,"line_start":1329,"line_end":1329,"column_start":3,"column_end":98}},{"value":"/ `String`.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":88124,"byte_end":88137,"line_start":1330,"line_end":1330,"column_start":3,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":816},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"combinator","qualname":"::combinator","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":897},{"krate":0,"index":907},{"krate":0,"index":916},{"krate":0,"index":925},{"krate":0,"index":935},{"krate":0,"index":942},{"krate":0,"index":949},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":966},{"krate":0,"index":973},{"krate":0,"index":982},{"krate":0,"index":991},{"krate":0,"index":998},{"krate":0,"index":1005},{"krate":0,"index":1012},{"krate":0,"index":1019},{"krate":0,"index":1028},{"krate":0,"index":1033},{"krate":0,"index":1040},{"krate":0,"index":1045},{"krate":0,"index":1053},{"krate":0,"index":1065},{"krate":0,"index":1071}],"decl_id":null,"docs":" General purpose combinators\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15501,"byte_end":15513,"line_start":451,"line_end":451,"column_start":1,"column_end":13}},{"value":"/ General purpose combinators","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":90269,"byte_end":90300,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"allow(unused_imports)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":90302,"byte_end":90327,"line_start":3,"line_end":3,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":882},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91129,"byte_end":91133,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"rest","qualname":"::combinator::rest","value":"pub fn rest<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<RangeFrom<usize>>, T: InputLength","parent":null,"children":[],"decl_id":null,"docs":" Return the remaining input.","sig":null,"attributes":[{"value":"/ Return the remaining input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":90866,"byte_end":90897,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":90898,"byte_end":90901,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":90902,"byte_end":90913,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ # use nom::error::ErrorKind;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":90914,"byte_end":90946,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ use nom::combinator::rest;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":90947,"byte_end":90977,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(rest::<_,(_, ErrorKind)>(\"abc\"), Ok((\"\", \"abc\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":90978,"byte_end":91043,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(rest::<_,(_, ErrorKind)>(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91044,"byte_end":91103,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91104,"byte_end":91111,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91112,"byte_end":91121,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":885},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91579,"byte_end":91587,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"rest_len","qualname":"::combinator::rest_len","value":"pub fn rest_len<T, E: ParseError<T>>(T) -> IResult<T, usize, E> where\nT: InputLength","parent":null,"children":[],"decl_id":null,"docs":" Return the length of the remaining input.","sig":null,"attributes":[{"value":"/ Return the length of the remaining input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91292,"byte_end":91337,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91338,"byte_end":91341,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91342,"byte_end":91353,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ # use nom::error::ErrorKind;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91354,"byte_end":91386,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/ use nom::combinator::rest_len;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91387,"byte_end":91421,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(rest_len::<_,(_, ErrorKind)>(\"abc\"), Ok((\"abc\", 3)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91422,"byte_end":91490,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(rest_len::<_,(_, ErrorKind)>(\"\"), Ok((\"\", 0)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91491,"byte_end":91553,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91554,"byte_end":91561,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91562,"byte_end":91571,"line_start":47,"line_end":47,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":888},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92298,"byte_end":92301,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"map","qualname":"::combinator::map","value":"pub fn map<I, O1, O2, E, F, G>(F, G) -> /*impl Trait*/ where\nF: Parser<I, O1, E>, G: FnMut(O1) -> O2","parent":null,"children":[],"decl_id":null,"docs":" Maps a function on the result of a parser.","sig":null,"attributes":[{"value":"/ Maps a function on the result of a parser.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91722,"byte_end":91768,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91769,"byte_end":91772,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91773,"byte_end":91784,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91785,"byte_end":91821,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ use nom::{Err,error::ErrorKind, IResult,Parser};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91822,"byte_end":91874,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91875,"byte_end":91916,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ use nom::combinator::map;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91917,"byte_end":91946,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91947,"byte_end":91964,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91965,"byte_end":91968,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let mut parser = map(digit1, |s: &str| s.len());","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":91969,"byte_end":92021,"line_start":65,"line_end":65,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92022,"byte_end":92025,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // the parser will count how many characters were returned by digit1","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92026,"byte_end":92098,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(parser.parse(\"123456\"), Ok((\"\", 6)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92099,"byte_end":92151,"line_start":68,"line_end":68,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92152,"byte_end":92155,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // this will fail if digit1 fails","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92156,"byte_end":92193,"line_start":70,"line_end":70,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(parser.parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92194,"byte_end":92274,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92275,"byte_end":92282,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92283,"byte_end":92290,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":897},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":93295,"byte_end":93302,"line_start":106,"line_end":106,"column_start":8,"column_end":15},"name":"map_res","qualname":"::combinator::map_res","value":"pub fn map_res<I: Clone, O1, O2, E: FromExternalError<I, E2>, E2, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: FnMut(O1) -> Result<O2, E2>","parent":null,"children":[],"decl_id":null,"docs":" Applies a function returning a `Result` over the result of a parser.","sig":null,"attributes":[{"value":"/ Applies a function returning a `Result` over the result of a parser.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92532,"byte_end":92604,"line_start":85,"line_end":85,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92605,"byte_end":92608,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92609,"byte_end":92620,"line_start":87,"line_end":87,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92621,"byte_end":92657,"line_start":88,"line_end":88,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92658,"byte_end":92705,"line_start":89,"line_end":89,"column_start":1,"column_end":48}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92706,"byte_end":92747,"line_start":90,"line_end":90,"column_start":1,"column_end":42}},{"value":"/ use nom::combinator::map_res;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92748,"byte_end":92781,"line_start":91,"line_end":91,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92782,"byte_end":92799,"line_start":92,"line_end":92,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92800,"byte_end":92803,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ let mut parse = map_res(digit1, |s: &str| s.parse::<u8>());","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92804,"byte_end":92867,"line_start":94,"line_end":94,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92868,"byte_end":92871,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ // the parser will convert the result of digit1 to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92872,"byte_end":92935,"line_start":96,"line_end":96,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parse(\"123\"), Ok((\"\", 123)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92936,"byte_end":92980,"line_start":97,"line_end":97,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92981,"byte_end":92984,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // this will fail if digit1 fails","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":92985,"byte_end":93022,"line_start":99,"line_end":99,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":93023,"byte_end":93096,"line_start":100,"line_end":100,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":93097,"byte_end":93100,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ // this will fail if the mapped function fails (a `u8` is too small to hold `123456`)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":93101,"byte_end":93190,"line_start":102,"line_end":102,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parse(\"123456\"), Err(Err::Error((\"123456\", ErrorKind::MapRes))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":93191,"byte_end":93271,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":93272,"byte_end":93279,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":93280,"byte_end":93287,"line_start":105,"line_end":105,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":907},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94501,"byte_end":94508,"line_start":145,"line_end":145,"column_start":8,"column_end":15},"name":"map_opt","qualname":"::combinator::map_opt","value":"pub fn map_opt<I: Clone, O1, O2, E: ParseError<I>, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: FnMut(O1) -> Option<O2>","parent":null,"children":[],"decl_id":null,"docs":" Applies a function returning an `Option` over the result of a parser.","sig":null,"attributes":[{"value":"/ Applies a function returning an `Option` over the result of a parser.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":93732,"byte_end":93805,"line_start":124,"line_end":124,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":93806,"byte_end":93809,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":93810,"byte_end":93821,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":93822,"byte_end":93858,"line_start":127,"line_end":127,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":93859,"byte_end":93906,"line_start":128,"line_end":128,"column_start":1,"column_end":48}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":93907,"byte_end":93948,"line_start":129,"line_end":129,"column_start":1,"column_end":42}},{"value":"/ use nom::combinator::map_opt;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":93949,"byte_end":93982,"line_start":130,"line_end":130,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":93983,"byte_end":94000,"line_start":131,"line_end":131,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94001,"byte_end":94004,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ let mut parse = map_opt(digit1, |s: &str| s.parse::<u8>().ok());","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94005,"byte_end":94073,"line_start":133,"line_end":133,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94074,"byte_end":94077,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ // the parser will convert the result of digit1 to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94078,"byte_end":94141,"line_start":135,"line_end":135,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parse(\"123\"), Ok((\"\", 123)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94142,"byte_end":94186,"line_start":136,"line_end":136,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94187,"byte_end":94190,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ // this will fail if digit1 fails","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94191,"byte_end":94228,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94229,"byte_end":94302,"line_start":139,"line_end":139,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94303,"byte_end":94306,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ // this will fail if the mapped function fails (a `u8` is too small to hold `123456`)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94307,"byte_end":94396,"line_start":141,"line_end":141,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parse(\"123456\"), Err(Err::Error((\"123456\", ErrorKind::MapOpt))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94397,"byte_end":94477,"line_start":142,"line_end":142,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94478,"byte_end":94485,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94486,"byte_end":94493,"line_start":144,"line_end":144,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":916},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95453,"byte_end":95463,"line_start":180,"line_end":180,"column_start":8,"column_end":18},"name":"map_parser","qualname":"::combinator::map_parser","value":"pub fn map_parser<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Parser<O1, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser over the result of another one.","sig":null,"attributes":[{"value":"/ Applies a parser over the result of another one.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94912,"byte_end":94964,"line_start":163,"line_end":163,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94965,"byte_end":94968,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94969,"byte_end":94980,"line_start":165,"line_end":165,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":94981,"byte_end":95017,"line_start":166,"line_end":166,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95018,"byte_end":95065,"line_start":167,"line_end":167,"column_start":1,"column_end":48}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95066,"byte_end":95107,"line_start":168,"line_end":168,"column_start":1,"column_end":42}},{"value":"/ use nom::bytes::complete::take;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95108,"byte_end":95143,"line_start":169,"line_end":169,"column_start":1,"column_end":36}},{"value":"/ use nom::combinator::map_parser;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95144,"byte_end":95180,"line_start":170,"line_end":170,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95181,"byte_end":95198,"line_start":171,"line_end":171,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95199,"byte_end":95202,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ let mut parse = map_parser(take(5u8), digit1);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95203,"byte_end":95253,"line_start":173,"line_end":173,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95254,"byte_end":95257,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parse(\"12345\"), Ok((\"\", \"12345\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95258,"byte_end":95308,"line_start":175,"line_end":175,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parse(\"123ab\"), Ok((\"\", \"123\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95309,"byte_end":95357,"line_start":176,"line_end":176,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(parse(\"123\"), Err(Err::Error((\"123\", ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95358,"byte_end":95429,"line_start":177,"line_end":177,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95430,"byte_end":95437,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95438,"byte_end":95445,"line_start":179,"line_end":179,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":925},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96346,"byte_end":96354,"line_start":211,"line_end":211,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::combinator::flat_map","value":"pub fn flat_map<I, O1, O2, E: ParseError<I>, F, G, H>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Fn(O1) -> H, H: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parser from the output of the first parser, then apply that parser over the rest of the input.","sig":null,"attributes":[{"value":"/ Creates a new parser from the output of the first parser, then apply that parser over the rest of the input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95773,"byte_end":95885,"line_start":195,"line_end":195,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95886,"byte_end":95889,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95890,"byte_end":95901,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95902,"byte_end":95938,"line_start":198,"line_end":198,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95939,"byte_end":95986,"line_start":199,"line_end":199,"column_start":1,"column_end":48}},{"value":"/ use nom::bytes::complete::take;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":95987,"byte_end":96022,"line_start":200,"line_end":200,"column_start":1,"column_end":36}},{"value":"/ use nom::number::complete::u8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96023,"byte_end":96057,"line_start":201,"line_end":201,"column_start":1,"column_end":35}},{"value":"/ use nom::combinator::flat_map;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96058,"byte_end":96092,"line_start":202,"line_end":202,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96093,"byte_end":96110,"line_start":203,"line_end":203,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96111,"byte_end":96114,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ let mut parse = flat_map(u8, take);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96115,"byte_end":96154,"line_start":205,"line_end":205,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96155,"byte_end":96158,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parse(&[2, 0, 1, 2][..]), Ok((&[2][..], &[0, 1][..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96159,"byte_end":96229,"line_start":207,"line_end":207,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(parse(&[4, 0, 1, 2][..]), Err(Err::Error((&[0, 1, 2][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96230,"byte_end":96322,"line_start":208,"line_end":208,"column_start":1,"column_end":93}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96323,"byte_end":96330,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96331,"byte_end":96338,"line_start":210,"line_end":210,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":935},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97125,"byte_end":97128,"line_start":243,"line_end":243,"column_start":8,"column_end":11},"name":"opt","qualname":"::combinator::opt","value":"pub fn opt<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Optional parser: Will return `None` if not successful.","sig":null,"attributes":[{"value":"/ Optional parser: Will return `None` if not successful.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96651,"byte_end":96709,"line_start":226,"line_end":226,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96710,"byte_end":96713,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96714,"byte_end":96725,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96726,"byte_end":96762,"line_start":229,"line_end":229,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96763,"byte_end":96810,"line_start":230,"line_end":230,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::opt;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96811,"byte_end":96840,"line_start":231,"line_end":231,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96841,"byte_end":96882,"line_start":232,"line_end":232,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96883,"byte_end":96900,"line_start":233,"line_end":233,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96901,"byte_end":96904,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ fn parser(i: &str) -> IResult<&str, Option<&str>> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96905,"byte_end":96960,"line_start":235,"line_end":235,"column_start":1,"column_end":56}},{"value":"/   opt(alpha1)(i)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96961,"byte_end":96981,"line_start":236,"line_end":236,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96982,"byte_end":96987,"line_start":237,"line_end":237,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96988,"byte_end":96991,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd;\"), Ok((\";\", Some(\"abcd\"))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":96992,"byte_end":97049,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"123;\"), Ok((\"123;\", None)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97050,"byte_end":97101,"line_start":240,"line_end":240,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97102,"byte_end":97109,"line_start":241,"line_end":241,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97110,"byte_end":97117,"line_start":242,"line_end":242,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":942},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98092,"byte_end":98096,"line_start":276,"line_end":276,"column_start":8,"column_end":12},"name":"cond","qualname":"::combinator::cond","value":"pub fn cond<I, O, E: ParseError<I>, F>(bool, F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Calls the parser if the condition is met.","sig":null,"attributes":[{"value":"/ Calls the parser if the condition is met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97440,"byte_end":97485,"line_start":257,"line_end":257,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97486,"byte_end":97489,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97490,"byte_end":97501,"line_start":259,"line_end":259,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97502,"byte_end":97538,"line_start":260,"line_end":260,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97539,"byte_end":97596,"line_start":261,"line_end":261,"column_start":1,"column_end":58}},{"value":"/ use nom::combinator::cond;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97597,"byte_end":97627,"line_start":262,"line_end":262,"column_start":1,"column_end":31}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97628,"byte_end":97669,"line_start":263,"line_end":263,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97670,"byte_end":97687,"line_start":264,"line_end":264,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97688,"byte_end":97691,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ fn parser(b: bool, i: &str) -> IResult<&str, Option<&str>> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97692,"byte_end":97756,"line_start":266,"line_end":266,"column_start":1,"column_end":65}},{"value":"/   cond(b, alpha1)(i)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97757,"byte_end":97781,"line_start":267,"line_end":267,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97782,"byte_end":97787,"line_start":268,"line_end":268,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97788,"byte_end":97791,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(true, \"abcd;\"), Ok((\";\", Some(\"abcd\"))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97792,"byte_end":97855,"line_start":270,"line_end":270,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(false, \"abcd;\"), Ok((\"abcd;\", None)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97856,"byte_end":97916,"line_start":271,"line_end":271,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(parser(true, \"123;\"), Err(Err::Error(Error::new(\"123;\", ErrorKind::Alpha))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":97917,"byte_end":98009,"line_start":272,"line_end":272,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(parser(false, \"123;\"), Ok((\"123;\", None)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98010,"byte_end":98068,"line_start":273,"line_end":273,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98069,"byte_end":98076,"line_start":274,"line_end":274,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98077,"byte_end":98084,"line_start":275,"line_end":275,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":949},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98859,"byte_end":98863,"line_start":310,"line_end":310,"column_start":8,"column_end":12},"name":"peek","qualname":"::combinator::peek","value":"pub fn peek<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Tries to apply its parser without consuming the input.","sig":null,"attributes":[{"value":"/ Tries to apply its parser without consuming the input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98409,"byte_end":98467,"line_start":295,"line_end":295,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98468,"byte_end":98471,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98472,"byte_end":98483,"line_start":297,"line_end":297,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98484,"byte_end":98520,"line_start":298,"line_end":298,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98521,"byte_end":98568,"line_start":299,"line_end":299,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::peek;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98569,"byte_end":98599,"line_start":300,"line_end":300,"column_start":1,"column_end":31}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98600,"byte_end":98641,"line_start":301,"line_end":301,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98642,"byte_end":98659,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98660,"byte_end":98663,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ let mut parser = peek(alpha1);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98664,"byte_end":98698,"line_start":304,"line_end":304,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98699,"byte_end":98702,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd;\"), Ok((\"abcd;\", \"abcd\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98703,"byte_end":98758,"line_start":306,"line_end":306,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"123;\"), Err(Err::Error((\"123;\", ErrorKind::Alpha))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98759,"byte_end":98835,"line_start":307,"line_end":307,"column_start":1,"column_end":77}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98836,"byte_end":98843,"line_start":308,"line_end":308,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":98844,"byte_end":98851,"line_start":309,"line_end":309,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":956},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99582,"byte_end":99585,"line_start":340,"line_end":340,"column_start":8,"column_end":11},"name":"eof","qualname":"::combinator::eof","value":"pub fn eof<I: InputLength + Clone, E: ParseError<I>>(I) -> IResult<I, I, E>","parent":null,"children":[],"decl_id":null,"docs":" returns its input if it is at the end of input data","sig":null,"attributes":[{"value":"/ returns its input if it is at the end of input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99118,"byte_end":99173,"line_start":323,"line_end":323,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99174,"byte_end":99177,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ When we're at the end of the data, this combinator","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99178,"byte_end":99232,"line_start":325,"line_end":325,"column_start":1,"column_end":55}},{"value":"/ will succeed","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99233,"byte_end":99249,"line_start":326,"line_end":326,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99250,"byte_end":99253,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99254,"byte_end":99261,"line_start":328,"line_end":328,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99262,"byte_end":99298,"line_start":329,"line_end":329,"column_start":1,"column_end":37}},{"value":"/ # use std::str;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99299,"byte_end":99318,"line_start":330,"line_end":330,"column_start":1,"column_end":20}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99319,"byte_end":99367,"line_start":331,"line_end":331,"column_start":1,"column_end":49}},{"value":"/ # use nom::combinator::eof;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99368,"byte_end":99399,"line_start":332,"line_end":332,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99400,"byte_end":99403,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99404,"byte_end":99421,"line_start":334,"line_end":334,"column_start":1,"column_end":18}},{"value":"/ let parser = eof;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99422,"byte_end":99443,"line_start":335,"line_end":335,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99444,"byte_end":99516,"line_start":336,"line_end":336,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99517,"byte_end":99558,"line_start":337,"line_end":337,"column_start":1,"column_end":42}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99559,"byte_end":99566,"line_start":338,"line_end":338,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99567,"byte_end":99574,"line_start":339,"line_end":339,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":959},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100265,"byte_end":100273,"line_start":364,"line_end":364,"column_start":8,"column_end":16},"name":"complete","qualname":"::combinator::complete","value":"pub fn complete<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Transforms Incomplete into `Error`.","sig":null,"attributes":[{"value":"/ Transforms Incomplete into `Error`.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99825,"byte_end":99864,"line_start":349,"line_end":349,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99865,"byte_end":99868,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99869,"byte_end":99880,"line_start":351,"line_end":351,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99881,"byte_end":99917,"line_start":352,"line_end":352,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99918,"byte_end":99965,"line_start":353,"line_end":353,"column_start":1,"column_end":48}},{"value":"/ use nom::bytes::streaming::take;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":99966,"byte_end":100002,"line_start":354,"line_end":354,"column_start":1,"column_end":37}},{"value":"/ use nom::combinator::complete;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100003,"byte_end":100037,"line_start":355,"line_end":355,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100038,"byte_end":100055,"line_start":356,"line_end":356,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100056,"byte_end":100059,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ let mut parser = complete(take(5u8));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100060,"byte_end":100101,"line_start":358,"line_end":358,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100102,"byte_end":100105,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcdefg\"), Ok((\"fg\", \"abcde\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100106,"byte_end":100161,"line_start":360,"line_end":360,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abcd\"), Err(Err::Error((\"abcd\", ErrorKind::Complete))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100162,"byte_end":100241,"line_start":361,"line_end":361,"column_start":1,"column_end":80}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100242,"byte_end":100249,"line_start":362,"line_end":362,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100250,"byte_end":100257,"line_start":363,"line_end":363,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":966},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101137,"byte_end":101150,"line_start":393,"line_end":393,"column_start":8,"column_end":21},"name":"all_consuming","qualname":"::combinator::all_consuming","value":"pub fn all_consuming<I, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nI: InputLength, F: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds if all the input has been consumed by its child parser.","sig":null,"attributes":[{"value":"/ Succeeds if all the input has been consumed by its child parser.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100586,"byte_end":100654,"line_start":377,"line_end":377,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100655,"byte_end":100658,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100659,"byte_end":100670,"line_start":379,"line_end":379,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100671,"byte_end":100707,"line_start":380,"line_end":380,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100708,"byte_end":100755,"line_start":381,"line_end":381,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::all_consuming;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100756,"byte_end":100795,"line_start":382,"line_end":382,"column_start":1,"column_end":40}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100796,"byte_end":100837,"line_start":383,"line_end":383,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100838,"byte_end":100855,"line_start":384,"line_end":384,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100856,"byte_end":100859,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ let mut parser = all_consuming(alpha1);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100860,"byte_end":100903,"line_start":386,"line_end":386,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100904,"byte_end":100907,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd\"), Ok((\"\", \"abcd\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100908,"byte_end":100957,"line_start":388,"line_end":388,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":100958,"byte_end":101029,"line_start":389,"line_end":389,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(parser(\"123abcd;\"),Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101030,"byte_end":101113,"line_start":390,"line_end":390,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101114,"byte_end":101121,"line_start":391,"line_end":391,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101122,"byte_end":101129,"line_start":392,"line_end":392,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":973},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102160,"byte_end":102166,"line_start":427,"line_end":427,"column_start":8,"column_end":14},"name":"verify","qualname":"::combinator::verify","value":"pub fn verify<I: Clone, O1, O2: ?Sized, E: ParseError<I>, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Fn(&O2) -> bool,\nO1: Borrow<O2>, O2: ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns the result of the child parser if it satisfies a verification function.","sig":null,"attributes":[{"value":"/ Returns the result of the child parser if it satisfies a verification function.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101479,"byte_end":101562,"line_start":408,"line_end":408,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101563,"byte_end":101566,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ The verification function takes as argument a reference to the output of the","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101567,"byte_end":101647,"line_start":410,"line_end":410,"column_start":1,"column_end":81}},{"value":"/ parser.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101648,"byte_end":101659,"line_start":411,"line_end":411,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101660,"byte_end":101663,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101664,"byte_end":101675,"line_start":413,"line_end":413,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101676,"byte_end":101712,"line_start":414,"line_end":414,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101713,"byte_end":101760,"line_start":415,"line_end":415,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::verify;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101761,"byte_end":101793,"line_start":416,"line_end":416,"column_start":1,"column_end":33}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101794,"byte_end":101835,"line_start":417,"line_end":417,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101836,"byte_end":101853,"line_start":418,"line_end":418,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101854,"byte_end":101857,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ let mut parser = verify(alpha1, |s: &str| s.len() == 4);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101858,"byte_end":101918,"line_start":420,"line_end":420,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101919,"byte_end":101922,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd\"), Ok((\"\", \"abcd\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101923,"byte_end":101972,"line_start":422,"line_end":422,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"abcde\"), Err(Err::Error((\"abcde\", ErrorKind::Verify))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":101973,"byte_end":102052,"line_start":423,"line_end":423,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(\"123abcd;\"),Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102053,"byte_end":102136,"line_start":424,"line_end":424,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102137,"byte_end":102144,"line_start":425,"line_end":425,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102145,"byte_end":102152,"line_start":426,"line_end":426,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":982},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103053,"byte_end":103058,"line_start":464,"line_end":464,"column_start":8,"column_end":13},"name":"value","qualname":"::combinator::value","value":"pub fn value<I, O1: Clone, O2, E: ParseError<I>, F>(O1, F) -> /*impl Trait*/\nwhere F: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the provided value if the child parser succeeds.","sig":null,"attributes":[{"value":"/ Returns the provided value if the child parser succeeds.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102593,"byte_end":102653,"line_start":449,"line_end":449,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102654,"byte_end":102657,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102658,"byte_end":102669,"line_start":451,"line_end":451,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102670,"byte_end":102706,"line_start":452,"line_end":452,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102707,"byte_end":102754,"line_start":453,"line_end":453,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::value;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102755,"byte_end":102786,"line_start":454,"line_end":454,"column_start":1,"column_end":32}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102787,"byte_end":102828,"line_start":455,"line_end":455,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102829,"byte_end":102846,"line_start":456,"line_end":456,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102847,"byte_end":102850,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ let mut parser = value(1234, alpha1);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102851,"byte_end":102892,"line_start":458,"line_end":458,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102893,"byte_end":102896,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd\"), Ok((\"\", 1234)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102897,"byte_end":102944,"line_start":460,"line_end":460,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123abcd;\"), Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":102945,"byte_end":103029,"line_start":461,"line_end":461,"column_start":1,"column_end":85}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103030,"byte_end":103037,"line_start":462,"line_end":462,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103038,"byte_end":103045,"line_start":463,"line_end":463,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":991},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103700,"byte_end":103703,"line_start":489,"line_end":489,"column_start":8,"column_end":11},"name":"not","qualname":"::combinator::not","value":"pub fn not<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds if the child parser returns an error.","sig":null,"attributes":[{"value":"/ Succeeds if the child parser returns an error.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103270,"byte_end":103320,"line_start":474,"line_end":474,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103321,"byte_end":103324,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103325,"byte_end":103336,"line_start":476,"line_end":476,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103337,"byte_end":103373,"line_start":477,"line_end":477,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103374,"byte_end":103421,"line_start":478,"line_end":478,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::not;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103422,"byte_end":103451,"line_start":479,"line_end":479,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103452,"byte_end":103493,"line_start":480,"line_end":480,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103494,"byte_end":103511,"line_start":481,"line_end":481,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103512,"byte_end":103515,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ let mut parser = not(alpha1);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103516,"byte_end":103549,"line_start":483,"line_end":483,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103550,"byte_end":103553,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"123\"), Ok((\"123\", ())));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103554,"byte_end":103601,"line_start":485,"line_end":485,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"abcd\"), Err(Err::Error((\"abcd\", ErrorKind::Not))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103602,"byte_end":103676,"line_start":486,"line_end":486,"column_start":1,"column_end":75}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103677,"byte_end":103684,"line_start":487,"line_end":487,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":103685,"byte_end":103692,"line_start":488,"line_end":488,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":998},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104617,"byte_end":104626,"line_start":519,"line_end":519,"column_start":8,"column_end":17},"name":"recognize","qualname":"::combinator::recognize","value":"pub fn recognize<I: Clone + Offset + Slice<RangeTo<usize>>, O,\n                 E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" If the child parser was successful, return the consumed input as produced value.","sig":null,"attributes":[{"value":"/ If the child parser was successful, return the consumed input as produced value.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104049,"byte_end":104133,"line_start":503,"line_end":503,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104134,"byte_end":104137,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104138,"byte_end":104149,"line_start":505,"line_end":505,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104150,"byte_end":104186,"line_start":506,"line_end":506,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104187,"byte_end":104234,"line_start":507,"line_end":507,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::recognize;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104235,"byte_end":104270,"line_start":508,"line_end":508,"column_start":1,"column_end":36}},{"value":"/ use nom::character::complete::{char, alpha1};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104271,"byte_end":104320,"line_start":509,"line_end":509,"column_start":1,"column_end":50}},{"value":"/ use nom::sequence::separated_pair;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104321,"byte_end":104359,"line_start":510,"line_end":510,"column_start":1,"column_end":39}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104360,"byte_end":104377,"line_start":511,"line_end":511,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104378,"byte_end":104381,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ let mut parser = recognize(separated_pair(alpha1, char(','), alpha1));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104382,"byte_end":104456,"line_start":513,"line_end":513,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104457,"byte_end":104460,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd,efgh\"), Ok((\"\", \"abcd,efgh\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104461,"byte_end":104520,"line_start":515,"line_end":515,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Char))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104521,"byte_end":104593,"line_start":516,"line_end":516,"column_start":1,"column_end":73}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104594,"byte_end":104601,"line_start":517,"line_end":517,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104602,"byte_end":104609,"line_start":518,"line_end":518,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":106531,"byte_end":106539,"line_start":575,"line_end":575,"column_start":8,"column_end":16},"name":"consumed","qualname":"::combinator::consumed","value":"pub fn consumed<I, O, F, E>(F) -> /*impl Trait*/ where I: Clone + Offset +\nSlice<RangeTo<usize>>, E: ParseError<I>, F: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" if the child parser was successful, return the consumed input with the output\n as a tuple. Functions similarly to [recognize](fn.recognize.html) except it\n returns the parser output as well.","sig":null,"attributes":[{"value":"/ if the child parser was successful, return the consumed input with the output","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":104999,"byte_end":105080,"line_start":537,"line_end":537,"column_start":1,"column_end":82}},{"value":"/ as a tuple. Functions similarly to [recognize](fn.recognize.html) except it","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105081,"byte_end":105160,"line_start":538,"line_end":538,"column_start":1,"column_end":80}},{"value":"/ returns the parser output as well.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105161,"byte_end":105199,"line_start":539,"line_end":539,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105200,"byte_end":105203,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ This can be useful especially in cases where the output is not the same type","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105204,"byte_end":105284,"line_start":541,"line_end":541,"column_start":1,"column_end":81}},{"value":"/ as the input, or the input is a user defined type.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105285,"byte_end":105339,"line_start":542,"line_end":542,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105340,"byte_end":105343,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ Returned tuple is of the format `(consumed input, produced output)`.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105344,"byte_end":105416,"line_start":544,"line_end":544,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105417,"byte_end":105420,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105421,"byte_end":105432,"line_start":546,"line_end":546,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105433,"byte_end":105469,"line_start":547,"line_end":547,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105470,"byte_end":105517,"line_start":548,"line_end":548,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::{consumed, value, recognize, map};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105518,"byte_end":105577,"line_start":549,"line_end":549,"column_start":1,"column_end":60}},{"value":"/ use nom::character::complete::{char, alpha1};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105578,"byte_end":105627,"line_start":550,"line_end":550,"column_start":1,"column_end":50}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105628,"byte_end":105662,"line_start":551,"line_end":551,"column_start":1,"column_end":35}},{"value":"/ use nom::sequence::separated_pair;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105663,"byte_end":105701,"line_start":552,"line_end":552,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105702,"byte_end":105705,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ fn inner_parser(input: &str) -> IResult<&str, bool> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105706,"byte_end":105763,"line_start":554,"line_end":554,"column_start":1,"column_end":58}},{"value":"/     value(true, tag(\"1234\"))(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105764,"byte_end":105803,"line_start":555,"line_end":555,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105804,"byte_end":105809,"line_start":556,"line_end":556,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105810,"byte_end":105813,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105814,"byte_end":105831,"line_start":558,"line_end":558,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105832,"byte_end":105835,"line_start":559,"line_end":559,"column_start":1,"column_end":4}},{"value":"/ let mut consumed_parser = consumed(value(true, separated_pair(alpha1, char(','), alpha1)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105836,"byte_end":105931,"line_start":560,"line_end":560,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105932,"byte_end":105935,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(consumed_parser(\"abcd,efgh1\"), Ok((\"1\", (\"abcd,efgh\", true))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":105936,"byte_end":106014,"line_start":562,"line_end":562,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(consumed_parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Char))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":106015,"byte_end":106096,"line_start":563,"line_end":563,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":106097,"byte_end":106100,"line_start":564,"line_end":564,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":106101,"byte_end":106104,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ // the first output (representing the consumed input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":106105,"byte_end":106162,"line_start":566,"line_end":566,"column_start":1,"column_end":58}},{"value":"/ // should be the same as that of the `recognize` parser.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":106163,"byte_end":106223,"line_start":567,"line_end":567,"column_start":1,"column_end":61}},{"value":"/ let mut recognize_parser = recognize(inner_parser);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":106224,"byte_end":106279,"line_start":568,"line_end":568,"column_start":1,"column_end":56}},{"value":"/ let mut consumed_parser = map(consumed(inner_parser), |(consumed, output)| consumed);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":106280,"byte_end":106369,"line_start":569,"line_end":569,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":106370,"byte_end":106373,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(recognize_parser(\"1234\"), consumed_parser(\"1234\"));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":106374,"byte_end":106440,"line_start":571,"line_end":571,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(recognize_parser(\"abcd\"), consumed_parser(\"abcd\"));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":106441,"byte_end":106507,"line_start":572,"line_end":572,"column_start":1,"column_end":67}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":106508,"byte_end":106515,"line_start":573,"line_end":573,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":106516,"byte_end":106523,"line_start":574,"line_end":574,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107416,"byte_end":107419,"line_start":609,"line_end":609,"column_start":8,"column_end":11},"name":"cut","qualname":"::combinator::cut","value":"pub fn cut<I, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" transforms an error to failure","sig":null,"attributes":[{"value":"/ transforms an error to failure","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":106994,"byte_end":107028,"line_start":594,"line_end":594,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107029,"byte_end":107032,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107033,"byte_end":107044,"line_start":596,"line_end":596,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107045,"byte_end":107081,"line_start":597,"line_end":597,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107082,"byte_end":107129,"line_start":598,"line_end":598,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::cut;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107130,"byte_end":107159,"line_start":599,"line_end":599,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107160,"byte_end":107201,"line_start":600,"line_end":600,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107202,"byte_end":107219,"line_start":601,"line_end":601,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107220,"byte_end":107223,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ let mut parser = cut(alpha1);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107224,"byte_end":107257,"line_start":603,"line_end":603,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107258,"byte_end":107261,"line_start":604,"line_end":604,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd;\"), Ok((\";\", \"abcd\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107262,"byte_end":107313,"line_start":605,"line_end":605,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"123;\"), Err(Err::Failure((\"123;\", ErrorKind::Alpha))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107314,"byte_end":107392,"line_start":606,"line_end":606,"column_start":1,"column_end":79}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107393,"byte_end":107400,"line_start":607,"line_end":607,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107401,"byte_end":107408,"line_start":608,"line_end":608,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108351,"byte_end":108355,"line_start":642,"line_end":642,"column_start":8,"column_end":12},"name":"into","qualname":"::combinator::into","value":"pub fn into<I, O1, O2, E1, E2, F>(F) -> /*impl Trait*/ where O1: Into<O2>,\nE1: Into<E2>, E1: ParseError<I>, E2: ParseError<I>, F: Parser<I, O1, E1>","parent":null,"children":[],"decl_id":null,"docs":" automatically converts the child parser's result to another type","sig":null,"attributes":[{"value":"/ automatically converts the child parser's result to another type","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107648,"byte_end":107716,"line_start":619,"line_end":619,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107717,"byte_end":107720,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ it will be able to convert the output value and the error value","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107721,"byte_end":107788,"line_start":621,"line_end":621,"column_start":1,"column_end":68}},{"value":"/ as long as the `Into` implementations are available","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107789,"byte_end":107844,"line_start":622,"line_end":622,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107845,"byte_end":107848,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107849,"byte_end":107860,"line_start":624,"line_end":624,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107861,"byte_end":107897,"line_start":625,"line_end":625,"column_start":1,"column_end":37}},{"value":"/ # use nom::IResult;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107898,"byte_end":107921,"line_start":626,"line_end":626,"column_start":1,"column_end":24}},{"value":"/ use nom::combinator::into;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107922,"byte_end":107952,"line_start":627,"line_end":627,"column_start":1,"column_end":31}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107953,"byte_end":107994,"line_start":628,"line_end":628,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":107995,"byte_end":108012,"line_start":629,"line_end":629,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108013,"byte_end":108016,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/  fn parser1(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108017,"byte_end":108066,"line_start":631,"line_end":631,"column_start":1,"column_end":50}},{"value":"/    alpha1(i)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108067,"byte_end":108083,"line_start":632,"line_end":632,"column_start":1,"column_end":17}},{"value":"/  }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108084,"byte_end":108090,"line_start":633,"line_end":633,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108091,"byte_end":108094,"line_start":634,"line_end":634,"column_start":1,"column_end":4}},{"value":"/  let mut parser2 = into(parser1);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108095,"byte_end":108132,"line_start":635,"line_end":635,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108133,"byte_end":108136,"line_start":636,"line_end":636,"column_start":1,"column_end":4}},{"value":"/ // the parser converts the &str output of the child parser into a Vec<u8>","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108137,"byte_end":108214,"line_start":637,"line_end":637,"column_start":1,"column_end":78}},{"value":"/ let bytes: IResult<&str, Vec<u8>> = parser2(\"abcd\");","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108215,"byte_end":108271,"line_start":638,"line_end":638,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(bytes, Ok((\"\", vec![97, 98, 99, 100])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108272,"byte_end":108327,"line_start":639,"line_end":639,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108328,"byte_end":108335,"line_start":640,"line_end":640,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108336,"byte_end":108343,"line_start":641,"line_end":641,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109592,"byte_end":109600,"line_start":677,"line_end":677,"column_start":8,"column_end":16},"name":"iterator","qualname":"::combinator::iterator","value":"pub fn iterator<Input, Output, Error, F>(Input, F)\n-> ParserIterator<Input, Error, F> where F: Parser<Input, Output, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator from input data and a parser.","sig":null,"attributes":[{"value":"/ Creates an iterator from input data and a parser.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108822,"byte_end":108875,"line_start":659,"line_end":659,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108876,"byte_end":108879,"line_start":660,"line_end":660,"column_start":1,"column_end":4}},{"value":"/ Call the iterator's [ParserIterator::finish] method to get the remaining input if successful,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108880,"byte_end":108977,"line_start":661,"line_end":661,"column_start":1,"column_end":98}},{"value":"/ or the error value if we encountered an error.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":108978,"byte_end":109028,"line_start":662,"line_end":662,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109029,"byte_end":109032,"line_start":663,"line_end":663,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109033,"byte_end":109044,"line_start":664,"line_end":664,"column_start":1,"column_end":12}},{"value":"/ use nom::{combinator::iterator, IResult, bytes::complete::tag, character::complete::alpha1, sequence::terminated};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109045,"byte_end":109163,"line_start":665,"line_end":665,"column_start":1,"column_end":119}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109164,"byte_end":109198,"line_start":666,"line_end":666,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109199,"byte_end":109202,"line_start":667,"line_end":667,"column_start":1,"column_end":4}},{"value":"/ let data = \"abc|defg|hijkl|mnopqr|123\";","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109203,"byte_end":109246,"line_start":668,"line_end":668,"column_start":1,"column_end":44}},{"value":"/ let mut it = iterator(data, terminated(alpha1, tag(\"|\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109247,"byte_end":109309,"line_start":669,"line_end":669,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109310,"byte_end":109313,"line_start":670,"line_end":670,"column_start":1,"column_end":4}},{"value":"/ let parsed = it.map(|v| (v, v.len())).collect::<HashMap<_,_>>();","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109314,"byte_end":109382,"line_start":671,"line_end":671,"column_start":1,"column_end":69}},{"value":"/ let res: IResult<_,_> = it.finish();","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109383,"byte_end":109423,"line_start":672,"line_end":672,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109424,"byte_end":109427,"line_start":673,"line_end":673,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parsed, [(\"abc\", 3usize), (\"defg\", 4), (\"hijkl\", 5), (\"mnopqr\", 6)].iter().cloned().collect());","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109428,"byte_end":109538,"line_start":674,"line_end":674,"column_start":1,"column_end":111}},{"value":"/ assert_eq!(res, Ok((\"123\", ())));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109539,"byte_end":109576,"line_start":675,"line_end":675,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109577,"byte_end":109584,"line_start":676,"line_end":676,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109908,"byte_end":109922,"line_start":690,"line_end":690,"column_start":12,"column_end":26},"name":"ParserIterator","qualname":"::combinator::ParserIterator","value":"ParserIterator {  }","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039}],"decl_id":null,"docs":" Main structure associated to the [iterator] function.\n","sig":null,"attributes":[{"value":"/ Main structure associated to the [iterator] function.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":109839,"byte_end":109896,"line_start":689,"line_end":689,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":110149,"byte_end":110155,"line_start":698,"line_end":698,"column_start":10,"column_end":16},"name":"finish","qualname":"<ParserIterator<I, E, F>>::finish","value":"pub fn finish(Self) -> IResult<I, (), E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining input if parsing was successful, or the error if we encountered an error.\n","sig":null,"attributes":[{"value":"/ Returns the remaining input if parsing was successful, or the error if we encountered an error.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":110040,"byte_end":110139,"line_start":697,"line_end":697,"column_start":3,"column_end":102}}]},{"kind":"Function","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":112120,"byte_end":112127,"line_start":772,"line_end":772,"column_start":8,"column_end":15},"name":"success","qualname":"::combinator::success","value":"pub fn success<I, O: Clone, E: ParseError<I>>(O) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" a parser which always succeeds with given value without consuming any input.","sig":null,"attributes":[{"value":"/ a parser which always succeeds with given value without consuming any input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111342,"byte_end":111422,"line_start":750,"line_end":750,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111423,"byte_end":111426,"line_start":751,"line_end":751,"column_start":1,"column_end":4}},{"value":"/ It can be used for example as the last alternative in `alt` to","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111427,"byte_end":111493,"line_start":752,"line_end":752,"column_start":1,"column_end":67}},{"value":"/ specify the default case.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111494,"byte_end":111523,"line_start":753,"line_end":753,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111524,"byte_end":111527,"line_start":754,"line_end":754,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111528,"byte_end":111539,"line_start":755,"line_end":755,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111540,"byte_end":111576,"line_start":756,"line_end":756,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111577,"byte_end":111624,"line_start":757,"line_end":757,"column_start":1,"column_end":48}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111625,"byte_end":111650,"line_start":758,"line_end":758,"column_start":1,"column_end":26}},{"value":"/ use nom::combinator::{success, value};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111651,"byte_end":111693,"line_start":759,"line_end":759,"column_start":1,"column_end":43}},{"value":"/ use nom::character::complete::char;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111694,"byte_end":111733,"line_start":760,"line_end":760,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111734,"byte_end":111751,"line_start":761,"line_end":761,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111752,"byte_end":111755,"line_start":762,"line_end":762,"column_start":1,"column_end":4}},{"value":"/ let mut parser = success::<_,_,(_,ErrorKind)>(10);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111756,"byte_end":111810,"line_start":763,"line_end":763,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(parser(\"xyz\"), Ok((\"xyz\", 10)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111811,"byte_end":111858,"line_start":764,"line_end":764,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111859,"byte_end":111862,"line_start":765,"line_end":765,"column_start":1,"column_end":4}},{"value":"/ let mut sign = alt((value(-1, char('-')), value(1, char('+')), success::<_,_,(_,ErrorKind)>(1)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111863,"byte_end":111964,"line_start":766,"line_end":766,"column_start":1,"column_end":102}},{"value":"/ assert_eq!(sign(\"+10\"), Ok((\"10\", 1)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":111965,"byte_end":112008,"line_start":767,"line_end":767,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(sign(\"-10\"), Ok((\"10\", -1)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":112009,"byte_end":112053,"line_start":768,"line_end":768,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(sign(\"10\"), Ok((\"10\", 1)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":112054,"byte_end":112096,"line_start":769,"line_end":769,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":112097,"byte_end":112104,"line_start":770,"line_end":770,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":112105,"byte_end":112112,"line_start":771,"line_end":771,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":112497,"byte_end":112501,"line_start":785,"line_end":785,"column_start":8,"column_end":12},"name":"fail","qualname":"::combinator::fail","value":"pub fn fail<I, O, E: ParseError<I>>(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" A parser which always fails.","sig":null,"attributes":[{"value":"/ A parser which always fails.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":112249,"byte_end":112281,"line_start":776,"line_end":776,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":112282,"byte_end":112285,"line_start":777,"line_end":777,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":112286,"byte_end":112297,"line_start":778,"line_end":778,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":112298,"byte_end":112346,"line_start":779,"line_end":779,"column_start":1,"column_end":49}},{"value":"/ use nom::combinator::fail;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":112347,"byte_end":112377,"line_start":780,"line_end":780,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":112378,"byte_end":112381,"line_start":781,"line_end":781,"column_start":1,"column_end":4}},{"value":"/ let s = \"string\";","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":112382,"byte_end":112403,"line_start":782,"line_end":782,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(fail::<_, &str, _>(s), Err(Err::Error((s, ErrorKind::Fail))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":112404,"byte_end":112481,"line_start":783,"line_end":783,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":112482,"byte_end":112489,"line_start":784,"line_end":784,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"branch","qualname":"::branch","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1098},{"krate":0,"index":1105},{"krate":0,"index":1110},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":4480},{"krate":0,"index":4487},{"krate":0,"index":4495},{"krate":0,"index":4504},{"krate":0,"index":4514},{"krate":0,"index":4525},{"krate":0,"index":4537},{"krate":0,"index":4550},{"krate":0,"index":4564},{"krate":0,"index":4579},{"krate":0,"index":4595},{"krate":0,"index":4612},{"krate":0,"index":4630},{"krate":0,"index":4649},{"krate":0,"index":4669},{"krate":0,"index":4690},{"krate":0,"index":4712},{"krate":0,"index":4735},{"krate":0,"index":4759},{"krate":0,"index":4784},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":4810},{"krate":0,"index":4818},{"krate":0,"index":4828},{"krate":0,"index":4840},{"krate":0,"index":4854},{"krate":0,"index":4870},{"krate":0,"index":4888},{"krate":0,"index":4908},{"krate":0,"index":4930},{"krate":0,"index":4954},{"krate":0,"index":4980},{"krate":0,"index":5008},{"krate":0,"index":5038},{"krate":0,"index":5070},{"krate":0,"index":5104},{"krate":0,"index":5140},{"krate":0,"index":5178},{"krate":0,"index":5218},{"krate":0,"index":5260},{"krate":0,"index":5304}],"decl_id":null,"docs":" Choice combinators\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15534,"byte_end":15546,"line_start":453,"line_end":453,"column_start":1,"column_end":13}},{"value":"/ Choice combinators","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":112615,"byte_end":112637,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114344,"byte_end":114347,"line_start":37,"line_end":37,"column_start":11,"column_end":14},"name":"Alt","qualname":"::branch::Alt","value":"Alt<I, O, E>","parent":null,"children":[{"krate":0,"index":1097}],"decl_id":null,"docs":" Helper trait for the [alt()] combinator.","sig":null,"attributes":[{"value":"/ Helper trait for the [alt()] combinator.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114223,"byte_end":114267,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114268,"byte_end":114271,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for tuples of up to 21 elements","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114272,"byte_end":114333,"line_start":36,"line_end":36,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114455,"byte_end":114461,"line_start":39,"line_end":39,"column_start":6,"column_end":12},"name":"choice","qualname":"::branch::Alt::choice","value":"pub fn choice(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":" Tests each parser in the tuple and returns the result of the first one that succeeds\n","sig":null,"attributes":[{"value":"/ Tests each parser in the tuple and returns the result of the first one that succeeds","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114361,"byte_end":114449,"line_start":38,"line_end":38,"column_start":3,"column_end":91}}]},{"kind":"Function","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115652,"byte_end":115655,"line_start":71,"line_end":71,"column_start":8,"column_end":11},"name":"alt","qualname":"::branch::alt","value":"pub fn alt<I: Clone, O, E: ParseError<I>, List: Alt<I, O, E>>(List)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Tests a list of parsers one by one until one succeeds.","sig":null,"attributes":[{"value":"/ Tests a list of parsers one by one until one succeeds.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114507,"byte_end":114565,"line_start":42,"line_end":42,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114566,"byte_end":114569,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ It takes as argument a tuple of parsers. There is a maximum of 21","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114570,"byte_end":114639,"line_start":44,"line_end":44,"column_start":1,"column_end":70}},{"value":"/ parsers. If you need more, it is possible to nest them in other `alt` calls,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114640,"byte_end":114720,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ like this: `alt(parser_a, alt(parser_b, parser_c))`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114721,"byte_end":114776,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114777,"byte_end":114780,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114781,"byte_end":114792,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114793,"byte_end":114829,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114830,"byte_end":114885,"line_start":50,"line_end":50,"column_start":1,"column_end":56}},{"value":"/ use nom::character::complete::{alpha1, digit1};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114886,"byte_end":114937,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114938,"byte_end":114963,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114964,"byte_end":114981,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":114982,"byte_end":115033,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/   alt((alpha1, digit1))(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115034,"byte_end":115068,"line_start":55,"line_end":55,"column_start":1,"column_end":35}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115069,"byte_end":115075,"line_start":56,"line_end":56,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115076,"byte_end":115079,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // the first parser, alpha1, recognizes the input","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115080,"byte_end":115133,"line_start":58,"line_end":58,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"\", \"abc\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115134,"byte_end":115181,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115182,"byte_end":115185,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // the first parser returns an error, so alt tries the second one","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115186,"byte_end":115255,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(\"123456\"), Ok((\"\", \"123456\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115256,"byte_end":115309,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115310,"byte_end":115313,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // both parsers failed, and with the default error type, alt will return the last error","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115314,"byte_end":115405,"line_start":64,"line_end":64,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\" \"), Err(Err::Error(error_position!(\" \", ErrorKind::Digit))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115406,"byte_end":115491,"line_start":65,"line_end":65,"column_start":1,"column_end":86}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115492,"byte_end":115499,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115500,"byte_end":115507,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115508,"byte_end":115511,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ With a custom error type, it is possible to have alt return the error of the parser","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115512,"byte_end":115599,"line_start":69,"line_end":69,"column_start":1,"column_end":88}},{"value":"/ that went the farthest in the input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115600,"byte_end":115644,"line_start":70,"line_end":70,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115922,"byte_end":115933,"line_start":80,"line_end":80,"column_start":11,"column_end":22},"name":"Permutation","qualname":"::branch::Permutation","value":"Permutation<I, O, E>","parent":null,"children":[{"krate":0,"index":1109}],"decl_id":null,"docs":" Helper trait for the [permutation()] combinator.","sig":null,"attributes":[{"value":"/ Helper trait for the [permutation()] combinator.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115793,"byte_end":115845,"line_start":77,"line_end":77,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115846,"byte_end":115849,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for tuples of up to 21 elements","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115850,"byte_end":115911,"line_start":79,"line_end":79,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116040,"byte_end":116051,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"name":"permutation","qualname":"::branch::Permutation::permutation","value":"pub fn permutation(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":1105},"children":[],"decl_id":null,"docs":" Tries to apply all parsers in the tuple in various orders until all of them succeed\n","sig":null,"attributes":[{"value":"/ Tries to apply all parsers in the tuple in various orders until all of them succeed","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":115947,"byte_end":116034,"line_start":81,"line_end":81,"column_start":3,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117768,"byte_end":117779,"line_start":131,"line_end":131,"column_start":8,"column_end":19},"name":"permutation","qualname":"::branch::permutation","value":"pub fn permutation<I: Clone, O, E: ParseError<I>,\n                   List: Permutation<I, O, E>>(List) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Applies a list of parsers in any order.","sig":null,"attributes":[{"value":"/ Applies a list of parsers in any order.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116097,"byte_end":116140,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116141,"byte_end":116144,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Permutation will succeed if all of the child parsers succeeded.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116145,"byte_end":116212,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/ It takes as argument a tuple of parsers, and returns a","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116213,"byte_end":116271,"line_start":88,"line_end":88,"column_start":1,"column_end":59}},{"value":"/ tuple of the parser results.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116272,"byte_end":116304,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116305,"byte_end":116308,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116309,"byte_end":116320,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116321,"byte_end":116357,"line_start":92,"line_end":92,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116358,"byte_end":116422,"line_start":93,"line_end":93,"column_start":1,"column_end":65}},{"value":"/ use nom::character::complete::{alpha1, digit1};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116423,"byte_end":116474,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"/ use nom::branch::permutation;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116475,"byte_end":116508,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116509,"byte_end":116526,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/ fn parser(input: &str) -> IResult<&str, (&str, &str)> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116527,"byte_end":116586,"line_start":97,"line_end":97,"column_start":1,"column_end":60}},{"value":"/   permutation((alpha1, digit1))(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116587,"byte_end":116629,"line_start":98,"line_end":98,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116630,"byte_end":116635,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116636,"byte_end":116639,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // permutation recognizes alphabetic characters then digit","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116640,"byte_end":116702,"line_start":101,"line_end":101,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"\", (\"abc\", \"123\"))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116703,"byte_end":116762,"line_start":102,"line_end":102,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116763,"byte_end":116766,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ // but also in inverse order","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116767,"byte_end":116799,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(parser(\"123abc\"), Ok((\"\", (\"abc\", \"123\"))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116800,"byte_end":116859,"line_start":105,"line_end":105,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116860,"byte_end":116863,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ // it will fail if one of the parsers failed","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116864,"byte_end":116912,"line_start":107,"line_end":107,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(parser(\"abc;\"), Err(Err::Error(Error::new(\";\", ErrorKind::Digit))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116913,"byte_end":116996,"line_start":108,"line_end":108,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":116997,"byte_end":117004,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117005,"byte_end":117012,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117013,"byte_end":117016,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The parsers are applied greedily: if there are multiple unapplied parsers","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117017,"byte_end":117094,"line_start":112,"line_end":112,"column_start":1,"column_end":78}},{"value":"/ that could parse the next slice of input, the first one is used.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117095,"byte_end":117163,"line_start":113,"line_end":113,"column_start":1,"column_end":69}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117164,"byte_end":117175,"line_start":114,"line_end":114,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117176,"byte_end":117233,"line_start":115,"line_end":115,"column_start":1,"column_end":58}},{"value":"/ use nom::branch::permutation;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117234,"byte_end":117267,"line_start":116,"line_end":116,"column_start":1,"column_end":34}},{"value":"/ use nom::character::complete::{anychar, char};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117268,"byte_end":117318,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117319,"byte_end":117322,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ fn parser(input: &str) -> IResult<&str, (char, char)> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117323,"byte_end":117382,"line_start":119,"line_end":119,"column_start":1,"column_end":60}},{"value":"/   permutation((anychar, char('a')))(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117383,"byte_end":117429,"line_start":120,"line_end":120,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117430,"byte_end":117435,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117436,"byte_end":117439,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ // anychar parses 'b', then char('a') parses 'a'","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117440,"byte_end":117492,"line_start":123,"line_end":123,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"ba\"), Ok((\"\", ('b', 'a'))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117493,"byte_end":117544,"line_start":124,"line_end":124,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117545,"byte_end":117548,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ // anychar parses 'a', then char('a') fails on 'b',","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117549,"byte_end":117604,"line_start":126,"line_end":126,"column_start":1,"column_end":56}},{"value":"/ // even though char('a') followed by anychar would succeed","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117605,"byte_end":117667,"line_start":127,"line_end":127,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(parser(\"ab\"), Err(Err::Error(Error::new(\"b\", ErrorKind::Char))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117668,"byte_end":117748,"line_start":128,"line_end":128,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117749,"byte_end":117756,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/branch/mod.rs","byte_start":117757,"byte_end":117760,"line_start":130,"line_end":130,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sequence","qualname":"::sequence","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1131},{"krate":0,"index":1134},{"krate":0,"index":1144},{"krate":0,"index":1153},{"krate":0,"index":1163},{"krate":0,"index":1175},{"krate":0,"index":1187},{"krate":0,"index":1192},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":5350},{"krate":0,"index":5358},{"krate":0,"index":5368},{"krate":0,"index":5380},{"krate":0,"index":5394},{"krate":0,"index":5410},{"krate":0,"index":5428},{"krate":0,"index":5448},{"krate":0,"index":5470},{"krate":0,"index":5494},{"krate":0,"index":5520},{"krate":0,"index":5548},{"krate":0,"index":5578},{"krate":0,"index":5610},{"krate":0,"index":5644},{"krate":0,"index":5680},{"krate":0,"index":5718},{"krate":0,"index":5758},{"krate":0,"index":5800},{"krate":0,"index":5844},{"krate":0,"index":1202}],"decl_id":null,"docs":" Combinators applying parsers in sequence\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15563,"byte_end":15575,"line_start":455,"line_end":455,"column_start":1,"column_end":13}},{"value":"/ Combinators applying parsers in sequence","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":121996,"byte_end":122040,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122830,"byte_end":122834,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"pair","qualname":"::sequence::pair","value":"pub fn pair<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/ where\nF: Parser<I, O1, E>, G: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets an object from the first parser,\n then gets another object from the second parser.","sig":null,"attributes":[{"value":"/ Gets an object from the first parser,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122138,"byte_end":122179,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/ then gets another object from the second parser.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122180,"byte_end":122232,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122233,"byte_end":122236,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122237,"byte_end":122252,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122253,"byte_end":122293,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ * `second` The second parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122294,"byte_end":122336,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122337,"byte_end":122348,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122349,"byte_end":122396,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122397,"byte_end":122425,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::pair;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122426,"byte_end":122454,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122455,"byte_end":122489,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122490,"byte_end":122493,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut parser = pair(tag(\"abc\"), tag(\"efg\"));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122494,"byte_end":122544,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122545,"byte_end":122548,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcefg\"), Ok((\"\", (\"abc\", \"efg\"))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122549,"byte_end":122608,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"abcefghij\"), Ok((\"hij\", (\"abc\", \"efg\"))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122609,"byte_end":122674,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122675,"byte_end":122741,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122742,"byte_end":122814,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":122815,"byte_end":122822,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123821,"byte_end":123829,"line_start":61,"line_end":61,"column_start":8,"column_end":16},"name":"preceded","qualname":"::sequence::preceded","value":"pub fn preceded<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Matches an object from the first parser and discards it,\n then gets an object from the second parser.","sig":null,"attributes":[{"value":"/ Matches an object from the first parser and discards it,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123127,"byte_end":123187,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ then gets an object from the second parser.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123188,"byte_end":123235,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123236,"byte_end":123239,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123240,"byte_end":123255,"line_start":45,"line_end":45,"column_start":1,"column_end":16}},{"value":"/ * `first` The opening parser.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123256,"byte_end":123289,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/ * `second` The second parser to get object.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123290,"byte_end":123337,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123338,"byte_end":123349,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123350,"byte_end":123397,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123398,"byte_end":123426,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::preceded;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123427,"byte_end":123459,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123460,"byte_end":123494,"line_start":52,"line_end":52,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123495,"byte_end":123498,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let mut parser = preceded(tag(\"abc\"), tag(\"efg\"));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123499,"byte_end":123553,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123554,"byte_end":123557,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcefg\"), Ok((\"\", \"efg\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123558,"byte_end":123608,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"abcefghij\"), Ok((\"hij\", \"efg\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123609,"byte_end":123665,"line_start":57,"line_end":57,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123666,"byte_end":123732,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123733,"byte_end":123805,"line_start":59,"line_end":59,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":123806,"byte_end":123813,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124796,"byte_end":124806,"line_start":94,"line_end":94,"column_start":8,"column_end":18},"name":"terminated","qualname":"::sequence::terminated","value":"pub fn terminated<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets an object from the first parser,\n then matches an object from the second parser and discards it.","sig":null,"attributes":[{"value":"/ Gets an object from the first parser,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124086,"byte_end":124127,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/ then matches an object from the second parser and discards it.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124128,"byte_end":124194,"line_start":76,"line_end":76,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124195,"byte_end":124198,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124199,"byte_end":124214,"line_start":78,"line_end":78,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124215,"byte_end":124255,"line_start":79,"line_end":79,"column_start":1,"column_end":41}},{"value":"/ * `second` The second parser to match an object.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124256,"byte_end":124308,"line_start":80,"line_end":80,"column_start":1,"column_end":53}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124309,"byte_end":124320,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124321,"byte_end":124368,"line_start":82,"line_end":82,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124369,"byte_end":124397,"line_start":83,"line_end":83,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::terminated;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124398,"byte_end":124432,"line_start":84,"line_end":84,"column_start":1,"column_end":35}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124433,"byte_end":124467,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124468,"byte_end":124471,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ let mut parser = terminated(tag(\"abc\"), tag(\"efg\"));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124472,"byte_end":124528,"line_start":87,"line_end":87,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124529,"byte_end":124532,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcefg\"), Ok((\"\", \"abc\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124533,"byte_end":124583,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"abcefghij\"), Ok((\"hij\", \"abc\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124584,"byte_end":124640,"line_start":90,"line_end":90,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124641,"byte_end":124707,"line_start":91,"line_end":91,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124708,"byte_end":124780,"line_start":92,"line_end":92,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":124781,"byte_end":124788,"line_start":93,"line_end":93,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125917,"byte_end":125931,"line_start":129,"line_end":129,"column_start":8,"column_end":22},"name":"separated_pair","qualname":"::sequence::separated_pair","value":"pub fn separated_pair<I, O1, O2, O3, E: ParseError<I>, F, G, H>(F, G, H)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Parser<I, O2, E>,\nH: Parser<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets an object from the first parser,\n then matches an object from the sep_parser and discards it,\n then gets another object from the second parser.","sig":null,"attributes":[{"value":"/ Gets an object from the first parser,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125086,"byte_end":125127,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ then matches an object from the sep_parser and discards it,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125128,"byte_end":125191,"line_start":109,"line_end":109,"column_start":1,"column_end":64}},{"value":"/ then gets another object from the second parser.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125192,"byte_end":125244,"line_start":110,"line_end":110,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125245,"byte_end":125248,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125249,"byte_end":125264,"line_start":112,"line_end":112,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125265,"byte_end":125305,"line_start":113,"line_end":113,"column_start":1,"column_end":41}},{"value":"/ * `sep` The separator parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125306,"byte_end":125348,"line_start":114,"line_end":114,"column_start":1,"column_end":43}},{"value":"/ * `second` The second parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125349,"byte_end":125391,"line_start":115,"line_end":115,"column_start":1,"column_end":43}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125392,"byte_end":125403,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125404,"byte_end":125451,"line_start":117,"line_end":117,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125452,"byte_end":125480,"line_start":118,"line_end":118,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::separated_pair;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125481,"byte_end":125519,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125520,"byte_end":125554,"line_start":120,"line_end":120,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125555,"byte_end":125558,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ let mut parser = separated_pair(tag(\"abc\"), tag(\"|\"), tag(\"efg\"));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125559,"byte_end":125629,"line_start":122,"line_end":122,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125630,"byte_end":125633,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc|efg\"), Ok((\"\", (\"abc\", \"efg\"))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125634,"byte_end":125694,"line_start":124,"line_end":124,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(parser(\"abc|efghij\"), Ok((\"hij\", (\"abc\", \"efg\"))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125695,"byte_end":125761,"line_start":125,"line_end":125,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125762,"byte_end":125828,"line_start":126,"line_end":126,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125829,"byte_end":125901,"line_start":127,"line_end":127,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":125902,"byte_end":125909,"line_start":128,"line_end":128,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":127150,"byte_end":127159,"line_start":167,"line_end":167,"column_start":8,"column_end":17},"name":"delimited","qualname":"::sequence::delimited","value":"pub fn delimited<I, O1, O2, O3, E: ParseError<I>, F, G, H>(F, G, H)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Parser<I, O2, E>,\nH: Parser<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":" Matches an object from the first parser and discards it,\n then gets an object from the second parser,\n and finally matches an object from the third parser and discards it.","sig":null,"attributes":[{"value":"/ Matches an object from the first parser and discards it,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126308,"byte_end":126368,"line_start":146,"line_end":146,"column_start":1,"column_end":61}},{"value":"/ then gets an object from the second parser,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126369,"byte_end":126416,"line_start":147,"line_end":147,"column_start":1,"column_end":48}},{"value":"/ and finally matches an object from the third parser and discards it.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126417,"byte_end":126489,"line_start":148,"line_end":148,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126490,"byte_end":126493,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126494,"byte_end":126509,"line_start":150,"line_end":150,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply and discard.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126510,"byte_end":126562,"line_start":151,"line_end":151,"column_start":1,"column_end":53}},{"value":"/ * `second` The second parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126563,"byte_end":126605,"line_start":152,"line_end":152,"column_start":1,"column_end":43}},{"value":"/ * `third` The third parser to apply and discard.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126606,"byte_end":126658,"line_start":153,"line_end":153,"column_start":1,"column_end":53}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126659,"byte_end":126670,"line_start":154,"line_end":154,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126671,"byte_end":126718,"line_start":155,"line_end":155,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126719,"byte_end":126747,"line_start":156,"line_end":156,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::delimited;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126748,"byte_end":126781,"line_start":157,"line_end":157,"column_start":1,"column_end":34}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126782,"byte_end":126816,"line_start":158,"line_end":158,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126817,"byte_end":126820,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ let mut parser = delimited(tag(\"(\"), tag(\"abc\"), tag(\")\"));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126821,"byte_end":126884,"line_start":160,"line_end":160,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126885,"byte_end":126888,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"(abc)\"), Ok((\"\", \"abc\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126889,"byte_end":126938,"line_start":162,"line_end":162,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"(abc)def\"), Ok((\"def\", \"abc\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126939,"byte_end":126994,"line_start":163,"line_end":163,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":126995,"byte_end":127061,"line_start":164,"line_end":164,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":127062,"byte_end":127134,"line_start":165,"line_end":165,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":127135,"byte_end":127142,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":127658,"byte_end":127663,"line_start":187,"line_end":187,"column_start":11,"column_end":16},"name":"Tuple","qualname":"::sequence::Tuple","value":"Tuple<I, O, E>","parent":null,"children":[{"krate":0,"index":1191}],"decl_id":null,"docs":" Helper trait for the tuple combinator.","sig":null,"attributes":[{"value":"/ Helper trait for the tuple combinator.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":127527,"byte_end":127569,"line_start":184,"line_end":184,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":127570,"byte_end":127573,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for tuples of parsers of up to 21 elements.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":127574,"byte_end":127647,"line_start":186,"line_end":186,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":127750,"byte_end":127755,"line_start":189,"line_end":189,"column_start":6,"column_end":11},"name":"parse","qualname":"::sequence::Tuple::parse","value":"pub fn parse(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":1187},"children":[],"decl_id":null,"docs":" Parses the input and returns a tuple of results of each parser.\n","sig":null,"attributes":[{"value":"/ Parses the input and returns a tuple of results of each parser.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":127677,"byte_end":127744,"line_start":188,"line_end":188,"column_start":3,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":130240,"byte_end":130245,"line_start":261,"line_end":261,"column_start":8,"column_end":13},"name":"tuple","qualname":"::sequence::tuple","value":"pub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(List)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"Applies a tuple of parsers one by one and returns their results as a tuple.","sig":null,"attributes":[{"value":"/Applies a tuple of parsers one by one and returns their results as a tuple.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":129799,"byte_end":129877,"line_start":250,"line_end":250,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":129878,"byte_end":129881,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":129882,"byte_end":129893,"line_start":252,"line_end":252,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":129894,"byte_end":129933,"line_start":253,"line_end":253,"column_start":1,"column_end":40}},{"value":"/ use nom::sequence::tuple;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":129934,"byte_end":129963,"line_start":254,"line_end":254,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::{alpha1, digit1};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":129964,"byte_end":130015,"line_start":255,"line_end":255,"column_start":1,"column_end":52}},{"value":"/ let mut parser = tuple((alpha1, digit1, alpha1));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":130016,"byte_end":130069,"line_start":256,"line_end":256,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":130070,"byte_end":130073,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc123def\"), Ok((\"\", (\"abc\", \"123\", \"def\"))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":130074,"byte_end":130143,"line_start":258,"line_end":258,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(\"123def\"), Err(Err::Error((\"123def\", ErrorKind::Alpha))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":130144,"byte_end":130224,"line_start":259,"line_end":259,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/sequence/mod.rs","byte_start":130225,"byte_end":130232,"line_start":260,"line_end":260,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1209},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"multi","qualname":"::multi","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1213},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1220},{"krate":0,"index":1223},{"krate":0,"index":1226},{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1242},{"krate":0,"index":1245},{"krate":0,"index":1252},{"krate":0,"index":1259},{"krate":0,"index":1268},{"krate":0,"index":1277},{"krate":0,"index":1286},{"krate":0,"index":1293},{"krate":0,"index":1300},{"krate":0,"index":1307},{"krate":0,"index":1314},{"krate":0,"index":1322},{"krate":0,"index":1332},{"krate":0,"index":1342},{"krate":0,"index":1352},{"krate":0,"index":1359},{"krate":0,"index":1368}],"decl_id":null,"docs":" Combinators applying their child parser multiple times\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15594,"byte_end":15606,"line_start":457,"line_end":457,"column_start":1,"column_end":13}},{"value":"/ Combinators applying their child parser multiple times","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":130377,"byte_end":130435,"line_start":1,"line_end":1,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131587,"byte_end":131592,"line_start":40,"line_end":40,"column_start":8,"column_end":13},"name":"many0","qualname":"::multi::many0","value":"pub fn many0<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone + InputLength,\nF: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser until it fails\n and returns the results in a `Vec`.","sig":null,"attributes":[{"value":"/ Repeats the embedded parser until it fails","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":130715,"byte_end":130761,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ and returns the results in a `Vec`.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":130762,"byte_end":130801,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":130802,"byte_end":130805,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":130806,"byte_end":130821,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":130822,"byte_end":130852,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":130853,"byte_end":130856,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ *Note*: if the parser passed to `many0` accepts empty inputs","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":130857,"byte_end":130921,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ (like `alpha0` or `digit0`), `many0` will return an error,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":130922,"byte_end":130984,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ to prevent going into an infinite loop","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":130985,"byte_end":131027,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131028,"byte_end":131031,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131032,"byte_end":131043,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131044,"byte_end":131100,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::many0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131101,"byte_end":131127,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131128,"byte_end":131162,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131163,"byte_end":131166,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131167,"byte_end":131219,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/   many0(tag(\"abc\"))(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131220,"byte_end":131246,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131247,"byte_end":131252,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131253,"byte_end":131256,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131257,"byte_end":131320,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131321,"byte_end":131380,"line_start":34,"line_end":34,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131381,"byte_end":131438,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131439,"byte_end":131484,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131485,"byte_end":131492,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":131493,"byte_end":131518,"line_start":38,"line_end":38,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":133280,"byte_end":133285,"line_start":95,"line_end":95,"column_start":8,"column_end":13},"name":"many1","qualname":"::multi::many1","value":"pub fn many1<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone + InputLength,\nF: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Runs the embedded parser until it fails and\n returns the results in a `Vec`. Fails if\n the embedded parser does not produce at least\n one result.","sig":null,"attributes":[{"value":"/ Runs the embedded parser until it fails and","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132264,"byte_end":132311,"line_start":67,"line_end":67,"column_start":1,"column_end":48}},{"value":"/ returns the results in a `Vec`. Fails if","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132312,"byte_end":132356,"line_start":68,"line_end":68,"column_start":1,"column_end":45}},{"value":"/ the embedded parser does not produce at least","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132357,"byte_end":132406,"line_start":69,"line_end":69,"column_start":1,"column_end":50}},{"value":"/ one result.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132407,"byte_end":132422,"line_start":70,"line_end":70,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132423,"byte_end":132426,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132427,"byte_end":132442,"line_start":72,"line_end":72,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132443,"byte_end":132473,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132474,"byte_end":132477,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ *Note*: If the parser passed to `many1` accepts empty inputs","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132478,"byte_end":132542,"line_start":75,"line_end":75,"column_start":1,"column_end":65}},{"value":"/ (like `alpha0` or `digit0`), `many1` will return an error,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132543,"byte_end":132605,"line_start":76,"line_end":76,"column_start":1,"column_end":63}},{"value":"/ to prevent going into an infinite loop.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132606,"byte_end":132649,"line_start":77,"line_end":77,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132650,"byte_end":132653,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132654,"byte_end":132665,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132666,"byte_end":132731,"line_start":80,"line_end":80,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::many1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132732,"byte_end":132758,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132759,"byte_end":132793,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132794,"byte_end":132797,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132798,"byte_end":132850,"line_start":84,"line_end":84,"column_start":1,"column_end":53}},{"value":"/   many1(tag(\"abc\"))(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132851,"byte_end":132877,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132878,"byte_end":132883,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132884,"byte_end":132887,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132888,"byte_end":132951,"line_start":88,"line_end":88,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":132952,"byte_end":133011,"line_start":89,"line_end":89,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":133012,"byte_end":133100,"line_start":90,"line_end":90,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":133101,"byte_end":133177,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":133178,"byte_end":133185,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":133186,"byte_end":133211,"line_start":93,"line_end":93,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":135113,"byte_end":135122,"line_start":149,"line_end":149,"column_start":8,"column_end":17},"name":"many_till","qualname":"::multi::many_till","value":"pub fn many_till<I, O, P, E, F, G>(F, G) -> /*impl Trait*/ where I: Clone +\nInputLength, F: Parser<I, O, E>, G: Parser<I, P, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Applies the parser `f` until the parser `g` produces\n a result. Returns a pair consisting of the results of\n `f` in a `Vec` and the result of `g`.\n ```rust\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::many_till;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies the parser `f` until the parser `g` produces","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134179,"byte_end":134235,"line_start":129,"line_end":129,"column_start":1,"column_end":57}},{"value":"/ a result. Returns a pair consisting of the results of","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134236,"byte_end":134293,"line_start":130,"line_end":130,"column_start":1,"column_end":58}},{"value":"/ `f` in a `Vec` and the result of `g`.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134294,"byte_end":134335,"line_start":131,"line_end":131,"column_start":1,"column_end":42}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134336,"byte_end":134347,"line_start":132,"line_end":132,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134348,"byte_end":134413,"line_start":133,"line_end":133,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::many_till;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134414,"byte_end":134444,"line_start":134,"line_end":134,"column_start":1,"column_end":31}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134445,"byte_end":134479,"line_start":135,"line_end":135,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134480,"byte_end":134483,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, (Vec<&str>, &str)> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134484,"byte_end":134544,"line_start":137,"line_end":137,"column_start":1,"column_end":61}},{"value":"/   many_till(tag(\"abc\"), tag(\"end\"))(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134545,"byte_end":134587,"line_start":138,"line_end":138,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134588,"byte_end":134594,"line_start":139,"line_end":139,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134595,"byte_end":134598,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabcend\"), Ok((\"\", (vec![\"abc\", \"abc\"], \"end\"))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134599,"byte_end":134674,"line_start":141,"line_end":141,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(\"abc123end\"), Err(Err::Error(Error::new(\"123end\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134675,"byte_end":134766,"line_start":142,"line_end":142,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"123123end\"), Err(Err::Error(Error::new(\"123123end\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134767,"byte_end":134861,"line_start":143,"line_end":143,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134862,"byte_end":134938,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"abcendefg\"), Ok((\"efg\", (vec![\"abc\"], \"end\"))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":134939,"byte_end":135010,"line_start":145,"line_end":145,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":135011,"byte_end":135018,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":135019,"byte_end":135044,"line_start":147,"line_end":147,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136952,"byte_end":136967,"line_start":209,"line_end":209,"column_start":8,"column_end":23},"name":"separated_list0","qualname":"::multi::separated_list0","value":"pub fn separated_list0<I, O, O2, E, F, G>(G, F) -> /*impl Trait*/ where\nI: Clone + InputLength, F: Parser<I, O, E>, G: Parser<I, O2, E>,\nE: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Alternates between two parsers to produce\n a list of elements.\n # Arguments\n * `sep` Parses the separator between list elements.\n * `f` Parses the elements of the list.","sig":null,"attributes":[{"value":"/ Alternates between two parsers to produce","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136096,"byte_end":136141,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/ a list of elements.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136142,"byte_end":136165,"line_start":187,"line_end":187,"column_start":1,"column_end":24}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136166,"byte_end":136181,"line_start":188,"line_end":188,"column_start":1,"column_end":16}},{"value":"/ * `sep` Parses the separator between list elements.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136182,"byte_end":136237,"line_start":189,"line_end":189,"column_start":1,"column_end":56}},{"value":"/ * `f` Parses the elements of the list.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136238,"byte_end":136280,"line_start":190,"line_end":190,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136281,"byte_end":136284,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136285,"byte_end":136296,"line_start":192,"line_end":192,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136297,"byte_end":136353,"line_start":193,"line_end":193,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::separated_list0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136354,"byte_end":136390,"line_start":194,"line_end":194,"column_start":1,"column_end":37}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136391,"byte_end":136425,"line_start":195,"line_end":195,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136426,"byte_end":136429,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136430,"byte_end":136482,"line_start":197,"line_end":197,"column_start":1,"column_end":53}},{"value":"/   separated_list0(tag(\"|\"), tag(\"abc\"))(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136483,"byte_end":136529,"line_start":198,"line_end":198,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136530,"byte_end":136535,"line_start":199,"line_end":199,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136536,"byte_end":136539,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc|abc|abc\"), Ok((\"\", vec![\"abc\", \"abc\", \"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136540,"byte_end":136615,"line_start":201,"line_end":201,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(\"abc123abc\"), Ok((\"123abc\", vec![\"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136616,"byte_end":136681,"line_start":202,"line_end":202,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(parser(\"abc|def\"), Ok((\"|def\", vec![\"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136682,"byte_end":136743,"line_start":203,"line_end":203,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136744,"byte_end":136789,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"def|abc\"), Ok((\"def|abc\", vec![])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136790,"byte_end":136849,"line_start":205,"line_end":205,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136850,"byte_end":136857,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":136858,"byte_end":136883,"line_start":207,"line_end":207,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1277},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":139077,"byte_end":139092,"line_start":280,"line_end":280,"column_start":8,"column_end":23},"name":"separated_list1","qualname":"::multi::separated_list1","value":"pub fn separated_list1<I, O, O2, E, F, G>(G, F) -> /*impl Trait*/ where\nI: Clone + InputLength, F: Parser<I, O, E>, G: Parser<I, O2, E>,\nE: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Alternates between two parsers to produce\n a list of elements. Fails if the element\n parser does not produce at least one element.\n # Arguments\n * `sep` Parses the separator between list elements.\n * `f` Parses the elements of the list.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::separated_list1;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Alternates between two parsers to produce","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138046,"byte_end":138091,"line_start":256,"line_end":256,"column_start":1,"column_end":46}},{"value":"/ a list of elements. Fails if the element","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138092,"byte_end":138136,"line_start":257,"line_end":257,"column_start":1,"column_end":45}},{"value":"/ parser does not produce at least one element.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138137,"byte_end":138186,"line_start":258,"line_end":258,"column_start":1,"column_end":50}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138187,"byte_end":138202,"line_start":259,"line_end":259,"column_start":1,"column_end":16}},{"value":"/ * `sep` Parses the separator between list elements.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138203,"byte_end":138258,"line_start":260,"line_end":260,"column_start":1,"column_end":56}},{"value":"/ * `f` Parses the elements of the list.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138259,"byte_end":138301,"line_start":261,"line_end":261,"column_start":1,"column_end":43}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138302,"byte_end":138313,"line_start":262,"line_end":262,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138314,"byte_end":138350,"line_start":263,"line_end":263,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138351,"byte_end":138416,"line_start":264,"line_end":264,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::separated_list1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138417,"byte_end":138453,"line_start":265,"line_end":265,"column_start":1,"column_end":37}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138454,"byte_end":138488,"line_start":266,"line_end":266,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138489,"byte_end":138492,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138493,"byte_end":138545,"line_start":268,"line_end":268,"column_start":1,"column_end":53}},{"value":"/   separated_list1(tag(\"|\"), tag(\"abc\"))(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138546,"byte_end":138592,"line_start":269,"line_end":269,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138593,"byte_end":138598,"line_start":270,"line_end":270,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138599,"byte_end":138602,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc|abc|abc\"), Ok((\"\", vec![\"abc\", \"abc\", \"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138603,"byte_end":138678,"line_start":272,"line_end":272,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(\"abc123abc\"), Ok((\"123abc\", vec![\"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138679,"byte_end":138744,"line_start":273,"line_end":273,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(parser(\"abc|def\"), Ok((\"|def\", vec![\"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138745,"byte_end":138806,"line_start":274,"line_end":274,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138807,"byte_end":138883,"line_start":275,"line_end":275,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"def|abc\"), Err(Err::Error(Error::new(\"def|abc\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138884,"byte_end":138974,"line_start":276,"line_end":276,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138975,"byte_end":138982,"line_start":277,"line_end":277,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":138983,"byte_end":139008,"line_start":278,"line_end":278,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":141132,"byte_end":141140,"line_start":352,"line_end":352,"column_start":8,"column_end":16},"name":"many_m_n","qualname":"::multi::many_m_n","value":"pub fn many_m_n<I, O, E, F>(usize, usize, F) -> /*impl Trait*/ where\nI: Clone + InputLength, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser `n` times or until it fails\n and returns the results in a `Vec`. Fails if the\n embedded parser does not succeed at least `m` times.\n # Arguments\n * `m` The minimum number of iterations.\n * `n` The maximum number of iterations.\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::many_m_n;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Repeats the embedded parser `n` times or until it fails","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140153,"byte_end":140212,"line_start":327,"line_end":327,"column_start":1,"column_end":60}},{"value":"/ and returns the results in a `Vec`. Fails if the","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140213,"byte_end":140265,"line_start":328,"line_end":328,"column_start":1,"column_end":53}},{"value":"/ embedded parser does not succeed at least `m` times.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140266,"byte_end":140322,"line_start":329,"line_end":329,"column_start":1,"column_end":57}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140323,"byte_end":140338,"line_start":330,"line_end":330,"column_start":1,"column_end":16}},{"value":"/ * `m` The minimum number of iterations.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140339,"byte_end":140382,"line_start":331,"line_end":331,"column_start":1,"column_end":44}},{"value":"/ * `n` The maximum number of iterations.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140383,"byte_end":140426,"line_start":332,"line_end":332,"column_start":1,"column_end":44}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140427,"byte_end":140457,"line_start":333,"line_end":333,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140458,"byte_end":140469,"line_start":334,"line_end":334,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140470,"byte_end":140506,"line_start":335,"line_end":335,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140507,"byte_end":140563,"line_start":336,"line_end":336,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::many_m_n;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140564,"byte_end":140593,"line_start":337,"line_end":337,"column_start":1,"column_end":30}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140594,"byte_end":140628,"line_start":338,"line_end":338,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140629,"byte_end":140632,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140633,"byte_end":140685,"line_start":340,"line_end":340,"column_start":1,"column_end":53}},{"value":"/   many_m_n(0, 2, tag(\"abc\"))(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140686,"byte_end":140721,"line_start":341,"line_end":341,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140722,"byte_end":140727,"line_start":342,"line_end":342,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140728,"byte_end":140731,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140732,"byte_end":140795,"line_start":344,"line_end":344,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140796,"byte_end":140855,"line_start":345,"line_end":345,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140856,"byte_end":140913,"line_start":346,"line_end":346,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140914,"byte_end":140959,"line_start":347,"line_end":347,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":140960,"byte_end":141029,"line_start":348,"line_end":348,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":141030,"byte_end":141037,"line_start":349,"line_end":349,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":141038,"byte_end":141063,"line_start":350,"line_end":350,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142838,"byte_end":142849,"line_start":416,"line_end":416,"column_start":8,"column_end":19},"name":"many0_count","qualname":"::multi::many0_count","value":"pub fn many0_count<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone +\nInputLength, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser until it fails\n and returns the number of successful iterations.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::many0_count;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Repeats the embedded parser until it fails","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142215,"byte_end":142261,"line_start":397,"line_end":397,"column_start":1,"column_end":47}},{"value":"/ and returns the number of successful iterations.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142262,"byte_end":142314,"line_start":398,"line_end":398,"column_start":1,"column_end":53}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142315,"byte_end":142330,"line_start":399,"line_end":399,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142331,"byte_end":142361,"line_start":400,"line_end":400,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142362,"byte_end":142373,"line_start":401,"line_end":401,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142374,"byte_end":142410,"line_start":402,"line_end":402,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142411,"byte_end":142467,"line_start":403,"line_end":403,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::many0_count;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142468,"byte_end":142500,"line_start":404,"line_end":404,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142501,"byte_end":142535,"line_start":405,"line_end":405,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142536,"byte_end":142539,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, usize> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142540,"byte_end":142588,"line_start":407,"line_end":407,"column_start":1,"column_end":49}},{"value":"/   many0_count(tag(\"abc\"))(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142589,"byte_end":142621,"line_start":408,"line_end":408,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142622,"byte_end":142627,"line_start":409,"line_end":409,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142628,"byte_end":142631,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", 2)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142632,"byte_end":142678,"line_start":411,"line_end":411,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", 1)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142679,"byte_end":142728,"line_start":412,"line_end":412,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", 0)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142729,"byte_end":142781,"line_start":413,"line_end":413,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", 0)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142782,"byte_end":142822,"line_start":414,"line_end":414,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":142823,"byte_end":142830,"line_start":415,"line_end":415,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":144339,"byte_end":144350,"line_start":469,"line_end":469,"column_start":8,"column_end":19},"name":"many1_count","qualname":"::multi::many1_count","value":"pub fn many1_count<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone +\nInputLength, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser until it fails\n and returns the number of successful iterations.\n Fails if the embedded parser does not succeed\n at least once.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::many1_count;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Repeats the embedded parser until it fails","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":143552,"byte_end":143598,"line_start":448,"line_end":448,"column_start":1,"column_end":47}},{"value":"/ and returns the number of successful iterations.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":143599,"byte_end":143651,"line_start":449,"line_end":449,"column_start":1,"column_end":53}},{"value":"/ Fails if the embedded parser does not succeed","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":143652,"byte_end":143701,"line_start":450,"line_end":450,"column_start":1,"column_end":50}},{"value":"/ at least once.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":143702,"byte_end":143720,"line_start":451,"line_end":451,"column_start":1,"column_end":19}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":143721,"byte_end":143736,"line_start":452,"line_end":452,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":143737,"byte_end":143767,"line_start":453,"line_end":453,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":143768,"byte_end":143779,"line_start":454,"line_end":454,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":143780,"byte_end":143816,"line_start":455,"line_end":455,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":143817,"byte_end":143882,"line_start":456,"line_end":456,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::many1_count;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":143883,"byte_end":143915,"line_start":457,"line_end":457,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":143916,"byte_end":143950,"line_start":458,"line_end":458,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":143951,"byte_end":143954,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, usize> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":143955,"byte_end":144003,"line_start":460,"line_end":460,"column_start":1,"column_end":49}},{"value":"/   many1_count(tag(\"abc\"))(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":144004,"byte_end":144036,"line_start":461,"line_end":461,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":144037,"byte_end":144042,"line_start":462,"line_end":462,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":144043,"byte_end":144046,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", 2)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":144047,"byte_end":144093,"line_start":464,"line_end":464,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", 1)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":144094,"byte_end":144143,"line_start":465,"line_end":465,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Many1Count))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":144144,"byte_end":144239,"line_start":466,"line_end":466,"column_start":1,"column_end":96}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Many1Count))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":144240,"byte_end":144323,"line_start":467,"line_end":467,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":144324,"byte_end":144331,"line_start":468,"line_end":468,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":146268,"byte_end":146273,"line_start":529,"line_end":529,"column_start":8,"column_end":13},"name":"count","qualname":"::multi::count","value":"pub fn count<I, O, E, F>(F, usize) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Runs the embedded parser a specified number\n of times. Returns the results in a `Vec`.\n # Arguments\n * `f` The parser to apply.\n * `count` How often to apply the parser.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::count;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Runs the embedded parser a specified number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145320,"byte_end":145367,"line_start":506,"line_end":506,"column_start":1,"column_end":48}},{"value":"/ of times. Returns the results in a `Vec`.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145368,"byte_end":145413,"line_start":507,"line_end":507,"column_start":1,"column_end":46}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145414,"byte_end":145429,"line_start":508,"line_end":508,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145430,"byte_end":145460,"line_start":509,"line_end":509,"column_start":1,"column_end":31}},{"value":"/ * `count` How often to apply the parser.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145461,"byte_end":145505,"line_start":510,"line_end":510,"column_start":1,"column_end":45}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145506,"byte_end":145517,"line_start":511,"line_end":511,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145518,"byte_end":145554,"line_start":512,"line_end":512,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145555,"byte_end":145620,"line_start":513,"line_end":513,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::count;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145621,"byte_end":145647,"line_start":514,"line_end":514,"column_start":1,"column_end":27}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145648,"byte_end":145682,"line_start":515,"line_end":515,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145683,"byte_end":145686,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145687,"byte_end":145739,"line_start":517,"line_end":517,"column_start":1,"column_end":53}},{"value":"/   count(tag(\"abc\"), 2)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145740,"byte_end":145769,"line_start":518,"line_end":518,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145770,"byte_end":145775,"line_start":519,"line_end":519,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145776,"byte_end":145779,"line_start":520,"line_end":520,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145780,"byte_end":145843,"line_start":521,"line_end":521,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Err(Err::Error(Error::new(\"123\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145844,"byte_end":145929,"line_start":522,"line_end":522,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":145930,"byte_end":146018,"line_start":523,"line_end":523,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":146019,"byte_end":146095,"line_start":524,"line_end":524,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":146096,"byte_end":146165,"line_start":525,"line_end":525,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":146166,"byte_end":146173,"line_start":526,"line_end":526,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":146174,"byte_end":146199,"line_start":527,"line_end":527,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147891,"byte_end":147895,"line_start":582,"line_end":582,"column_start":8,"column_end":12},"name":"fill","qualname":"::multi::fill","value":"pub fn fill<'a, I, O, E, F>(F, &'a mut [O]) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Fn(I) -> IResult<I, O, E> + 'a, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Runs the embedded parser repeatedly, filling the given slice with results. This parser fails if\n the input runs out before the given slice is full.\n # Arguments\n * `f` The parser to apply.\n * `buf` The slice to fill\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::fill;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Runs the embedded parser repeatedly, filling the given slice with results. This parser fails if","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":146916,"byte_end":147015,"line_start":559,"line_end":559,"column_start":1,"column_end":100}},{"value":"/ the input runs out before the given slice is full.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147016,"byte_end":147070,"line_start":560,"line_end":560,"column_start":1,"column_end":55}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147071,"byte_end":147086,"line_start":561,"line_end":561,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147087,"byte_end":147117,"line_start":562,"line_end":562,"column_start":1,"column_end":31}},{"value":"/ * `buf` The slice to fill","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147118,"byte_end":147147,"line_start":563,"line_end":563,"column_start":1,"column_end":30}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147148,"byte_end":147159,"line_start":564,"line_end":564,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147160,"byte_end":147196,"line_start":565,"line_end":565,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147197,"byte_end":147262,"line_start":566,"line_end":566,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::fill;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147263,"byte_end":147288,"line_start":567,"line_end":567,"column_start":1,"column_end":26}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147289,"byte_end":147323,"line_start":568,"line_end":568,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147324,"byte_end":147327,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, [&str; 2]> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147328,"byte_end":147380,"line_start":570,"line_end":570,"column_start":1,"column_end":53}},{"value":"/   let mut buf = [\"\", \"\"];","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147381,"byte_end":147410,"line_start":571,"line_end":571,"column_start":1,"column_end":30}},{"value":"/   let (rest, ()) = fill(tag(\"abc\"), &mut buf)(s)?;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147411,"byte_end":147465,"line_start":572,"line_end":572,"column_start":1,"column_end":55}},{"value":"/   Ok((rest, buf))","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147466,"byte_end":147487,"line_start":573,"line_end":573,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147488,"byte_end":147493,"line_start":574,"line_end":574,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147494,"byte_end":147497,"line_start":575,"line_end":575,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", [\"abc\", \"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147498,"byte_end":147557,"line_start":576,"line_end":576,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"abc123\"), Err(Err::Error(Error::new(\"123\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147558,"byte_end":147643,"line_start":577,"line_end":577,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147644,"byte_end":147732,"line_start":578,"line_end":578,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147733,"byte_end":147809,"line_start":579,"line_end":579,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", [\"abc\", \"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147810,"byte_end":147875,"line_start":580,"line_end":580,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":147876,"byte_end":147883,"line_start":581,"line_end":581,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149428,"byte_end":149438,"line_start":640,"line_end":640,"column_start":8,"column_end":18},"name":"fold_many0","qualname":"::multi::fold_many0","value":"pub fn fold_many0<I, O, E, F, G, H, R>(F, H, G) -> /*impl Trait*/ where\nI: Clone + InputLength, F: Parser<I, O, E>, G: FnMut(R, O) -> R, H: FnMut() ->\nR, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser until it fails and accumulates\n the results using a given function and initial value.\n # Arguments\n * `f` The parser to apply.\n * `init` A function returning the initial value.\n * `g` The function that combines a result of `f` with\n       the current accumulator.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::fold_many0;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies a parser until it fails and accumulates","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":148491,"byte_end":148542,"line_start":611,"line_end":611,"column_start":1,"column_end":52}},{"value":"/ the results using a given function and initial value.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":148543,"byte_end":148600,"line_start":612,"line_end":612,"column_start":1,"column_end":58}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":148601,"byte_end":148616,"line_start":613,"line_end":613,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":148617,"byte_end":148647,"line_start":614,"line_end":614,"column_start":1,"column_end":31}},{"value":"/ * `init` A function returning the initial value.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":148648,"byte_end":148700,"line_start":615,"line_end":615,"column_start":1,"column_end":53}},{"value":"/ * `g` The function that combines a result of `f` with","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":148701,"byte_end":148758,"line_start":616,"line_end":616,"column_start":1,"column_end":58}},{"value":"/       the current accumulator.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":148759,"byte_end":148793,"line_start":617,"line_end":617,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":148794,"byte_end":148805,"line_start":618,"line_end":618,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":148806,"byte_end":148842,"line_start":619,"line_end":619,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":148843,"byte_end":148899,"line_start":620,"line_end":620,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::fold_many0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":148900,"byte_end":148931,"line_start":621,"line_end":621,"column_start":1,"column_end":32}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":148932,"byte_end":148966,"line_start":622,"line_end":622,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":148967,"byte_end":148970,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":148971,"byte_end":149023,"line_start":624,"line_end":624,"column_start":1,"column_end":53}},{"value":"/   fold_many0(","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149024,"byte_end":149041,"line_start":625,"line_end":625,"column_start":1,"column_end":18}},{"value":"/     tag(\"abc\"),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149042,"byte_end":149061,"line_start":626,"line_end":626,"column_start":1,"column_end":20}},{"value":"/     Vec::new,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149062,"byte_end":149079,"line_start":627,"line_end":627,"column_start":1,"column_end":18}},{"value":"/     |mut acc: Vec<_>, item| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149080,"byte_end":149113,"line_start":628,"line_end":628,"column_start":1,"column_end":34}},{"value":"/       acc.push(item);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149114,"byte_end":149139,"line_start":629,"line_end":629,"column_start":1,"column_end":26}},{"value":"/       acc","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149140,"byte_end":149153,"line_start":630,"line_end":630,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149154,"byte_end":149163,"line_start":631,"line_end":631,"column_start":1,"column_end":10}},{"value":"/   )(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149164,"byte_end":149174,"line_start":632,"line_end":632,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149175,"byte_end":149180,"line_start":633,"line_end":633,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149181,"byte_end":149184,"line_start":634,"line_end":634,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149185,"byte_end":149248,"line_start":635,"line_end":635,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149249,"byte_end":149308,"line_start":636,"line_end":636,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149309,"byte_end":149366,"line_start":637,"line_end":637,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149367,"byte_end":149412,"line_start":638,"line_end":638,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":149413,"byte_end":149420,"line_start":639,"line_end":639,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":151336,"byte_end":151346,"line_start":711,"line_end":711,"column_start":8,"column_end":18},"name":"fold_many1","qualname":"::multi::fold_many1","value":"pub fn fold_many1<I, O, E, F, G, H, R>(F, H, G) -> /*impl Trait*/ where\nI: Clone + InputLength, F: Parser<I, O, E>, G: FnMut(R, O) -> R, H: FnMut() ->\nR, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser until it fails and accumulates\n the results using a given function and initial value.\n Fails if the embedded parser does not succeed at least\n once.\n # Arguments\n * `f` The parser to apply.\n * `init` A function returning the initial value.\n * `g` The function that combines a result of `f` with\n       the current accumulator.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::fold_many1;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies a parser until it fails and accumulates","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150255,"byte_end":150306,"line_start":680,"line_end":680,"column_start":1,"column_end":52}},{"value":"/ the results using a given function and initial value.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150307,"byte_end":150364,"line_start":681,"line_end":681,"column_start":1,"column_end":58}},{"value":"/ Fails if the embedded parser does not succeed at least","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150365,"byte_end":150423,"line_start":682,"line_end":682,"column_start":1,"column_end":59}},{"value":"/ once.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150424,"byte_end":150433,"line_start":683,"line_end":683,"column_start":1,"column_end":10}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150434,"byte_end":150449,"line_start":684,"line_end":684,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150450,"byte_end":150480,"line_start":685,"line_end":685,"column_start":1,"column_end":31}},{"value":"/ * `init` A function returning the initial value.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150481,"byte_end":150533,"line_start":686,"line_end":686,"column_start":1,"column_end":53}},{"value":"/ * `g` The function that combines a result of `f` with","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150534,"byte_end":150591,"line_start":687,"line_end":687,"column_start":1,"column_end":58}},{"value":"/       the current accumulator.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150592,"byte_end":150626,"line_start":688,"line_end":688,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150627,"byte_end":150638,"line_start":689,"line_end":689,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150639,"byte_end":150675,"line_start":690,"line_end":690,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150676,"byte_end":150741,"line_start":691,"line_end":691,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::fold_many1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150742,"byte_end":150773,"line_start":692,"line_end":692,"column_start":1,"column_end":32}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150774,"byte_end":150808,"line_start":693,"line_end":693,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150809,"byte_end":150812,"line_start":694,"line_end":694,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150813,"byte_end":150865,"line_start":695,"line_end":695,"column_start":1,"column_end":53}},{"value":"/   fold_many1(","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150866,"byte_end":150883,"line_start":696,"line_end":696,"column_start":1,"column_end":18}},{"value":"/     tag(\"abc\"),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150884,"byte_end":150903,"line_start":697,"line_end":697,"column_start":1,"column_end":20}},{"value":"/     Vec::new,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150904,"byte_end":150921,"line_start":698,"line_end":698,"column_start":1,"column_end":18}},{"value":"/     |mut acc: Vec<_>, item| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150922,"byte_end":150955,"line_start":699,"line_end":699,"column_start":1,"column_end":34}},{"value":"/       acc.push(item);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150956,"byte_end":150981,"line_start":700,"line_end":700,"column_start":1,"column_end":26}},{"value":"/       acc","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150982,"byte_end":150995,"line_start":701,"line_end":701,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":150996,"byte_end":151005,"line_start":702,"line_end":702,"column_start":1,"column_end":10}},{"value":"/   )(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":151006,"byte_end":151016,"line_start":703,"line_end":703,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":151017,"byte_end":151022,"line_start":704,"line_end":704,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":151023,"byte_end":151026,"line_start":705,"line_end":705,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":151027,"byte_end":151090,"line_start":706,"line_end":706,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":151091,"byte_end":151150,"line_start":707,"line_end":707,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Many1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":151151,"byte_end":151241,"line_start":708,"line_end":708,"column_start":1,"column_end":91}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Many1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":151242,"byte_end":151320,"line_start":709,"line_end":709,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":151321,"byte_end":151328,"line_start":710,"line_end":710,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153670,"byte_end":153683,"line_start":795,"line_end":795,"column_start":8,"column_end":21},"name":"fold_many_m_n","qualname":"::multi::fold_many_m_n","value":"pub fn fold_many_m_n<I, O, E, F, G, H, R>(usize, usize, F, H, G)\n-> /*impl Trait*/ where I: Clone + InputLength, F: Parser<I, O, E>,\nG: FnMut(R, O) -> R, H: FnMut() -> R, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser `n` times or until it fails and accumulates\n the results using a given function and initial value.\n Fails if the embedded parser does not succeed at least `m`\n times.\n # Arguments\n * `m` The minimum number of iterations.\n * `n` The maximum number of iterations.\n * `f` The parser to apply.\n * `init` A function returning the initial value.\n * `g` The function that combines a result of `f` with\n       the current accumulator.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::fold_many_m_n;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies a parser `n` times or until it fails and accumulates","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":152460,"byte_end":152524,"line_start":759,"line_end":759,"column_start":1,"column_end":65}},{"value":"/ the results using a given function and initial value.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":152525,"byte_end":152582,"line_start":760,"line_end":760,"column_start":1,"column_end":58}},{"value":"/ Fails if the embedded parser does not succeed at least `m`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":152583,"byte_end":152645,"line_start":761,"line_end":761,"column_start":1,"column_end":63}},{"value":"/ times.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":152646,"byte_end":152656,"line_start":762,"line_end":762,"column_start":1,"column_end":11}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":152657,"byte_end":152672,"line_start":763,"line_end":763,"column_start":1,"column_end":16}},{"value":"/ * `m` The minimum number of iterations.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":152673,"byte_end":152716,"line_start":764,"line_end":764,"column_start":1,"column_end":44}},{"value":"/ * `n` The maximum number of iterations.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":152717,"byte_end":152760,"line_start":765,"line_end":765,"column_start":1,"column_end":44}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":152761,"byte_end":152791,"line_start":766,"line_end":766,"column_start":1,"column_end":31}},{"value":"/ * `init` A function returning the initial value.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":152792,"byte_end":152844,"line_start":767,"line_end":767,"column_start":1,"column_end":53}},{"value":"/ * `g` The function that combines a result of `f` with","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":152845,"byte_end":152902,"line_start":768,"line_end":768,"column_start":1,"column_end":58}},{"value":"/       the current accumulator.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":152903,"byte_end":152937,"line_start":769,"line_end":769,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":152938,"byte_end":152949,"line_start":770,"line_end":770,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":152950,"byte_end":152986,"line_start":771,"line_end":771,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":152987,"byte_end":153043,"line_start":772,"line_end":772,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::fold_many_m_n;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153044,"byte_end":153078,"line_start":773,"line_end":773,"column_start":1,"column_end":35}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153079,"byte_end":153113,"line_start":774,"line_end":774,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153114,"byte_end":153117,"line_start":775,"line_end":775,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153118,"byte_end":153170,"line_start":776,"line_end":776,"column_start":1,"column_end":53}},{"value":"/   fold_many_m_n(","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153171,"byte_end":153191,"line_start":777,"line_end":777,"column_start":1,"column_end":21}},{"value":"/     0,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153192,"byte_end":153202,"line_start":778,"line_end":778,"column_start":1,"column_end":11}},{"value":"/     2,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153203,"byte_end":153213,"line_start":779,"line_end":779,"column_start":1,"column_end":11}},{"value":"/     tag(\"abc\"),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153214,"byte_end":153233,"line_start":780,"line_end":780,"column_start":1,"column_end":20}},{"value":"/     Vec::new,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153234,"byte_end":153251,"line_start":781,"line_end":781,"column_start":1,"column_end":18}},{"value":"/     |mut acc: Vec<_>, item| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153252,"byte_end":153285,"line_start":782,"line_end":782,"column_start":1,"column_end":34}},{"value":"/       acc.push(item);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153286,"byte_end":153311,"line_start":783,"line_end":783,"column_start":1,"column_end":26}},{"value":"/       acc","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153312,"byte_end":153325,"line_start":784,"line_end":784,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153326,"byte_end":153335,"line_start":785,"line_end":785,"column_start":1,"column_end":10}},{"value":"/   )(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153336,"byte_end":153346,"line_start":786,"line_end":786,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153347,"byte_end":153352,"line_start":787,"line_end":787,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153353,"byte_end":153356,"line_start":788,"line_end":788,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153357,"byte_end":153420,"line_start":789,"line_end":789,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153421,"byte_end":153480,"line_start":790,"line_end":790,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153481,"byte_end":153538,"line_start":791,"line_end":791,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153539,"byte_end":153584,"line_start":792,"line_end":792,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153585,"byte_end":153654,"line_start":793,"line_end":793,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":153655,"byte_end":153662,"line_start":794,"line_end":794,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155502,"byte_end":155513,"line_start":863,"line_end":863,"column_start":8,"column_end":19},"name":"length_data","qualname":"::multi::length_data","value":"pub fn length_data<I, N, E, F>(F) -> /*impl Trait*/ where I: InputLength +\nInputTake, N: ToUsize, F: Parser<I, N, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets a number from the parser and returns a\n subslice of the input of that size.\n If the parser returns `Incomplete`,\n `length_data` will return an error.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::number::complete::be_u16;\n use nom::multi::length_data;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Gets a number from the parser and returns a","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":154814,"byte_end":154861,"line_start":843,"line_end":843,"column_start":1,"column_end":48}},{"value":"/ subslice of the input of that size.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":154862,"byte_end":154901,"line_start":844,"line_end":844,"column_start":1,"column_end":40}},{"value":"/ If the parser returns `Incomplete`,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":154902,"byte_end":154941,"line_start":845,"line_end":845,"column_start":1,"column_end":40}},{"value":"/ `length_data` will return an error.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":154942,"byte_end":154981,"line_start":846,"line_end":846,"column_start":1,"column_end":40}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":154982,"byte_end":154997,"line_start":847,"line_end":847,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":154998,"byte_end":155028,"line_start":848,"line_end":848,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155029,"byte_end":155040,"line_start":849,"line_end":849,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155041,"byte_end":155077,"line_start":850,"line_end":850,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155078,"byte_end":155134,"line_start":851,"line_end":851,"column_start":1,"column_end":57}},{"value":"/ use nom::number::complete::be_u16;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155135,"byte_end":155173,"line_start":852,"line_end":852,"column_start":1,"column_end":39}},{"value":"/ use nom::multi::length_data;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155174,"byte_end":155206,"line_start":853,"line_end":853,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155207,"byte_end":155241,"line_start":854,"line_end":854,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155242,"byte_end":155245,"line_start":855,"line_end":855,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155246,"byte_end":155296,"line_start":856,"line_end":856,"column_start":1,"column_end":51}},{"value":"/   length_data(be_u16)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155297,"byte_end":155325,"line_start":857,"line_end":857,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155326,"byte_end":155331,"line_start":858,"line_end":858,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155332,"byte_end":155335,"line_start":859,"line_end":859,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03abcefg\"), Ok((&b\"efg\"[..], &b\"abc\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155336,"byte_end":155410,"line_start":860,"line_end":860,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03a\"), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155411,"byte_end":155486,"line_start":861,"line_end":861,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155487,"byte_end":155494,"line_start":862,"line_end":862,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156898,"byte_end":156910,"line_start":909,"line_end":909,"column_start":8,"column_end":20},"name":"length_value","qualname":"::multi::length_value","value":"pub fn length_value<I, O, N, E, F, G>(F, G) -> /*impl Trait*/ where I: Clone +\nInputLength + InputTake, N: ToUsize, F: Parser<I, N, E>, G: Parser<I, O, E>,\nE: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets a number from the first parser,\n takes a subslice of the input of that size,\n then applies the second parser on that subslice.\n If the second parser returns `Incomplete`,\n `length_value` will return an error.\n # Arguments\n * `f` The parser to apply.\n * `g` The parser to apply on the subslice.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::number::complete::be_u16;\n use nom::multi::length_value;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Gets a number from the first parser,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":155977,"byte_end":156017,"line_start":886,"line_end":886,"column_start":1,"column_end":41}},{"value":"/ takes a subslice of the input of that size,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156018,"byte_end":156065,"line_start":887,"line_end":887,"column_start":1,"column_end":48}},{"value":"/ then applies the second parser on that subslice.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156066,"byte_end":156118,"line_start":888,"line_end":888,"column_start":1,"column_end":53}},{"value":"/ If the second parser returns `Incomplete`,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156119,"byte_end":156165,"line_start":889,"line_end":889,"column_start":1,"column_end":47}},{"value":"/ `length_value` will return an error.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156166,"byte_end":156206,"line_start":890,"line_end":890,"column_start":1,"column_end":41}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156207,"byte_end":156222,"line_start":891,"line_end":891,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156223,"byte_end":156253,"line_start":892,"line_end":892,"column_start":1,"column_end":31}},{"value":"/ * `g` The parser to apply on the subslice.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156254,"byte_end":156300,"line_start":893,"line_end":893,"column_start":1,"column_end":47}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156301,"byte_end":156312,"line_start":894,"line_end":894,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156313,"byte_end":156349,"line_start":895,"line_end":895,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156350,"byte_end":156415,"line_start":896,"line_end":896,"column_start":1,"column_end":66}},{"value":"/ use nom::number::complete::be_u16;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156416,"byte_end":156454,"line_start":897,"line_end":897,"column_start":1,"column_end":39}},{"value":"/ use nom::multi::length_value;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156455,"byte_end":156488,"line_start":898,"line_end":898,"column_start":1,"column_end":34}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156489,"byte_end":156523,"line_start":899,"line_end":899,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156524,"byte_end":156527,"line_start":900,"line_end":900,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156528,"byte_end":156578,"line_start":901,"line_end":901,"column_start":1,"column_end":51}},{"value":"/   length_value(be_u16, tag(\"abc\"))(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156579,"byte_end":156620,"line_start":902,"line_end":902,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156621,"byte_end":156626,"line_start":903,"line_end":903,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156627,"byte_end":156630,"line_start":904,"line_end":904,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03abcefg\"), Ok((&b\"efg\"[..], &b\"abc\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156631,"byte_end":156705,"line_start":905,"line_end":905,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03123123\"), Err(Err::Error(Error::new(&b\"123\"[..], ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156706,"byte_end":156806,"line_start":906,"line_end":906,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03a\"), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156807,"byte_end":156882,"line_start":907,"line_end":907,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":156883,"byte_end":156890,"line_start":908,"line_end":908,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":158510,"byte_end":158522,"line_start":962,"line_end":962,"column_start":8,"column_end":20},"name":"length_count","qualname":"::multi::length_count","value":"pub fn length_count<I, O, N, E, F, G>(F, G) -> /*impl Trait*/ where I: Clone,\nN: ToUsize, F: Parser<I, N, E>, G: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets a number from the first parser,\n then applies the second parser that many times.\n # Arguments\n * `f` The parser to apply to obtain the count.\n * `g` The parser to apply repeatedly.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::number::complete::u8;\n use nom::multi::length_count;\n use nom::bytes::complete::tag;\n use nom::combinator::map;","sig":null,"attributes":[{"value":"/ Gets a number from the first parser,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":157633,"byte_end":157673,"line_start":938,"line_end":938,"column_start":1,"column_end":41}},{"value":"/ then applies the second parser that many times.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":157674,"byte_end":157725,"line_start":939,"line_end":939,"column_start":1,"column_end":52}},{"value":"/ # Arguments","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":157726,"byte_end":157741,"line_start":940,"line_end":940,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply to obtain the count.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":157742,"byte_end":157792,"line_start":941,"line_end":941,"column_start":1,"column_end":51}},{"value":"/ * `g` The parser to apply repeatedly.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":157793,"byte_end":157834,"line_start":942,"line_end":942,"column_start":1,"column_end":42}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":157835,"byte_end":157846,"line_start":943,"line_end":943,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":157847,"byte_end":157883,"line_start":944,"line_end":944,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":157884,"byte_end":157949,"line_start":945,"line_end":945,"column_start":1,"column_end":66}},{"value":"/ use nom::number::complete::u8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":157950,"byte_end":157984,"line_start":946,"line_end":946,"column_start":1,"column_end":35}},{"value":"/ use nom::multi::length_count;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":157985,"byte_end":158018,"line_start":947,"line_end":947,"column_start":1,"column_end":34}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":158019,"byte_end":158053,"line_start":948,"line_end":948,"column_start":1,"column_end":35}},{"value":"/ use nom::combinator::map;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":158054,"byte_end":158083,"line_start":949,"line_end":949,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":158084,"byte_end":158087,"line_start":950,"line_end":950,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &[u8]) -> IResult<&[u8], Vec<&[u8]>> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":158088,"byte_end":158143,"line_start":951,"line_end":951,"column_start":1,"column_end":56}},{"value":"/   length_count(map(u8, |i| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":158144,"byte_end":158176,"line_start":952,"line_end":952,"column_start":1,"column_end":33}},{"value":"/      println!(\"got number: {}\", i);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":158177,"byte_end":158216,"line_start":953,"line_end":953,"column_start":1,"column_end":40}},{"value":"/      i","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":158217,"byte_end":158227,"line_start":954,"line_end":954,"column_start":1,"column_end":11}},{"value":"/   }), tag(\"abc\"))(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":158228,"byte_end":158252,"line_start":955,"line_end":955,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":158253,"byte_end":158258,"line_start":956,"line_end":956,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":158259,"byte_end":158262,"line_start":957,"line_end":957,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x02abcabcabc\"[..]), Ok(((&b\"abc\"[..], vec![&b\"abc\"[..], &b\"abc\"[..]]))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":158263,"byte_end":158362,"line_start":958,"line_end":958,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(parser(b\"\\x03123123123\"), Err(Err::Error(Error::new(&b\"123123123\"[..], ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":158363,"byte_end":158468,"line_start":959,"line_end":959,"column_start":1,"column_end":106}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":158469,"byte_end":158476,"line_start":960,"line_end":960,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/multi/mod.rs","byte_start":158477,"byte_end":158502,"line_start":961,"line_end":961,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bytes","qualname":"::bytes","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/mod.rs","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1536}],"decl_id":null,"docs":" Parsers recognizing bytes streams\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15623,"byte_end":15635,"line_start":460,"line_end":460,"column_start":1,"column_end":13}},{"value":"/ Parsers recognizing bytes streams","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/mod.rs","byte_start":159199,"byte_end":159236,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::bytes::complete","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":1392},{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":1418},{"krate":0,"index":1421},{"krate":0,"index":1424},{"krate":0,"index":1427},{"krate":0,"index":1430},{"krate":0,"index":1436},{"krate":0,"index":1442},{"krate":0,"index":1449},{"krate":0,"index":1456},{"krate":0,"index":1463},{"krate":0,"index":1470},{"krate":0,"index":1477},{"krate":0,"index":1484},{"krate":0,"index":1491},{"krate":0,"index":1497},{"krate":0,"index":1503},{"krate":0,"index":1509},{"krate":0,"index":1522}],"decl_id":null,"docs":" Parsers recognizing bytes streams, complete input version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing bytes streams, complete input version","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":159300,"byte_end":159361,"line_start":1,"line_end":1,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":160465,"byte_end":160468,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"tag","qualname":"::bytes::complete::tag","value":"pub fn tag<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTake + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a pattern","sig":null,"attributes":[{"value":"/ Recognizes a pattern","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":159695,"byte_end":159719,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":159720,"byte_end":159723,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":159724,"byte_end":159820,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":159821,"byte_end":159860,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":159861,"byte_end":159864,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::Tag)))` if the input doesn't match the pattern","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":159865,"byte_end":159961,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":159962,"byte_end":159975,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":159976,"byte_end":159987,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":159988,"byte_end":160024,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":160025,"byte_end":160090,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":160091,"byte_end":160125,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":160126,"byte_end":160129,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":160130,"byte_end":160177,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/   tag(\"Hello\")(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":160178,"byte_end":160199,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":160200,"byte_end":160205,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":160206,"byte_end":160209,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":160210,"byte_end":160277,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":160278,"byte_end":160372,"line_start":30,"line_end":30,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":160373,"byte_end":160449,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":160450,"byte_end":160457,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161931,"byte_end":161942,"line_start":76,"line_end":76,"column_start":8,"column_end":19},"name":"tag_no_case","qualname":"::bytes::complete::tag_no_case","value":"pub fn tag_no_case<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a case insensitive pattern.","sig":null,"attributes":[{"value":"/ Recognizes a case insensitive pattern.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":160966,"byte_end":161008,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161009,"byte_end":161012,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161013,"byte_end":161109,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument with no regard to case.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161110,"byte_end":161173,"line_start":57,"line_end":57,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161174,"byte_end":161177,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::Tag)))` if the input doesn't match the pattern.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161178,"byte_end":161275,"line_start":59,"line_end":59,"column_start":1,"column_end":98}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161276,"byte_end":161289,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161290,"byte_end":161301,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161302,"byte_end":161338,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161339,"byte_end":161404,"line_start":63,"line_end":63,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::tag_no_case;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161405,"byte_end":161447,"line_start":64,"line_end":64,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161448,"byte_end":161451,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161452,"byte_end":161499,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/   tag_no_case(\"hello\")(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161500,"byte_end":161529,"line_start":67,"line_end":67,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161530,"byte_end":161535,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161536,"byte_end":161539,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161540,"byte_end":161607,"line_start":70,"line_end":70,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"hello, World!\"), Ok((\", World!\", \"hello\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161608,"byte_end":161675,"line_start":71,"line_end":71,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"HeLlO, World!\"), Ok((\", World!\", \"HeLlO\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161676,"byte_end":161743,"line_start":72,"line_end":72,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161744,"byte_end":161838,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161839,"byte_end":161915,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":161916,"byte_end":161923,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163300,"byte_end":163306,"line_start":120,"line_end":120,"column_start":8,"column_end":14},"name":"is_not","qualname":"::bytes::complete::is_not","value":"pub fn is_not<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Parse till certain characters are met.","sig":null,"attributes":[{"value":"/ Parse till certain characters are met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162451,"byte_end":162493,"line_start":98,"line_end":98,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162494,"byte_end":162497,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till one of the characters of the combinator's argument are met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162498,"byte_end":162607,"line_start":100,"line_end":100,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162608,"byte_end":162611,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the matched character.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162612,"byte_end":162657,"line_start":102,"line_end":102,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162658,"byte_end":162661,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ It will return a `Err::Error((\"\", ErrorKind::IsNot))` if the pattern wasn't met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162662,"byte_end":162746,"line_start":104,"line_end":104,"column_start":1,"column_end":85}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162747,"byte_end":162760,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162761,"byte_end":162772,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162773,"byte_end":162809,"line_start":107,"line_end":107,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162810,"byte_end":162875,"line_start":108,"line_end":108,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::is_not;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162876,"byte_end":162913,"line_start":109,"line_end":109,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162914,"byte_end":162917,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ fn not_space(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162918,"byte_end":162968,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/   is_not(\" \\t\\r\\n\")(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162969,"byte_end":162995,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":162996,"byte_end":163001,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163002,"byte_end":163005,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(not_space(\"Hello, World!\"), Ok((\" World!\", \"Hello,\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163006,"byte_end":163076,"line_start":115,"line_end":115,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(not_space(\"Sometimes\\t\"), Ok((\"\\t\", \"Sometimes\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163077,"byte_end":163143,"line_start":116,"line_end":116,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(not_space(\"Nospace\"), Ok((\"\", \"Nospace\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163144,"byte_end":163202,"line_start":117,"line_end":117,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(not_space(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::IsNot))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163203,"byte_end":163284,"line_start":118,"line_end":118,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163285,"byte_end":163292,"line_start":119,"line_end":119,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164512,"byte_end":164516,"line_start":155,"line_end":155,"column_start":8,"column_end":12},"name":"is_a","qualname":"::bytes::complete::is_a","value":"pub fn is_a<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest slice of the matches the pattern.","sig":null,"attributes":[{"value":"/ Returns the longest slice of the matches the pattern.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163626,"byte_end":163683,"line_start":133,"line_end":133,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163684,"byte_end":163687,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice consisting of the characters in provided in the","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163688,"byte_end":163780,"line_start":135,"line_end":135,"column_start":1,"column_end":93}},{"value":"/ combinator's argument.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163781,"byte_end":163807,"line_start":136,"line_end":136,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163808,"byte_end":163811,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ It will return a `Err(Err::Error((_, ErrorKind::IsA)))` if the pattern wasn't met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163812,"byte_end":163898,"line_start":138,"line_end":138,"column_start":1,"column_end":87}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163899,"byte_end":163912,"line_start":139,"line_end":139,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163913,"byte_end":163924,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163925,"byte_end":163961,"line_start":141,"line_end":141,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":163962,"byte_end":164027,"line_start":142,"line_end":142,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::is_a;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164028,"byte_end":164063,"line_start":143,"line_end":143,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164064,"byte_end":164067,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ fn hex(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164068,"byte_end":164112,"line_start":145,"line_end":145,"column_start":1,"column_end":45}},{"value":"/   is_a(\"1234567890ABCDEF\")(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164113,"byte_end":164146,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164147,"byte_end":164152,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164153,"byte_end":164156,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(hex(\"123 and voila\"), Ok((\" and voila\", \"123\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164157,"byte_end":164221,"line_start":149,"line_end":149,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(hex(\"DEADBEEF and others\"), Ok((\" and others\", \"DEADBEEF\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164222,"byte_end":164298,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(hex(\"BADBABEsomething\"), Ok((\"something\", \"BADBABE\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164299,"byte_end":164369,"line_start":151,"line_end":151,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(hex(\"D15EA5E\"), Ok((\"\", \"D15EA5E\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164370,"byte_end":164422,"line_start":152,"line_end":152,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(hex(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::IsA))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164423,"byte_end":164496,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164497,"byte_end":164504,"line_start":154,"line_end":154,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165617,"byte_end":165627,"line_start":188,"line_end":188,"column_start":8,"column_end":18},"name":"take_while","qualname":"::bytes::complete::take_while","value":"pub fn take_while<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) that matches the predicate.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164835,"byte_end":164907,"line_start":168,"line_end":168,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164908,"byte_end":164911,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":164912,"byte_end":165007,"line_start":170,"line_end":170,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165008,"byte_end":165049,"line_start":171,"line_end":171,"column_start":1,"column_end":42}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165050,"byte_end":165063,"line_start":172,"line_end":172,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165064,"byte_end":165075,"line_start":173,"line_end":173,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165076,"byte_end":165112,"line_start":174,"line_end":174,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165113,"byte_end":165169,"line_start":175,"line_end":175,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::complete::take_while;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165170,"byte_end":165211,"line_start":176,"line_end":176,"column_start":1,"column_end":42}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165212,"byte_end":165250,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165251,"byte_end":165254,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165255,"byte_end":165304,"line_start":179,"line_end":179,"column_start":1,"column_end":50}},{"value":"/   take_while(is_alphabetic)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165305,"byte_end":165339,"line_start":180,"line_end":180,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165340,"byte_end":165345,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165346,"byte_end":165349,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165350,"byte_end":165419,"line_start":183,"line_end":183,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"12345\"), Ok((&b\"12345\"[..], &b\"\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165420,"byte_end":165483,"line_start":184,"line_end":184,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165484,"byte_end":165547,"line_start":185,"line_end":185,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"\"), Ok((&b\"\"[..], &b\"\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165548,"byte_end":165601,"line_start":186,"line_end":186,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165602,"byte_end":165609,"line_start":187,"line_end":187,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1463},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166763,"byte_end":166774,"line_start":219,"line_end":219,"column_start":8,"column_end":19},"name":"take_while1","qualname":"::bytes::complete::take_while1","value":"pub fn take_while1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice that matches the predicate.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165885,"byte_end":165961,"line_start":198,"line_end":198,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165962,"byte_end":165965,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":165966,"byte_end":166061,"line_start":200,"line_end":200,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166062,"byte_end":166103,"line_start":201,"line_end":201,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166104,"byte_end":166107,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err(Err::Error((_, ErrorKind::TakeWhile1)))` if the pattern wasn't met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166108,"byte_end":166202,"line_start":203,"line_end":203,"column_start":1,"column_end":95}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166203,"byte_end":166216,"line_start":204,"line_end":204,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166217,"byte_end":166228,"line_start":205,"line_end":205,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166229,"byte_end":166265,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166266,"byte_end":166331,"line_start":207,"line_end":207,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_while1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166332,"byte_end":166374,"line_start":208,"line_end":208,"column_start":1,"column_end":43}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166375,"byte_end":166413,"line_start":209,"line_end":209,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166414,"byte_end":166417,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166418,"byte_end":166467,"line_start":211,"line_end":211,"column_start":1,"column_end":50}},{"value":"/   take_while1(is_alphabetic)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166468,"byte_end":166503,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166504,"byte_end":166509,"line_start":213,"line_end":213,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166510,"byte_end":166513,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166514,"byte_end":166583,"line_start":215,"line_end":215,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166584,"byte_end":166647,"line_start":216,"line_end":216,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhile1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166648,"byte_end":166747,"line_start":217,"line_end":217,"column_start":1,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":166748,"byte_end":166755,"line_start":218,"line_end":218,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1470},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":168221,"byte_end":168235,"line_start":256,"line_end":256,"column_start":8,"column_end":22},"name":"take_while_m_n","qualname":"::bytes::complete::take_while_m_n","value":"pub fn take_while_m_n<F, Input, Error: ParseError<Input>>(usize, usize, F)\n-> /*impl Trait*/ where Input: InputTake + InputIter + InputLength +\nSlice<RangeFrom<usize>>, F: Fn(<Input as InputIter>::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (m <= len <= n) input slice  that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (m <= len <= n) input slice  that matches the predicate.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167092,"byte_end":167172,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167173,"byte_end":167176,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167177,"byte_end":167272,"line_start":234,"line_end":234,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167273,"byte_end":167314,"line_start":235,"line_end":235,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167315,"byte_end":167318,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err::Error((_, ErrorKind::TakeWhileMN))` if the pattern wasn't met or is out","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167319,"byte_end":167418,"line_start":237,"line_end":237,"column_start":1,"column_end":100}},{"value":"/ of range (m <= len <= n).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167419,"byte_end":167448,"line_start":238,"line_end":238,"column_start":1,"column_end":30}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167449,"byte_end":167462,"line_start":239,"line_end":239,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167463,"byte_end":167474,"line_start":240,"line_end":240,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167475,"byte_end":167511,"line_start":241,"line_end":241,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167512,"byte_end":167577,"line_start":242,"line_end":242,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_while_m_n;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167578,"byte_end":167623,"line_start":243,"line_end":243,"column_start":1,"column_end":46}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167624,"byte_end":167662,"line_start":244,"line_end":244,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167663,"byte_end":167666,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ fn short_alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167667,"byte_end":167722,"line_start":246,"line_end":246,"column_start":1,"column_end":56}},{"value":"/   take_while_m_n(3, 6, is_alphabetic)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167723,"byte_end":167767,"line_start":247,"line_end":247,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167768,"byte_end":167773,"line_start":248,"line_end":248,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167774,"byte_end":167777,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(short_alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167778,"byte_end":167853,"line_start":250,"line_end":250,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(short_alpha(b\"lengthy\"), Ok((&b\"y\"[..], &b\"length\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167854,"byte_end":167927,"line_start":251,"line_end":251,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(short_alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167928,"byte_end":167997,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(short_alpha(b\"ed\"), Err(Err::Error(Error::new(&b\"ed\"[..], ErrorKind::TakeWhileMN))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":167998,"byte_end":168098,"line_start":253,"line_end":253,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(short_alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhileMN))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":168099,"byte_end":168205,"line_start":254,"line_end":254,"column_start":1,"column_end":107}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":168206,"byte_end":168213,"line_start":255,"line_end":255,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1477},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170763,"byte_end":170772,"line_start":338,"line_end":338,"column_start":8,"column_end":17},"name":"take_till","qualname":"::bytes::complete::take_till","value":"pub fn take_till<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) till a predicate is met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170034,"byte_end":170103,"line_start":319,"line_end":319,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170104,"byte_end":170107,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170108,"byte_end":170195,"line_start":321,"line_end":321,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170196,"byte_end":170237,"line_start":322,"line_end":322,"column_start":1,"column_end":42}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170238,"byte_end":170251,"line_start":323,"line_end":323,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170252,"byte_end":170263,"line_start":324,"line_end":324,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170264,"byte_end":170300,"line_start":325,"line_end":325,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170301,"byte_end":170357,"line_start":326,"line_end":326,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::complete::take_till;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170358,"byte_end":170398,"line_start":327,"line_end":327,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170399,"byte_end":170402,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170403,"byte_end":170454,"line_start":329,"line_end":329,"column_start":1,"column_end":52}},{"value":"/   take_till(|c| c == ':')(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170455,"byte_end":170487,"line_start":330,"line_end":330,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170488,"byte_end":170493,"line_start":331,"line_end":331,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170494,"byte_end":170497,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170498,"byte_end":170561,"line_start":333,"line_end":333,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Ok((\":empty matched\", \"\"))); //allowed","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170562,"byte_end":170645,"line_start":334,"line_end":334,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(till_colon(\"12345\"), Ok((\"\", \"12345\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170646,"byte_end":170701,"line_start":335,"line_end":335,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(till_colon(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170702,"byte_end":170747,"line_start":336,"line_end":336,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":170748,"byte_end":170755,"line_start":337,"line_end":337,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1484},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171981,"byte_end":171991,"line_start":370,"line_end":370,"column_start":8,"column_end":18},"name":"take_till1","qualname":"::bytes::complete::take_till1","value":"pub fn take_till1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice till a predicate is met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171029,"byte_end":171102,"line_start":348,"line_end":348,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171103,"byte_end":171106,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171107,"byte_end":171194,"line_start":350,"line_end":350,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171195,"byte_end":171236,"line_start":351,"line_end":351,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171237,"byte_end":171240,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::TakeTill1)))` if the input is empty or the","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171241,"byte_end":171333,"line_start":353,"line_end":353,"column_start":1,"column_end":93}},{"value":"/ predicate matches the first input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171334,"byte_end":171372,"line_start":354,"line_end":354,"column_start":1,"column_end":39}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171373,"byte_end":171386,"line_start":355,"line_end":355,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171387,"byte_end":171398,"line_start":356,"line_end":356,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171399,"byte_end":171435,"line_start":357,"line_end":357,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171436,"byte_end":171501,"line_start":358,"line_end":358,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_till1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171502,"byte_end":171543,"line_start":359,"line_end":359,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171544,"byte_end":171547,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171548,"byte_end":171599,"line_start":361,"line_end":361,"column_start":1,"column_end":52}},{"value":"/   take_till1(|c| c == ':')(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171600,"byte_end":171633,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171634,"byte_end":171639,"line_start":363,"line_end":363,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171640,"byte_end":171643,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171644,"byte_end":171707,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Err(Err::Error(Error::new(\":empty matched\", ErrorKind::TakeTill1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171708,"byte_end":171822,"line_start":366,"line_end":366,"column_start":1,"column_end":115}},{"value":"/ assert_eq!(till_colon(\"12345\"), Ok((\"\", \"12345\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171823,"byte_end":171878,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(till_colon(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::TakeTill1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171879,"byte_end":171965,"line_start":368,"line_end":368,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":171966,"byte_end":171973,"line_start":369,"line_end":369,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1491},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173024,"byte_end":173028,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"take","qualname":"::bytes::complete::take","value":"pub fn take<C, Input, Error: ParseError<Input>>(C) -> /*impl Trait*/ where\nInput: InputIter + InputTake, C: ToUsize","parent":null,"children":[],"decl_id":null,"docs":" Returns an input slice containing the first N input elements (Input[..N]).","sig":null,"attributes":[{"value":"/ Returns an input slice containing the first N input elements (Input[..N]).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172307,"byte_end":172385,"line_start":383,"line_end":383,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172386,"byte_end":172389,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::Eof)))` if the input is shorter than the argument.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172390,"byte_end":172490,"line_start":385,"line_end":385,"column_start":1,"column_end":101}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172491,"byte_end":172504,"line_start":386,"line_end":386,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172505,"byte_end":172516,"line_start":387,"line_end":387,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172517,"byte_end":172553,"line_start":388,"line_end":388,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172554,"byte_end":172619,"line_start":389,"line_end":389,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172620,"byte_end":172655,"line_start":390,"line_end":390,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172656,"byte_end":172659,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ fn take6(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172660,"byte_end":172706,"line_start":392,"line_end":392,"column_start":1,"column_end":47}},{"value":"/   take(6usize)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172707,"byte_end":172728,"line_start":393,"line_end":393,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172729,"byte_end":172734,"line_start":394,"line_end":394,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172735,"byte_end":172738,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(take6(\"1234567\"), Ok((\"7\", \"123456\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172739,"byte_end":172793,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(take6(\"things\"), Ok((\"\", \"things\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172794,"byte_end":172846,"line_start":397,"line_end":397,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(take6(\"short\"), Err(Err::Error(Error::new(\"short\", ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172847,"byte_end":172932,"line_start":398,"line_end":398,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(take6(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":172933,"byte_end":173008,"line_start":399,"line_end":399,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173009,"byte_end":173016,"line_start":400,"line_end":400,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1497},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":174196,"byte_end":174206,"line_start":434,"line_end":434,"column_start":8,"column_end":18},"name":"take_until","qualname":"::bytes::complete::take_until","value":"pub fn take_until<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + FindSubstring<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns the input slice up to the first occurrence of the pattern.","sig":null,"attributes":[{"value":"/ Returns the input slice up to the first occurrence of the pattern.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173384,"byte_end":173454,"line_start":415,"line_end":415,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173455,"byte_end":173458,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the pattern. It will return `Err(Err::Error((_, ErrorKind::TakeUntil)))`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173459,"byte_end":173554,"line_start":417,"line_end":417,"column_start":1,"column_end":96}},{"value":"/ if the pattern wasn't met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173555,"byte_end":173585,"line_start":418,"line_end":418,"column_start":1,"column_end":31}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173586,"byte_end":173599,"line_start":419,"line_end":419,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173600,"byte_end":173611,"line_start":420,"line_end":420,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173612,"byte_end":173648,"line_start":421,"line_end":421,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173649,"byte_end":173714,"line_start":422,"line_end":422,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_until;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173715,"byte_end":173756,"line_start":423,"line_end":423,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173757,"byte_end":173760,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ fn until_eof(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173761,"byte_end":173811,"line_start":425,"line_end":425,"column_start":1,"column_end":51}},{"value":"/   take_until(\"eof\")(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173812,"byte_end":173838,"line_start":426,"line_end":426,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173839,"byte_end":173844,"line_start":427,"line_end":427,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173845,"byte_end":173848,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173849,"byte_end":173923,"line_start":429,"line_end":429,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(until_eof(\"hello, world\"), Err(Err::Error(Error::new(\"hello, world\", ErrorKind::TakeUntil))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":173924,"byte_end":174033,"line_start":430,"line_end":430,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(until_eof(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::TakeUntil))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":174034,"byte_end":174119,"line_start":431,"line_end":431,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":174120,"byte_end":174180,"line_start":432,"line_end":432,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":174181,"byte_end":174188,"line_start":433,"line_end":433,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1503},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":175552,"byte_end":175563,"line_start":471,"line_end":471,"column_start":8,"column_end":19},"name":"take_until1","qualname":"::bytes::complete::take_until1","value":"pub fn take_until1<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + FindSubstring<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns the non empty input slice up to the first occurrence of the pattern.","sig":null,"attributes":[{"value":"/ Returns the non empty input slice up to the first occurrence of the pattern.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":174636,"byte_end":174716,"line_start":451,"line_end":451,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":174717,"byte_end":174720,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the pattern. It will return `Err(Err::Error((_, ErrorKind::TakeUntil)))`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":174721,"byte_end":174816,"line_start":453,"line_end":453,"column_start":1,"column_end":96}},{"value":"/ if the pattern wasn't met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":174817,"byte_end":174847,"line_start":454,"line_end":454,"column_start":1,"column_end":31}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":174848,"byte_end":174861,"line_start":455,"line_end":455,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":174862,"byte_end":174873,"line_start":456,"line_end":456,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":174874,"byte_end":174910,"line_start":457,"line_end":457,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":174911,"byte_end":174976,"line_start":458,"line_end":458,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_until1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":174977,"byte_end":175019,"line_start":459,"line_end":459,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":175020,"byte_end":175023,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ fn until_eof(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":175024,"byte_end":175074,"line_start":461,"line_end":461,"column_start":1,"column_end":51}},{"value":"/   take_until1(\"eof\")(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":175075,"byte_end":175102,"line_start":462,"line_end":462,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":175103,"byte_end":175108,"line_start":463,"line_end":463,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":175109,"byte_end":175112,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":175113,"byte_end":175187,"line_start":465,"line_end":465,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(until_eof(\"hello, world\"), Err(Err::Error(Error::new(\"hello, world\", ErrorKind::TakeUntil))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":175188,"byte_end":175297,"line_start":466,"line_end":466,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(until_eof(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::TakeUntil))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":175298,"byte_end":175383,"line_start":467,"line_end":467,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":175384,"byte_end":175444,"line_start":468,"line_end":468,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(until_eof(\"eof\"), Err(Err::Error(Error::new(\"eof\", ErrorKind::TakeUntil))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":175445,"byte_end":175536,"line_start":469,"line_end":469,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":175537,"byte_end":175544,"line_start":470,"line_end":470,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1509},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176839,"byte_end":176846,"line_start":510,"line_end":510,"column_start":8,"column_end":15},"name":"escaped","qualname":"::bytes::complete::escaped","value":"pub fn escaped<'a, Input: 'a, Error, F, G, O1, O2>(F, char, G)\n-> /*impl Trait*/ where Input: Clone + crate::traits::Offset + InputLength +\nInputTake + InputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176076,"byte_end":176126,"line_start":489,"line_end":489,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176127,"byte_end":176130,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not accept the control character)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176131,"byte_end":176228,"line_start":491,"line_end":491,"column_start":1,"column_end":98}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176229,"byte_end":176308,"line_start":492,"line_end":492,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176309,"byte_end":176364,"line_start":493,"line_end":493,"column_start":1,"column_end":56}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176365,"byte_end":176378,"line_start":494,"line_end":494,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176379,"byte_end":176386,"line_start":495,"line_end":495,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176387,"byte_end":176423,"line_start":496,"line_end":496,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176424,"byte_end":176480,"line_start":497,"line_end":497,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::digit1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176481,"byte_end":176524,"line_start":498,"line_end":498,"column_start":1,"column_end":44}},{"value":"/ use nom::bytes::complete::escaped;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176525,"byte_end":176563,"line_start":499,"line_end":499,"column_start":1,"column_end":39}},{"value":"/ use nom::character::complete::one_of;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176564,"byte_end":176605,"line_start":500,"line_end":500,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176606,"byte_end":176609,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ fn esc(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176610,"byte_end":176654,"line_start":502,"line_end":502,"column_start":1,"column_end":45}},{"value":"/   escaped(digit1, '\\\\', one_of(r#\"\"n\\\"#))(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176655,"byte_end":176703,"line_start":503,"line_end":503,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176704,"byte_end":176709,"line_start":504,"line_end":504,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176710,"byte_end":176713,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(esc(\"123;\"), Ok((\";\", \"123\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176714,"byte_end":176760,"line_start":506,"line_end":506,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(esc(r#\"12\\\"34;\"#), Ok((\";\", r#\"12\\\"34\"#)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176761,"byte_end":176819,"line_start":507,"line_end":507,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176820,"byte_end":176827,"line_start":508,"line_end":508,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":176828,"byte_end":176831,"line_start":509,"line_end":509,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":180376,"byte_end":180393,"line_start":625,"line_end":625,"column_start":8,"column_end":25},"name":"escaped_transform","qualname":"::bytes::complete::escaped_transform","value":"pub fn escaped_transform<Input, Error, F, G, O1, O2, ExtendItem,\n                         Output>(F, char, G) -> /*impl Trait*/ where\nInput: Clone + crate::traits::Offset + InputLength + InputTake +\nInputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\nInput: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO1: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO2: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179163,"byte_end":179213,"line_start":591,"line_end":591,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179214,"byte_end":179217,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not match the control character)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179218,"byte_end":179314,"line_start":593,"line_end":593,"column_start":1,"column_end":97}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179315,"byte_end":179394,"line_start":594,"line_end":594,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters and transforms them","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179395,"byte_end":179470,"line_start":595,"line_end":595,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179471,"byte_end":179474,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ As an example, the chain `abc\\tdef` could be `abc    def` (it also consumes the control character)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179475,"byte_end":179577,"line_start":597,"line_end":597,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179578,"byte_end":179581,"line_start":598,"line_end":598,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179582,"byte_end":179589,"line_start":599,"line_end":599,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179590,"byte_end":179626,"line_start":600,"line_end":600,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179627,"byte_end":179683,"line_start":601,"line_end":601,"column_start":1,"column_end":57}},{"value":"/ # use std::str::from_utf8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179684,"byte_end":179714,"line_start":602,"line_end":602,"column_start":1,"column_end":31}},{"value":"/ use nom::bytes::complete::{escaped_transform, tag};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179715,"byte_end":179770,"line_start":603,"line_end":603,"column_start":1,"column_end":56}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179771,"byte_end":179812,"line_start":604,"line_end":604,"column_start":1,"column_end":42}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179813,"byte_end":179838,"line_start":605,"line_end":605,"column_start":1,"column_end":26}},{"value":"/ use nom::combinator::value;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179839,"byte_end":179870,"line_start":606,"line_end":606,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179871,"byte_end":179874,"line_start":607,"line_end":607,"column_start":1,"column_end":4}},{"value":"/ fn parser(input: &str) -> IResult<&str, String> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179875,"byte_end":179928,"line_start":608,"line_end":608,"column_start":1,"column_end":54}},{"value":"/   escaped_transform(","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179929,"byte_end":179953,"line_start":609,"line_end":609,"column_start":1,"column_end":25}},{"value":"/     alpha1,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179954,"byte_end":179969,"line_start":610,"line_end":610,"column_start":1,"column_end":16}},{"value":"/     '\\\\',","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179970,"byte_end":179983,"line_start":611,"line_end":611,"column_start":1,"column_end":14}},{"value":"/     alt((","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179984,"byte_end":179997,"line_start":612,"line_end":612,"column_start":1,"column_end":14}},{"value":"/       value(\"\\\\\", tag(\"\\\\\")),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":179998,"byte_end":180031,"line_start":613,"line_end":613,"column_start":1,"column_end":34}},{"value":"/       value(\"\\\"\", tag(\"\\\"\")),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":180032,"byte_end":180065,"line_start":614,"line_end":614,"column_start":1,"column_end":34}},{"value":"/       value(\"\\n\", tag(\"n\")),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":180066,"byte_end":180098,"line_start":615,"line_end":615,"column_start":1,"column_end":33}},{"value":"/     ))","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":180099,"byte_end":180109,"line_start":616,"line_end":616,"column_start":1,"column_end":11}},{"value":"/   )(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":180110,"byte_end":180124,"line_start":617,"line_end":617,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":180125,"byte_end":180130,"line_start":618,"line_end":618,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":180131,"byte_end":180134,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab\\\\\\\"cd\"), Ok((\"\", String::from(\"ab\\\"cd\"))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":180135,"byte_end":180204,"line_start":620,"line_end":620,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(\"ab\\\\ncd\"), Ok((\"\", String::from(\"ab\\ncd\"))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":180205,"byte_end":180273,"line_start":621,"line_end":621,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":180274,"byte_end":180281,"line_start":622,"line_end":622,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/complete.rs","byte_start":180282,"byte_end":180307,"line_start":623,"line_end":623,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1536},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::bytes::streaming","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","parent":null,"children":[{"krate":0,"index":1537},{"krate":0,"index":1540},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1550},{"krate":0,"index":1553},{"krate":0,"index":1556},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1567},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1585},{"krate":0,"index":1588},{"krate":0,"index":1591},{"krate":0,"index":1597},{"krate":0,"index":1603},{"krate":0,"index":1610},{"krate":0,"index":1617},{"krate":0,"index":1624},{"krate":0,"index":1631},{"krate":0,"index":1638},{"krate":0,"index":1645},{"krate":0,"index":1652},{"krate":0,"index":1658},{"krate":0,"index":1664},{"krate":0,"index":1670},{"krate":0,"index":1682}],"decl_id":null,"docs":" Parsers recognizing bytes streams, streaming version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing bytes streams, streaming version","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":184355,"byte_end":184411,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1591},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":185494,"byte_end":185497,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"tag","qualname":"::bytes::streaming::tag","value":"pub fn tag<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTake + InputLength + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a pattern.","sig":null,"attributes":[{"value":"/ Recognizes a pattern.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":184753,"byte_end":184778,"line_start":13,"line_end":13,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":184779,"byte_end":184782,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":184783,"byte_end":184879,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":184880,"byte_end":184920,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":184921,"byte_end":184934,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":184935,"byte_end":184946,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":184947,"byte_end":184983,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":184984,"byte_end":185049,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::tag;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":185050,"byte_end":185085,"line_start":21,"line_end":21,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":185086,"byte_end":185089,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":185090,"byte_end":185137,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/   tag(\"Hello\")(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":185138,"byte_end":185159,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":185160,"byte_end":185165,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":185166,"byte_end":185169,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":185170,"byte_end":185237,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":185238,"byte_end":185332,"line_start":28,"line_end":28,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"S\"), Err(Err::Error(Error::new(\"S\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":185333,"byte_end":185411,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(parser(\"H\"), Err(Err::Incomplete(Needed::new(4))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":185412,"byte_end":185478,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":185479,"byte_end":185486,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1597},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186977,"byte_end":186988,"line_start":75,"line_end":75,"column_start":8,"column_end":19},"name":"tag_no_case","qualname":"::bytes::streaming::tag_no_case","value":"pub fn tag_no_case<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + InputLength + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a case insensitive pattern.","sig":null,"attributes":[{"value":"/ Recognizes a case insensitive pattern.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186124,"byte_end":186166,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186167,"byte_end":186170,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186171,"byte_end":186267,"line_start":57,"line_end":57,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument with no regard to case.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186268,"byte_end":186331,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186332,"byte_end":186345,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186346,"byte_end":186357,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186358,"byte_end":186394,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186395,"byte_end":186460,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::tag_no_case;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186461,"byte_end":186504,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186505,"byte_end":186508,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186509,"byte_end":186556,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/   tag_no_case(\"hello\")(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186557,"byte_end":186586,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186587,"byte_end":186592,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186593,"byte_end":186596,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186597,"byte_end":186664,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"hello, World!\"), Ok((\", World!\", \"hello\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186665,"byte_end":186732,"line_start":70,"line_end":70,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"HeLlO, World!\"), Ok((\", World!\", \"HeLlO\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186733,"byte_end":186800,"line_start":71,"line_end":71,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186801,"byte_end":186895,"line_start":72,"line_end":72,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::new(5))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186896,"byte_end":186961,"line_start":73,"line_end":73,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":186962,"byte_end":186969,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1603},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188467,"byte_end":188473,"line_start":120,"line_end":120,"column_start":8,"column_end":14},"name":"is_not","qualname":"::bytes::streaming::is_not","value":"pub fn is_not<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Parse till certain characters are met.","sig":null,"attributes":[{"value":"/ Parse till certain characters are met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":187625,"byte_end":187667,"line_start":98,"line_end":98,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":187668,"byte_end":187671,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till one of the characters of the combinator's argument are met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":187672,"byte_end":187781,"line_start":100,"line_end":100,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":187782,"byte_end":187785,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the matched character.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":187786,"byte_end":187831,"line_start":102,"line_end":102,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":187832,"byte_end":187835,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ It will return a `Err::Incomplete(Needed::new(1))` if the pattern wasn't met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":187836,"byte_end":187917,"line_start":104,"line_end":104,"column_start":1,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":187918,"byte_end":187931,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":187932,"byte_end":187943,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":187944,"byte_end":187980,"line_start":107,"line_end":107,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":187981,"byte_end":188037,"line_start":108,"line_end":108,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::is_not;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188038,"byte_end":188076,"line_start":109,"line_end":109,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188077,"byte_end":188080,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ fn not_space(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188081,"byte_end":188131,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/   is_not(\" \\t\\r\\n\")(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188132,"byte_end":188158,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188159,"byte_end":188164,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188165,"byte_end":188168,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(not_space(\"Hello, World!\"), Ok((\" World!\", \"Hello,\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188169,"byte_end":188239,"line_start":115,"line_end":115,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(not_space(\"Sometimes\\t\"), Ok((\"\\t\", \"Sometimes\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188240,"byte_end":188306,"line_start":116,"line_end":116,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(not_space(\"Nospace\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188307,"byte_end":188382,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(not_space(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188383,"byte_end":188451,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188452,"byte_end":188459,"line_start":119,"line_end":119,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1610},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189756,"byte_end":189760,"line_start":157,"line_end":157,"column_start":8,"column_end":12},"name":"is_a","qualname":"::bytes::streaming::is_a","value":"pub fn is_a<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest slice of the matches the pattern.","sig":null,"attributes":[{"value":"/ Returns the longest slice of the matches the pattern.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188784,"byte_end":188841,"line_start":133,"line_end":133,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188842,"byte_end":188845,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice consisting of the characters in provided in the","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188846,"byte_end":188938,"line_start":135,"line_end":135,"column_start":1,"column_end":93}},{"value":"/ combinator's argument.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188939,"byte_end":188965,"line_start":136,"line_end":136,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188966,"byte_end":188969,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ # Streaming specific","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188970,"byte_end":188994,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the pattern wasn't met","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":188995,"byte_end":189092,"line_start":139,"line_end":139,"column_start":1,"column_end":98}},{"value":"/ or if the pattern reaches the end of the input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189093,"byte_end":189144,"line_start":140,"line_end":140,"column_start":1,"column_end":52}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189145,"byte_end":189158,"line_start":141,"line_end":141,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189159,"byte_end":189170,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189171,"byte_end":189207,"line_start":143,"line_end":143,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189208,"byte_end":189264,"line_start":144,"line_end":144,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::is_a;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189265,"byte_end":189301,"line_start":145,"line_end":145,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189302,"byte_end":189305,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ fn hex(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189306,"byte_end":189350,"line_start":147,"line_end":147,"column_start":1,"column_end":45}},{"value":"/   is_a(\"1234567890ABCDEF\")(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189351,"byte_end":189384,"line_start":148,"line_end":148,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189385,"byte_end":189390,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189391,"byte_end":189394,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(hex(\"123 and voila\"), Ok((\" and voila\", \"123\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189395,"byte_end":189459,"line_start":151,"line_end":151,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(hex(\"DEADBEEF and others\"), Ok((\" and others\", \"DEADBEEF\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189460,"byte_end":189536,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(hex(\"BADBABEsomething\"), Ok((\"something\", \"BADBABE\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189537,"byte_end":189607,"line_start":153,"line_end":153,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(hex(\"D15EA5E\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189608,"byte_end":189677,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(hex(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189678,"byte_end":189740,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":189741,"byte_end":189748,"line_start":156,"line_end":156,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1617},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191018,"byte_end":191028,"line_start":193,"line_end":193,"column_start":8,"column_end":18},"name":"take_while","qualname":"::bytes::streaming::take_while","value":"pub fn take_while<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) that matches the predicate.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190070,"byte_end":190142,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190143,"byte_end":190146,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190147,"byte_end":190242,"line_start":172,"line_end":172,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190243,"byte_end":190284,"line_start":173,"line_end":173,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190285,"byte_end":190288,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190289,"byte_end":190313,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the pattern reaches the end of the input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190314,"byte_end":190430,"line_start":176,"line_end":176,"column_start":1,"column_end":117}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190431,"byte_end":190444,"line_start":177,"line_end":177,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190445,"byte_end":190456,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190457,"byte_end":190493,"line_start":179,"line_end":179,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190494,"byte_end":190550,"line_start":180,"line_end":180,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take_while;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190551,"byte_end":190593,"line_start":181,"line_end":181,"column_start":1,"column_end":43}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190594,"byte_end":190632,"line_start":182,"line_end":182,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190633,"byte_end":190636,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190637,"byte_end":190686,"line_start":184,"line_end":184,"column_start":1,"column_end":50}},{"value":"/   take_while(is_alphabetic)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190687,"byte_end":190721,"line_start":185,"line_end":185,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190722,"byte_end":190727,"line_start":186,"line_end":186,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190728,"byte_end":190731,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190732,"byte_end":190801,"line_start":188,"line_end":188,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"12345\"), Ok((&b\"12345\"[..], &b\"\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190802,"byte_end":190865,"line_start":189,"line_end":189,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190866,"byte_end":190936,"line_start":190,"line_end":190,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha(b\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":190937,"byte_end":191002,"line_start":191,"line_end":191,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191003,"byte_end":191010,"line_start":192,"line_end":192,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192316,"byte_end":192327,"line_start":228,"line_end":228,"column_start":8,"column_end":19},"name":"take_while1","qualname":"::bytes::streaming::take_while1","value":"pub fn take_while1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice that matches the predicate.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191277,"byte_end":191353,"line_start":203,"line_end":203,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191354,"byte_end":191357,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191358,"byte_end":191453,"line_start":205,"line_end":205,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191454,"byte_end":191495,"line_start":206,"line_end":206,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191496,"byte_end":191499,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err(Err::Error((_, ErrorKind::TakeWhile1)))` if the pattern wasn't met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191500,"byte_end":191594,"line_start":208,"line_end":208,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191595,"byte_end":191598,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191599,"byte_end":191623,"line_start":210,"line_end":210,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` or if the pattern reaches the end of the input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191624,"byte_end":191743,"line_start":211,"line_end":211,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191744,"byte_end":191747,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191748,"byte_end":191761,"line_start":213,"line_end":213,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191762,"byte_end":191773,"line_start":214,"line_end":214,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191774,"byte_end":191810,"line_start":215,"line_end":215,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191811,"byte_end":191876,"line_start":216,"line_end":216,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_while1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191877,"byte_end":191920,"line_start":217,"line_end":217,"column_start":1,"column_end":44}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191921,"byte_end":191959,"line_start":218,"line_end":218,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191960,"byte_end":191963,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":191964,"byte_end":192013,"line_start":220,"line_end":220,"column_start":1,"column_end":50}},{"value":"/   take_while1(is_alphabetic)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192014,"byte_end":192049,"line_start":221,"line_end":221,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192050,"byte_end":192055,"line_start":222,"line_end":222,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192056,"byte_end":192059,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192060,"byte_end":192129,"line_start":224,"line_end":224,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192130,"byte_end":192200,"line_start":225,"line_end":225,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhile1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192201,"byte_end":192300,"line_start":226,"line_end":226,"column_start":1,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192301,"byte_end":192308,"line_start":227,"line_end":227,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193870,"byte_end":193884,"line_start":267,"line_end":267,"column_start":8,"column_end":22},"name":"take_while_m_n","qualname":"::bytes::streaming::take_while_m_n","value":"pub fn take_while_m_n<F, Input, Error: ParseError<Input>>(usize, usize, F)\n-> /*impl Trait*/ where Input: InputTake + InputIter + InputLength,\nF: Fn(<Input as InputIter>::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (m <= len <= n) input slice  that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (m <= len <= n) input slice  that matches the predicate.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192636,"byte_end":192716,"line_start":241,"line_end":241,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192717,"byte_end":192720,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192721,"byte_end":192816,"line_start":243,"line_end":243,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192817,"byte_end":192858,"line_start":244,"line_end":244,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192859,"byte_end":192862,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err::Error((_, ErrorKind::TakeWhileMN))` if the pattern wasn't met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192863,"byte_end":192953,"line_start":246,"line_end":246,"column_start":1,"column_end":91}},{"value":"/ # Streaming Specific","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192954,"byte_end":192978,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))`  if the pattern reaches the end of the input or is too short.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":192979,"byte_end":193112,"line_start":248,"line_end":248,"column_start":1,"column_end":134}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193113,"byte_end":193116,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193117,"byte_end":193130,"line_start":250,"line_end":250,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193131,"byte_end":193142,"line_start":251,"line_end":251,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193143,"byte_end":193179,"line_start":252,"line_end":252,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193180,"byte_end":193245,"line_start":253,"line_end":253,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_while_m_n;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193246,"byte_end":193292,"line_start":254,"line_end":254,"column_start":1,"column_end":47}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193293,"byte_end":193331,"line_start":255,"line_end":255,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193332,"byte_end":193335,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ fn short_alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193336,"byte_end":193391,"line_start":257,"line_end":257,"column_start":1,"column_end":56}},{"value":"/   take_while_m_n(3, 6, is_alphabetic)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193392,"byte_end":193436,"line_start":258,"line_end":258,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193437,"byte_end":193442,"line_start":259,"line_end":259,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193443,"byte_end":193446,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(short_alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193447,"byte_end":193522,"line_start":261,"line_end":261,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(short_alpha(b\"lengthy\"), Ok((&b\"y\"[..], &b\"length\"[..])));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193523,"byte_end":193596,"line_start":262,"line_end":262,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(short_alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193597,"byte_end":193673,"line_start":263,"line_end":263,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(short_alpha(b\"ed\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193674,"byte_end":193747,"line_start":264,"line_end":264,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(short_alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhileMN))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193748,"byte_end":193854,"line_start":265,"line_end":265,"column_start":1,"column_end":107}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":193855,"byte_end":193862,"line_start":266,"line_end":266,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1638},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196482,"byte_end":196491,"line_start":351,"line_end":351,"column_start":8,"column_end":17},"name":"take_till","qualname":"::bytes::streaming::take_till","value":"pub fn take_till<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) till a predicate is met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":195535,"byte_end":195604,"line_start":327,"line_end":327,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":195605,"byte_end":195608,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":195609,"byte_end":195696,"line_start":329,"line_end":329,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":195697,"byte_end":195738,"line_start":330,"line_end":330,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":195739,"byte_end":195742,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":195743,"byte_end":195767,"line_start":332,"line_end":332,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the match reaches the","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":195768,"byte_end":195864,"line_start":333,"line_end":333,"column_start":1,"column_end":97}},{"value":"/ end of input or if there was not match.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":195865,"byte_end":195908,"line_start":334,"line_end":334,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":195909,"byte_end":195912,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":195913,"byte_end":195926,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":195927,"byte_end":195938,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":195939,"byte_end":195975,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":195976,"byte_end":196032,"line_start":339,"line_end":339,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take_till;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196033,"byte_end":196074,"line_start":340,"line_end":340,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196075,"byte_end":196078,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196079,"byte_end":196130,"line_start":342,"line_end":342,"column_start":1,"column_end":52}},{"value":"/   take_till(|c| c == ':')(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196131,"byte_end":196163,"line_start":343,"line_end":343,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196164,"byte_end":196169,"line_start":344,"line_end":344,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196170,"byte_end":196173,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196174,"byte_end":196237,"line_start":346,"line_end":346,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Ok((\":empty matched\", \"\"))); //allowed","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196238,"byte_end":196321,"line_start":347,"line_end":347,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(till_colon(\"12345\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196322,"byte_end":196396,"line_start":348,"line_end":348,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(till_colon(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196397,"byte_end":196466,"line_start":349,"line_end":349,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196467,"byte_end":196474,"line_start":350,"line_end":350,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1645},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197728,"byte_end":197738,"line_start":384,"line_end":384,"column_start":8,"column_end":18},"name":"take_till1","qualname":"::bytes::streaming::take_till1","value":"pub fn take_till1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice till a predicate is met.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196739,"byte_end":196812,"line_start":361,"line_end":361,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196813,"byte_end":196816,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196817,"byte_end":196904,"line_start":363,"line_end":363,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196905,"byte_end":196946,"line_start":364,"line_end":364,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196947,"byte_end":196950,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196951,"byte_end":196975,"line_start":366,"line_end":366,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the match reaches the","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":196976,"byte_end":197072,"line_start":367,"line_end":367,"column_start":1,"column_end":97}},{"value":"/ end of input or if there was not match.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197073,"byte_end":197116,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197117,"byte_end":197130,"line_start":369,"line_end":369,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197131,"byte_end":197142,"line_start":370,"line_end":370,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197143,"byte_end":197179,"line_start":371,"line_end":371,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197180,"byte_end":197245,"line_start":372,"line_end":372,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_till1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197246,"byte_end":197288,"line_start":373,"line_end":373,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197289,"byte_end":197292,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197293,"byte_end":197344,"line_start":375,"line_end":375,"column_start":1,"column_end":52}},{"value":"/   take_till1(|c| c == ':')(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197345,"byte_end":197378,"line_start":376,"line_end":376,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197379,"byte_end":197384,"line_start":377,"line_end":377,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197385,"byte_end":197388,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197389,"byte_end":197452,"line_start":379,"line_end":379,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Err(Err::Error(Error::new(\":empty matched\", ErrorKind::TakeTill1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197453,"byte_end":197567,"line_start":380,"line_end":380,"column_start":1,"column_end":115}},{"value":"/ assert_eq!(till_colon(\"12345\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197568,"byte_end":197642,"line_start":381,"line_end":381,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(till_colon(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197643,"byte_end":197712,"line_start":382,"line_end":382,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":197713,"byte_end":197720,"line_start":383,"line_end":383,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1652},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199029,"byte_end":199033,"line_start":421,"line_end":421,"column_start":8,"column_end":12},"name":"take","qualname":"::bytes::streaming::take","value":"pub fn take<C, Input, Error: ParseError<Input>>(C) -> /*impl Trait*/ where\nInput: InputIter + InputTake + InputLength, C: ToUsize","parent":null,"children":[],"decl_id":null,"docs":" Returns an input slice containing the first N input elements (Input[..N]).","sig":null,"attributes":[{"value":"/ Returns an input slice containing the first N input elements (Input[..N]).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198045,"byte_end":198123,"line_start":397,"line_end":397,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198124,"byte_end":198127,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198128,"byte_end":198152,"line_start":399,"line_end":399,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* if the input has less than N elements, `take` will","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198153,"byte_end":198227,"line_start":400,"line_end":400,"column_start":1,"column_end":75}},{"value":"/ return a `Err::Incomplete(Needed::new(M))` where M is the number of","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198228,"byte_end":198299,"line_start":401,"line_end":401,"column_start":1,"column_end":72}},{"value":"/ additional bytes the parser would need to succeed.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198300,"byte_end":198354,"line_start":402,"line_end":402,"column_start":1,"column_end":55}},{"value":"/ It is well defined for `&[u8]` as the number of elements is the byte size,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198355,"byte_end":198433,"line_start":403,"line_end":403,"column_start":1,"column_end":79}},{"value":"/ but for types like `&str`, we cannot know how many bytes correspond for","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198434,"byte_end":198509,"line_start":404,"line_end":404,"column_start":1,"column_end":76}},{"value":"/ the next few chars, so the result will be `Err::Incomplete(Needed::Unknown)`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198510,"byte_end":198590,"line_start":405,"line_end":405,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198591,"byte_end":198594,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198595,"byte_end":198608,"line_start":407,"line_end":407,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198609,"byte_end":198620,"line_start":408,"line_end":408,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198621,"byte_end":198657,"line_start":409,"line_end":409,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198658,"byte_end":198714,"line_start":410,"line_end":410,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198715,"byte_end":198751,"line_start":411,"line_end":411,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198752,"byte_end":198755,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ fn take6(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198756,"byte_end":198802,"line_start":413,"line_end":413,"column_start":1,"column_end":47}},{"value":"/   take(6usize)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198803,"byte_end":198824,"line_start":414,"line_end":414,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198825,"byte_end":198830,"line_start":415,"line_end":415,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198831,"byte_end":198834,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(take6(\"1234567\"), Ok((\"7\", \"123456\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198835,"byte_end":198889,"line_start":417,"line_end":417,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(take6(\"things\"), Ok((\"\", \"things\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198890,"byte_end":198942,"line_start":418,"line_end":418,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(take6(\"short\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":198943,"byte_end":199013,"line_start":419,"line_end":419,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199014,"byte_end":199021,"line_start":420,"line_end":420,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":200236,"byte_end":200246,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_until","qualname":"::bytes::streaming::take_until","value":"pub fn take_until<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + InputLength + FindSubstring<T>, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns the input slice up to the first occurrence of the pattern.","sig":null,"attributes":[{"value":"/ Returns the input slice up to the first occurrence of the pattern.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199362,"byte_end":199432,"line_start":435,"line_end":435,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199433,"byte_end":199436,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the pattern.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199437,"byte_end":199472,"line_start":437,"line_end":437,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199473,"byte_end":199476,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199477,"byte_end":199501,"line_start":439,"line_end":439,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(N))` if the input doesn't","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199502,"byte_end":199594,"line_start":440,"line_end":440,"column_start":1,"column_end":93}},{"value":"/ contain the pattern or if the input is smaller than the pattern.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199595,"byte_end":199663,"line_start":441,"line_end":441,"column_start":1,"column_end":69}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199664,"byte_end":199677,"line_start":442,"line_end":442,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199678,"byte_end":199689,"line_start":443,"line_end":443,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199690,"byte_end":199726,"line_start":444,"line_end":444,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199727,"byte_end":199783,"line_start":445,"line_end":445,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take_until;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199784,"byte_end":199826,"line_start":446,"line_end":446,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199827,"byte_end":199830,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ fn until_eof(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199831,"byte_end":199881,"line_start":448,"line_end":448,"column_start":1,"column_end":51}},{"value":"/   take_until(\"eof\")(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199882,"byte_end":199908,"line_start":449,"line_end":449,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199909,"byte_end":199914,"line_start":450,"line_end":450,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199915,"byte_end":199918,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199919,"byte_end":199993,"line_start":452,"line_end":452,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(until_eof(\"hello, world\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":199994,"byte_end":200075,"line_start":453,"line_end":453,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(until_eof(\"hello, worldeo\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":200076,"byte_end":200159,"line_start":454,"line_end":454,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":200160,"byte_end":200220,"line_start":455,"line_end":455,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":200221,"byte_end":200228,"line_start":456,"line_end":456,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":201638,"byte_end":201649,"line_start":498,"line_end":498,"column_start":8,"column_end":19},"name":"take_until1","qualname":"::bytes::streaming::take_until1","value":"pub fn take_until1<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + InputLength + FindSubstring<T>, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns the non empty input slice up to the first occurrence of the pattern.","sig":null,"attributes":[{"value":"/ Returns the non empty input slice up to the first occurrence of the pattern.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":200650,"byte_end":200730,"line_start":475,"line_end":475,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":200731,"byte_end":200734,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the pattern.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":200735,"byte_end":200770,"line_start":477,"line_end":477,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":200771,"byte_end":200774,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":200775,"byte_end":200799,"line_start":479,"line_end":479,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(N))` if the input doesn't","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":200800,"byte_end":200892,"line_start":480,"line_end":480,"column_start":1,"column_end":93}},{"value":"/ contain the pattern or if the input is smaller than the pattern.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":200893,"byte_end":200961,"line_start":481,"line_end":481,"column_start":1,"column_end":69}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":200962,"byte_end":200975,"line_start":482,"line_end":482,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":200976,"byte_end":200987,"line_start":483,"line_end":483,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":200988,"byte_end":201024,"line_start":484,"line_end":484,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":201025,"byte_end":201090,"line_start":485,"line_end":485,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_until1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":201091,"byte_end":201134,"line_start":486,"line_end":486,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":201135,"byte_end":201138,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ fn until_eof(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":201139,"byte_end":201189,"line_start":488,"line_end":488,"column_start":1,"column_end":51}},{"value":"/   take_until1(\"eof\")(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":201190,"byte_end":201217,"line_start":489,"line_end":489,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":201218,"byte_end":201223,"line_start":490,"line_end":490,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":201224,"byte_end":201227,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":201228,"byte_end":201302,"line_start":492,"line_end":492,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(until_eof(\"hello, world\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":201303,"byte_end":201384,"line_start":493,"line_end":493,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(until_eof(\"hello, worldeo\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":201385,"byte_end":201468,"line_start":494,"line_end":494,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":201469,"byte_end":201529,"line_start":495,"line_end":495,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(until_eof(\"eof\"),  Err(Err::Error(Error::new(\"eof\", ErrorKind::TakeUntil))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":201530,"byte_end":201622,"line_start":496,"line_end":496,"column_start":1,"column_end":93}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":201623,"byte_end":201630,"line_start":497,"line_end":497,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202898,"byte_end":202905,"line_start":538,"line_end":538,"column_start":8,"column_end":15},"name":"escaped","qualname":"::bytes::streaming::escaped","value":"pub fn escaped<Input, Error, F, G, O1, O2>(F, char, G) -> /*impl Trait*/ where\nInput: Clone + crate::traits::Offset + InputLength + InputTake +\nInputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202136,"byte_end":202186,"line_start":517,"line_end":517,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202187,"byte_end":202190,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not accept the control character)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202191,"byte_end":202288,"line_start":519,"line_end":519,"column_start":1,"column_end":98}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202289,"byte_end":202368,"line_start":520,"line_end":520,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202369,"byte_end":202424,"line_start":521,"line_end":521,"column_start":1,"column_end":56}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202425,"byte_end":202438,"line_start":522,"line_end":522,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202439,"byte_end":202446,"line_start":523,"line_end":523,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202447,"byte_end":202483,"line_start":524,"line_end":524,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202484,"byte_end":202540,"line_start":525,"line_end":525,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::digit1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202541,"byte_end":202584,"line_start":526,"line_end":526,"column_start":1,"column_end":44}},{"value":"/ use nom::bytes::streaming::escaped;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202585,"byte_end":202624,"line_start":527,"line_end":527,"column_start":1,"column_end":40}},{"value":"/ use nom::character::streaming::one_of;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202625,"byte_end":202667,"line_start":528,"line_end":528,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202668,"byte_end":202671,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ fn esc(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202672,"byte_end":202716,"line_start":530,"line_end":530,"column_start":1,"column_end":45}},{"value":"/   escaped(digit1, '\\\\', one_of(\"\\\"n\\\\\"))(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202717,"byte_end":202764,"line_start":531,"line_end":531,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202765,"byte_end":202770,"line_start":532,"line_end":532,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202771,"byte_end":202774,"line_start":533,"line_end":533,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(esc(\"123;\"), Ok((\";\", \"123\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202775,"byte_end":202821,"line_start":534,"line_end":534,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(esc(\"12\\\\\\\"34;\"), Ok((\";\", \"12\\\\\\\"34\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202822,"byte_end":202878,"line_start":535,"line_end":535,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202879,"byte_end":202886,"line_start":536,"line_end":536,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":202887,"byte_end":202890,"line_start":537,"line_end":537,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1682},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205972,"byte_end":205989,"line_start":641,"line_end":641,"column_start":8,"column_end":25},"name":"escaped_transform","qualname":"::bytes::streaming::escaped_transform","value":"pub fn escaped_transform<Input, Error, F, G, O1, O2, ExtendItem,\n                         Output>(F, char, G) -> /*impl Trait*/ where\nInput: Clone + crate::traits::Offset + InputLength + InputTake +\nInputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\nInput: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO1: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO2: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":204822,"byte_end":204872,"line_start":608,"line_end":608,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":204873,"byte_end":204876,"line_start":609,"line_end":609,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not match the control character)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":204877,"byte_end":204973,"line_start":610,"line_end":610,"column_start":1,"column_end":97}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":204974,"byte_end":205053,"line_start":611,"line_end":611,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters and transforms them","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205054,"byte_end":205129,"line_start":612,"line_end":612,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205130,"byte_end":205133,"line_start":613,"line_end":613,"column_start":1,"column_end":4}},{"value":"/ As an example, the chain `abc\\tdef` could be `abc    def` (it also consumes the control character)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205134,"byte_end":205236,"line_start":614,"line_end":614,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205237,"byte_end":205240,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205241,"byte_end":205248,"line_start":616,"line_end":616,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205249,"byte_end":205285,"line_start":617,"line_end":617,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205286,"byte_end":205342,"line_start":618,"line_end":618,"column_start":1,"column_end":57}},{"value":"/ # use std::str::from_utf8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205343,"byte_end":205373,"line_start":619,"line_end":619,"column_start":1,"column_end":31}},{"value":"/ use nom::bytes::streaming::{escaped_transform, tag};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205374,"byte_end":205430,"line_start":620,"line_end":620,"column_start":1,"column_end":57}},{"value":"/ use nom::character::streaming::alpha1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205431,"byte_end":205473,"line_start":621,"line_end":621,"column_start":1,"column_end":43}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205474,"byte_end":205499,"line_start":622,"line_end":622,"column_start":1,"column_end":26}},{"value":"/ use nom::combinator::value;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205500,"byte_end":205531,"line_start":623,"line_end":623,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205532,"byte_end":205535,"line_start":624,"line_end":624,"column_start":1,"column_end":4}},{"value":"/ fn parser(input: &str) -> IResult<&str, String> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205536,"byte_end":205589,"line_start":625,"line_end":625,"column_start":1,"column_end":54}},{"value":"/   escaped_transform(","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205590,"byte_end":205614,"line_start":626,"line_end":626,"column_start":1,"column_end":25}},{"value":"/     alpha1,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205615,"byte_end":205630,"line_start":627,"line_end":627,"column_start":1,"column_end":16}},{"value":"/     '\\\\',","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205631,"byte_end":205644,"line_start":628,"line_end":628,"column_start":1,"column_end":14}},{"value":"/     alt((","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205645,"byte_end":205658,"line_start":629,"line_end":629,"column_start":1,"column_end":14}},{"value":"/       value(\"\\\\\", tag(\"\\\\\")),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205659,"byte_end":205692,"line_start":630,"line_end":630,"column_start":1,"column_end":34}},{"value":"/       value(\"\\\"\", tag(\"\\\"\")),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205693,"byte_end":205726,"line_start":631,"line_end":631,"column_start":1,"column_end":34}},{"value":"/       value(\"n\", tag(\"\\n\")),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205727,"byte_end":205759,"line_start":632,"line_end":632,"column_start":1,"column_end":33}},{"value":"/     ))","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205760,"byte_end":205770,"line_start":633,"line_end":633,"column_start":1,"column_end":11}},{"value":"/   )(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205771,"byte_end":205785,"line_start":634,"line_end":634,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205786,"byte_end":205791,"line_start":635,"line_end":635,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205792,"byte_end":205795,"line_start":636,"line_end":636,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab\\\\\\\"cd\\\"\"), Ok((\"\\\"\", String::from(\"ab\\\"cd\"))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205796,"byte_end":205869,"line_start":637,"line_end":637,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205870,"byte_end":205877,"line_start":638,"line_end":638,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/streaming.rs","byte_start":205878,"byte_end":205903,"line_start":639,"line_end":639,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1696},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bits","qualname":"::bits","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","parent":null,"children":[{"krate":0,"index":1697},{"krate":0,"index":1756},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1829},{"krate":0,"index":1832},{"krate":0,"index":1835},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":1854}],"decl_id":null,"docs":" Bit level parsers","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15651,"byte_end":15663,"line_start":462,"line_end":462,"column_start":1,"column_end":13}},{"value":"/ Bit level parsers","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208308,"byte_end":208329,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208330,"byte_end":208333,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::bits::complete","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","parent":null,"children":[{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1702},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1709},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1716},{"krate":0,"index":1719},{"krate":0,"index":1722},{"krate":0,"index":1725},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1732},{"krate":0,"index":1735},{"krate":0,"index":1738},{"krate":0,"index":1741},{"krate":0,"index":1748}],"decl_id":null,"docs":" Bit level parsers","sig":null,"attributes":[{"value":"/ Bit level parsers","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":214418,"byte_end":214439,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":214440,"byte_end":214443,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1741},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":215713,"byte_end":215717,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"take","qualname":"::bits::complete::take","value":"pub fn take<I, O, C, E: ParseError<(I, usize)>>(C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength, C: ToUsize,\nO: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize, Output = O>","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":214652,"byte_end":214694,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":214695,"byte_end":214698,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":214699,"byte_end":214712,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":214713,"byte_end":214724,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ # use nom::bits::complete::take;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":214725,"byte_end":214761,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/ # use nom::IResult;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":214762,"byte_end":214785,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/ # use nom::error::{Error, ErrorKind};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":214786,"byte_end":214827,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ // Input is a tuple of (input: I, bit_offset: usize)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":214828,"byte_end":214884,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ fn parser(input: (&[u8], usize), count: usize)-> IResult<(&[u8], usize), u8> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":214885,"byte_end":214967,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/  take(count)(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":214968,"byte_end":214991,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":214992,"byte_end":214997,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":214998,"byte_end":215001,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // Consumes 0 bits, returns 0","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":215002,"byte_end":215035,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(parser(([0b00010010].as_ref(), 0), 0), Ok((([0b00010010].as_ref(), 0), 0)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":215036,"byte_end":215127,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":215128,"byte_end":215131,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ // Consumes 4 bits, returns their values and increase offset to 4","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":215132,"byte_end":215201,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(([0b00010010].as_ref(), 0), 4), Ok((([0b00010010].as_ref(), 4), 0b00000001)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":215202,"byte_end":215302,"line_start":25,"line_end":25,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":215303,"byte_end":215306,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Consumes 4 bits, offset is 4, returns their values and increase offset to 0 of next byte","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":215307,"byte_end":215402,"line_start":27,"line_end":27,"column_start":1,"column_end":96}},{"value":"/ assert_eq!(parser(([0b00010010].as_ref(), 4), 4), Ok((([].as_ref(), 0), 0b00000010)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":215403,"byte_end":215493,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":215494,"byte_end":215497,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // Tries to consume 12 bits but only 8 are available","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":215498,"byte_end":215554,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser(([0b00010010].as_ref(), 0), 12), Err(nom::Err::Error(Error{input: ([0b00010010].as_ref(), 0), code: ErrorKind::Eof })));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":215555,"byte_end":215697,"line_start":31,"line_end":31,"column_start":1,"column_end":143}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":215698,"byte_end":215705,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1748},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":217269,"byte_end":217272,"line_start":85,"line_end":85,"column_start":8,"column_end":11},"name":"tag","qualname":"::bits::complete::tag","value":"pub fn tag<I, O, C, E: ParseError<(I, usize)>>(O, C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength + Clone,\nC: ToUsize, O: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize,\nOutput = O> + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits and comparing them to `pattern`\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits and comparing them to `pattern`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/complete.rs","byte_start":217187,"byte_end":217261,"line_start":84,"line_end":84,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::bits::streaming","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/streaming.rs","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1761},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1778},{"krate":0,"index":1781},{"krate":0,"index":1784},{"krate":0,"index":1787},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1803},{"krate":0,"index":1810}],"decl_id":null,"docs":" Bit level parsers","sig":null,"attributes":[{"value":"/ Bit level parsers","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/streaming.rs","byte_start":218826,"byte_end":218847,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/streaming.rs","byte_start":218848,"byte_end":218851,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1803},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/streaming.rs","byte_start":219118,"byte_end":219122,"line_start":10,"line_end":10,"column_start":8,"column_end":12},"name":"take","qualname":"::bits::streaming::take","value":"pub fn take<I, O, C, E: ParseError<(I, usize)>>(C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength, C: ToUsize,\nO: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize, Output = O>","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/streaming.rs","byte_start":219068,"byte_end":219110,"line_start":9,"line_end":9,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1810},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/streaming.rs","byte_start":220620,"byte_end":220623,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"tag","qualname":"::bits::streaming::tag","value":"pub fn tag<I, O, C, E: ParseError<(I, usize)>>(O, C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength + Clone,\nC: ToUsize, O: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize,\nOutput = O> + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits and comparing them to `pattern`\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits and comparing them to `pattern`","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/streaming.rs","byte_start":220538,"byte_end":220612,"line_start":58,"line_end":58,"column_start":1,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":1845},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":209480,"byte_end":209484,"line_start":40,"line_end":40,"column_start":8,"column_end":12},"name":"bits","qualname":"::bits::bits","value":"pub fn bits<I, O, E1, E2, P>(P) -> /*impl Trait*/ where\nE1: ParseError<(I, usize)> + ErrorConvert<E2>, E2: ParseError<I>,\nI: Slice<RangeFrom<usize>>, P: FnMut((I, usize)) -> IResult<(I, usize), O, E1>","parent":null,"children":[],"decl_id":null,"docs":" Converts a byte-level input to a bit-level input, for consumption by a parser that uses bits.","sig":null,"attributes":[{"value":"/ Converts a byte-level input to a bit-level input, for consumption by a parser that uses bits.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208541,"byte_end":208638,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208639,"byte_end":208642,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Afterwards, the input is converted back to a byte-level parser, with any remaining bits thrown","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208643,"byte_end":208741,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"/ away.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208742,"byte_end":208751,"line_start":15,"line_end":15,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208752,"byte_end":208755,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208756,"byte_end":208769,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208770,"byte_end":208777,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ use nom::bits::{bits, streaming::take};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208778,"byte_end":208821,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/ use nom::error::Error;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208822,"byte_end":208848,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ use nom::sequence::tuple;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208849,"byte_end":208878,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/ use nom::IResult;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208879,"byte_end":208900,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208901,"byte_end":208904,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ fn parse(input: &[u8]) -> IResult<&[u8], (u8, u8)> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208905,"byte_end":208961,"line_start":24,"line_end":24,"column_start":1,"column_end":57}},{"value":"/     bits::<_, _, Error<(&[u8], usize)>, _, _>(tuple((take(4usize), take(8usize))))(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208962,"byte_end":209055,"line_start":25,"line_end":25,"column_start":1,"column_end":94}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":209056,"byte_end":209061,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":209062,"byte_end":209065,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let input = &[0x12, 0x34, 0xff, 0xff];","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":209066,"byte_end":209108,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":209109,"byte_end":209112,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let output = parse(input).expect(\"We take 1.5 bytes and the input is longer than 2 bytes\");","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":209113,"byte_end":209208,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":209209,"byte_end":209212,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // The first byte is consumed, the second byte is partially consumed and dropped.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":209213,"byte_end":209298,"line_start":32,"line_end":32,"column_start":1,"column_end":86}},{"value":"/ let remaining = output.0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":209299,"byte_end":209328,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(remaining, [0xff, 0xff]);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":209329,"byte_end":209369,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":209370,"byte_end":209373,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let parsed = output.1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":209374,"byte_end":209400,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(parsed.0, 0x01);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":209401,"byte_end":209432,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parsed.1, 0x23);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":209433,"byte_end":209464,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":209465,"byte_end":209472,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1854},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":211239,"byte_end":211244,"line_start":86,"line_end":86,"column_start":8,"column_end":13},"name":"bytes","qualname":"::bits::bytes","value":"pub fn bytes<I, O, E1, E2, P>(P) -> /*impl Trait*/ where E1: ParseError<I> +\nErrorConvert<E2>, E2: ParseError<(I, usize)>, I: Slice<RangeFrom<usize>> +\nClone, P: FnMut(I) -> IResult<I, O, E1>","parent":null,"children":[],"decl_id":null,"docs":" Counterpart to `bits`, `bytes` transforms its bit stream input into a byte slice for the underlying\n parser, allowing byte-slice parsers to work on bit streams.","sig":null,"attributes":[{"value":"/ Counterpart to `bits`, `bytes` transforms its bit stream input into a byte slice for the underlying","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210382,"byte_end":210485,"line_start":61,"line_end":61,"column_start":1,"column_end":104}},{"value":"/ parser, allowing byte-slice parsers to work on bit streams.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210486,"byte_end":210549,"line_start":62,"line_end":62,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210550,"byte_end":210553,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ A partial byte remaining in the input will be ignored and the given parser will start parsing","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210554,"byte_end":210651,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"/ at the next full byte.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210652,"byte_end":210678,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210679,"byte_end":210682,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210683,"byte_end":210690,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use nom::bits::{bits, bytes, streaming::take};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210691,"byte_end":210741,"line_start":68,"line_end":68,"column_start":1,"column_end":51}},{"value":"/ use nom::combinator::rest;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210742,"byte_end":210772,"line_start":69,"line_end":69,"column_start":1,"column_end":31}},{"value":"/ use nom::error::Error;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210773,"byte_end":210799,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/ use nom::sequence::tuple;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210800,"byte_end":210829,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/ use nom::IResult;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210830,"byte_end":210851,"line_start":72,"line_end":72,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210852,"byte_end":210855,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ fn parse(input: &[u8]) -> IResult<&[u8], (u8, u8, &[u8])> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210856,"byte_end":210919,"line_start":74,"line_end":74,"column_start":1,"column_end":64}},{"value":"/   bits::<_, _, Error<(&[u8], usize)>, _, _>(tuple((","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210920,"byte_end":210975,"line_start":75,"line_end":75,"column_start":1,"column_end":56}},{"value":"/     take(4usize),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210976,"byte_end":210997,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     take(8usize),","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":210998,"byte_end":211019,"line_start":77,"line_end":77,"column_start":1,"column_end":22}},{"value":"/     bytes::<_, _, Error<&[u8]>, _, _>(rest)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":211020,"byte_end":211067,"line_start":78,"line_end":78,"column_start":1,"column_end":48}},{"value":"/   )))(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":211068,"byte_end":211084,"line_start":79,"line_end":79,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":211085,"byte_end":211090,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":211091,"byte_end":211094,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let input = &[0x12, 0x34, 0xff, 0xff];","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":211095,"byte_end":211137,"line_start":82,"line_end":82,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":211138,"byte_end":211141,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parse( input ), Ok(( &[][..], (0x01, 0x23, &[0xff, 0xff][..]) )));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":211142,"byte_end":211223,"line_start":84,"line_end":84,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":211224,"byte_end":211231,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1862},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"character","qualname":"::character","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","parent":null,"children":[{"krate":0,"index":1863},{"krate":0,"index":2036},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218}],"decl_id":null,"docs":" Character specific parsers and combinators","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15679,"byte_end":15691,"line_start":465,"line_end":465,"column_start":1,"column_end":13}},{"value":"/ Character specific parsers and combinators","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221207,"byte_end":221253,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221254,"byte_end":221257,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Functions recognizing specific characters","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221258,"byte_end":221303,"line_start":3,"line_end":3,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":1863},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::character::complete","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1867},{"krate":0,"index":1870},{"krate":0,"index":1873},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1880},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1887},{"krate":0,"index":1890},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1897},{"krate":0,"index":1900},{"krate":0,"index":1903},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1919},{"krate":0,"index":1922},{"krate":0,"index":1928},{"krate":0,"index":1935},{"krate":0,"index":1942},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":1956},{"krate":0,"index":1959},{"krate":0,"index":1962},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":1972},{"krate":0,"index":1976},{"krate":0,"index":1980},{"krate":0,"index":1984},{"krate":0,"index":1988},{"krate":0,"index":1992},{"krate":0,"index":1996},{"krate":0,"index":2000},{"krate":0,"index":2004},{"krate":0,"index":2008},{"krate":0,"index":2012},{"krate":0,"index":2016},{"krate":0,"index":2020},{"krate":0,"index":2024},{"krate":0,"index":2034},{"krate":0,"index":5890},{"krate":0,"index":5896},{"krate":0,"index":5902},{"krate":0,"index":5908},{"krate":0,"index":5914},{"krate":0,"index":2035},{"krate":0,"index":5920},{"krate":0,"index":5924},{"krate":0,"index":5928},{"krate":0,"index":5932},{"krate":0,"index":5936}],"decl_id":null,"docs":" Character specific parsers and combinators, complete input version.","sig":null,"attributes":[{"value":"/ Character specific parsers and combinators, complete input version.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":223846,"byte_end":223917,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":223918,"byte_end":223921,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Functions recognizing specific characters.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":223922,"byte_end":223968,"line_start":3,"line_end":3,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1922},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224950,"byte_end":224954,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"char","qualname":"::character::complete::char","value":"pub fn char<I, Error: ParseError<I>>(char) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character.","sig":null,"attributes":[{"value":"/ Recognizes one character.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224327,"byte_end":224356,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224357,"byte_end":224360,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224361,"byte_end":224439,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224440,"byte_end":224453,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224454,"byte_end":224457,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224458,"byte_end":224465,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224466,"byte_end":224523,"line_start":22,"line_end":22,"column_start":1,"column_end":58}},{"value":"/ # use nom::character::complete::char;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224524,"byte_end":224565,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224566,"byte_end":224613,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/     char('a')(i)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224614,"byte_end":224634,"line_start":25,"line_end":25,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224635,"byte_end":224640,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224641,"byte_end":224688,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\" abc\"), Err(Err::Error(Error::new(\" abc\", ErrorKind::Char))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224689,"byte_end":224774,"line_start":28,"line_end":28,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"bc\"), Err(Err::Error(Error::new(\"bc\", ErrorKind::Char))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224775,"byte_end":224856,"line_start":29,"line_end":29,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224857,"byte_end":224934,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":224935,"byte_end":224942,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1928},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225957,"byte_end":225964,"line_start":61,"line_end":61,"column_start":8,"column_end":15},"name":"satisfy","qualname":"::character::complete::satisfy","value":"pub fn satisfy<F, I, Error: ParseError<I>>(F) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar,\nF: Fn(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character and checks that it satisfies a predicate","sig":null,"attributes":[{"value":"/ Recognizes one character and checks that it satisfies a predicate","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225339,"byte_end":225408,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225409,"byte_end":225412,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225413,"byte_end":225491,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225492,"byte_end":225505,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225506,"byte_end":225509,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225510,"byte_end":225517,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225518,"byte_end":225583,"line_start":52,"line_end":52,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::satisfy;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225584,"byte_end":225628,"line_start":53,"line_end":53,"column_start":1,"column_end":45}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225629,"byte_end":225676,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/     satisfy(|c| c == 'a' || c == 'b')(i)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225677,"byte_end":225721,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225722,"byte_end":225727,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225728,"byte_end":225775,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"cd\"), Err(Err::Error(Error::new(\"cd\", ErrorKind::Satisfy))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225776,"byte_end":225860,"line_start":58,"line_end":58,"column_start":1,"column_end":85}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Satisfy))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225861,"byte_end":225941,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":225942,"byte_end":225949,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1935},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":226942,"byte_end":226948,"line_start":89,"line_end":89,"column_start":8,"column_end":14},"name":"one_of","qualname":"::character::complete::one_of","value":"pub fn one_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one of the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes one of the provided characters.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":226403,"byte_end":226449,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":226450,"byte_end":226453,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":226454,"byte_end":226532,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":226533,"byte_end":226546,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":226547,"byte_end":226550,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":226551,"byte_end":226558,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":226559,"byte_end":226598,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # use nom::character::complete::one_of;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":226599,"byte_end":226642,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"abc\")(\"b\"), Ok((\"\", 'b')));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":226643,"byte_end":226720,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"a\")(\"bc\"), Err(Err::Error((\"bc\", ErrorKind::OneOf))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":226721,"byte_end":226825,"line_start":86,"line_end":86,"column_start":1,"column_end":105}},{"value":"/ assert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"a\")(\"\"), Err(Err::Error((\"\", ErrorKind::OneOf))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":226826,"byte_end":226926,"line_start":87,"line_end":87,"column_start":1,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":226927,"byte_end":226934,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1942},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":227944,"byte_end":227951,"line_start":113,"line_end":113,"column_start":8,"column_end":15},"name":"none_of","qualname":"::character::complete::none_of","value":"pub fn none_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a character that is not in the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes a character that is not in the provided characters.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":227380,"byte_end":227446,"line_start":101,"line_end":101,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":227447,"byte_end":227450,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":227451,"byte_end":227529,"line_start":103,"line_end":103,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":227530,"byte_end":227543,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":227544,"byte_end":227547,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":227548,"byte_end":227555,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":227556,"byte_end":227595,"line_start":107,"line_end":107,"column_start":1,"column_end":40}},{"value":"/ # use nom::character::complete::none_of;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":227596,"byte_end":227640,"line_start":108,"line_end":108,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"abc\")(\"z\"), Ok((\"\", 'z')));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":227641,"byte_end":227719,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"ab\")(\"a\"), Err(Err::Error((\"a\", ErrorKind::NoneOf))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":227720,"byte_end":227825,"line_start":110,"line_end":110,"column_start":1,"column_end":106}},{"value":"/ assert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"a\")(\"\"), Err(Err::Error((\"\", ErrorKind::NoneOf))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":227826,"byte_end":227928,"line_start":111,"line_end":111,"column_start":1,"column_end":103}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":227929,"byte_end":227936,"line_start":112,"line_end":112,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1949},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228947,"byte_end":228951,"line_start":141,"line_end":141,"column_start":8,"column_end":12},"name":"crlf","qualname":"::character::complete::crlf","value":"pub fn crlf<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>>, T: InputIter,\nT: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes the string \"\\r\\n\".","sig":null,"attributes":[{"value":"/ Recognizes the string \"\\r\\n\".","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228385,"byte_end":228418,"line_start":125,"line_end":125,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228419,"byte_end":228422,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228423,"byte_end":228501,"line_start":127,"line_end":127,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228502,"byte_end":228515,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228516,"byte_end":228519,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228520,"byte_end":228527,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228528,"byte_end":228585,"line_start":131,"line_end":131,"column_start":1,"column_end":58}},{"value":"/ # use nom::character::complete::crlf;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228586,"byte_end":228627,"line_start":132,"line_end":132,"column_start":1,"column_end":42}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228628,"byte_end":228679,"line_start":133,"line_end":133,"column_start":1,"column_end":52}},{"value":"/     crlf(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228680,"byte_end":228699,"line_start":134,"line_end":134,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228700,"byte_end":228705,"line_start":135,"line_end":135,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228706,"byte_end":228709,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228710,"byte_end":228761,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"ab\\r\\nc\"), Err(Err::Error(Error::new(\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228762,"byte_end":228853,"line_start":138,"line_end":138,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::CrLf))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228854,"byte_end":228931,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":228932,"byte_end":228939,"line_start":140,"line_end":140,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1952},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":230193,"byte_end":230208,"line_start":177,"line_end":177,"column_start":8,"column_end":23},"name":"not_line_ending","qualname":"::character::complete::not_line_ending","value":"pub fn not_line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>,\n<T as InputIter>::Item: AsChar, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a string of any char except '\\r\\n' or '\\n'.","sig":null,"attributes":[{"value":"/ Recognizes a string of any char except '\\r\\n' or '\\n'.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229400,"byte_end":229458,"line_start":158,"line_end":158,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229459,"byte_end":229462,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229463,"byte_end":229541,"line_start":160,"line_end":160,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229542,"byte_end":229555,"line_start":161,"line_end":161,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229556,"byte_end":229559,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229560,"byte_end":229567,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229568,"byte_end":229633,"line_start":164,"line_end":164,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::not_line_ending;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229634,"byte_end":229686,"line_start":165,"line_end":165,"column_start":1,"column_end":53}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229687,"byte_end":229738,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/     not_line_ending(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229739,"byte_end":229769,"line_start":167,"line_end":167,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229770,"byte_end":229775,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229776,"byte_end":229779,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab\\r\\nc\"), Ok((\"\\r\\nc\", \"ab\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229780,"byte_end":229835,"line_start":170,"line_end":170,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"ab\\nc\"), Ok((\"\\nc\", \"ab\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229836,"byte_end":229887,"line_start":171,"line_end":171,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"\", \"abc\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229888,"byte_end":229935,"line_start":172,"line_end":172,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229936,"byte_end":229977,"line_start":173,"line_end":173,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(parser(\"a\\rb\\nc\"), Err(Err::Error(Error { input: \"a\\rb\\nc\", code: ErrorKind::Tag })));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":229978,"byte_end":230079,"line_start":174,"line_end":174,"column_start":1,"column_end":102}},{"value":"/ assert_eq!(parser(\"a\\rbc\"), Err(Err::Error(Error { input: \"a\\rbc\", code: ErrorKind::Tag })));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":230080,"byte_end":230177,"line_start":175,"line_end":175,"column_start":1,"column_end":98}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":230178,"byte_end":230185,"line_start":176,"line_end":176,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1956},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231844,"byte_end":231855,"line_start":227,"line_end":227,"column_start":8,"column_end":19},"name":"line_ending","qualname":"::character::complete::line_ending","value":"pub fn line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an end of line (both '\\n' and '\\r\\n').","sig":null,"attributes":[{"value":"/ Recognizes an end of line (both '\\n' and '\\r\\n').","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231240,"byte_end":231293,"line_start":211,"line_end":211,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231294,"byte_end":231297,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231298,"byte_end":231376,"line_start":213,"line_end":213,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231377,"byte_end":231390,"line_start":214,"line_end":214,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231391,"byte_end":231394,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231395,"byte_end":231402,"line_start":216,"line_end":216,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231403,"byte_end":231468,"line_start":217,"line_end":217,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::line_ending;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231469,"byte_end":231517,"line_start":218,"line_end":218,"column_start":1,"column_end":49}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231518,"byte_end":231569,"line_start":219,"line_end":219,"column_start":1,"column_end":52}},{"value":"/     line_ending(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231570,"byte_end":231596,"line_start":220,"line_end":220,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231597,"byte_end":231602,"line_start":221,"line_end":221,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231603,"byte_end":231606,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231607,"byte_end":231658,"line_start":223,"line_end":223,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"ab\\r\\nc\"), Err(Err::Error(Error::new(\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231659,"byte_end":231750,"line_start":224,"line_end":224,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::CrLf))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231751,"byte_end":231828,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":231829,"byte_end":231836,"line_start":226,"line_end":226,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1959},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233088,"byte_end":233095,"line_start":262,"line_end":262,"column_start":8,"column_end":15},"name":"newline","qualname":"::character::complete::newline","value":"pub fn newline<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a newline character '\\n'.","sig":null,"attributes":[{"value":"/ Matches a newline character '\\n'.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":232516,"byte_end":232553,"line_start":246,"line_end":246,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":232554,"byte_end":232557,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":232558,"byte_end":232636,"line_start":248,"line_end":248,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":232637,"byte_end":232650,"line_start":249,"line_end":249,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":232651,"byte_end":232654,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":232655,"byte_end":232662,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":232663,"byte_end":232728,"line_start":252,"line_end":252,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::newline;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":232729,"byte_end":232773,"line_start":253,"line_end":253,"column_start":1,"column_end":45}},{"value":"/ fn parser(input: &str) -> IResult<&str, char> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":232774,"byte_end":232825,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     newline(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":232826,"byte_end":232848,"line_start":255,"line_end":255,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":232849,"byte_end":232854,"line_start":256,"line_end":256,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":232855,"byte_end":232858,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\nc\"), Ok((\"c\", '\\n')));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":232859,"byte_end":232906,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Err(Err::Error(Error::new(\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":232907,"byte_end":232994,"line_start":259,"line_end":259,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":232995,"byte_end":233072,"line_start":260,"line_end":260,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233073,"byte_end":233080,"line_start":261,"line_end":261,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1962},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233825,"byte_end":233828,"line_start":286,"line_end":286,"column_start":8,"column_end":11},"name":"tab","qualname":"::character::complete::tab","value":"pub fn tab<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a tab character '\\t'.","sig":null,"attributes":[{"value":"/ Matches a tab character '\\t'.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233265,"byte_end":233298,"line_start":270,"line_end":270,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233299,"byte_end":233302,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233303,"byte_end":233381,"line_start":272,"line_end":272,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233382,"byte_end":233395,"line_start":273,"line_end":273,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233396,"byte_end":233399,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233400,"byte_end":233407,"line_start":275,"line_end":275,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233408,"byte_end":233473,"line_start":276,"line_end":276,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::tab;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233474,"byte_end":233514,"line_start":277,"line_end":277,"column_start":1,"column_end":41}},{"value":"/ fn parser(input: &str) -> IResult<&str, char> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233515,"byte_end":233566,"line_start":278,"line_end":278,"column_start":1,"column_end":52}},{"value":"/     tab(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233567,"byte_end":233585,"line_start":279,"line_end":279,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233586,"byte_end":233591,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233592,"byte_end":233595,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\tc\"), Ok((\"c\", '\\t')));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233596,"byte_end":233643,"line_start":282,"line_end":282,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Err(Err::Error(Error::new(\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233644,"byte_end":233731,"line_start":283,"line_end":283,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233732,"byte_end":233809,"line_start":284,"line_end":284,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233810,"byte_end":233817,"line_start":285,"line_end":285,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1965},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":234556,"byte_end":234563,"line_start":309,"line_end":309,"column_start":8,"column_end":15},"name":"anychar","qualname":"::character::complete::anychar","value":"pub fn anychar<T, E: ParseError<T>>(T) -> IResult<T, char, E> where\nT: InputIter + InputLength + Slice<RangeFrom<usize>>,\n<T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches one byte as a character. Note that the input type will\n accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","sig":null,"attributes":[{"value":"/ Matches one byte as a character. Note that the input type will","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":233998,"byte_end":234064,"line_start":294,"line_end":294,"column_start":1,"column_end":67}},{"value":"/ accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":234065,"byte_end":234134,"line_start":295,"line_end":295,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":234135,"byte_end":234138,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":234139,"byte_end":234217,"line_start":297,"line_end":297,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":234218,"byte_end":234231,"line_start":298,"line_end":298,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":234232,"byte_end":234235,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":234236,"byte_end":234243,"line_start":300,"line_end":300,"column_start":1,"column_end":8}},{"value":"/ # use nom::{character::complete::anychar, Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":234244,"byte_end":234331,"line_start":301,"line_end":301,"column_start":1,"column_end":88}},{"value":"/ fn parser(input: &str) -> IResult<&str, char> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":234332,"byte_end":234383,"line_start":302,"line_end":302,"column_start":1,"column_end":52}},{"value":"/     anychar(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":234384,"byte_end":234406,"line_start":303,"line_end":303,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":234407,"byte_end":234412,"line_start":304,"line_end":304,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":234413,"byte_end":234416,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\",'a')));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":234417,"byte_end":234463,"line_start":306,"line_end":306,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":234464,"byte_end":234540,"line_start":307,"line_end":307,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":234541,"byte_end":234548,"line_start":308,"line_end":308,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235604,"byte_end":235610,"line_start":341,"line_end":341,"column_start":8,"column_end":14},"name":"alpha0","qualname":"::character::complete::alpha0","value":"pub fn alpha0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235027,"byte_end":235116,"line_start":324,"line_end":324,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235117,"byte_end":235120,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235121,"byte_end":235212,"line_start":326,"line_end":326,"column_start":1,"column_end":92}},{"value":"/ alphabetic character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235213,"byte_end":235239,"line_start":327,"line_end":327,"column_start":1,"column_end":27}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235240,"byte_end":235253,"line_start":328,"line_end":328,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235254,"byte_end":235257,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235258,"byte_end":235265,"line_start":330,"line_end":330,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235266,"byte_end":235322,"line_start":331,"line_end":331,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::alpha0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235323,"byte_end":235366,"line_start":332,"line_end":332,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235367,"byte_end":235418,"line_start":333,"line_end":333,"column_start":1,"column_end":52}},{"value":"/     alpha0(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235419,"byte_end":235440,"line_start":334,"line_end":334,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235441,"byte_end":235446,"line_start":335,"line_end":335,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235447,"byte_end":235450,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab1c\"), Ok((\"1c\", \"ab\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235451,"byte_end":235500,"line_start":337,"line_end":337,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"1c\"), Ok((\"1c\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235501,"byte_end":235546,"line_start":338,"line_end":338,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235547,"byte_end":235588,"line_start":339,"line_end":339,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235589,"byte_end":235596,"line_start":340,"line_end":340,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1972},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236509,"byte_end":236515,"line_start":366,"line_end":366,"column_start":8,"column_end":14},"name":"alpha1","qualname":"::character::complete::alpha1","value":"pub fn alpha1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235803,"byte_end":235891,"line_start":349,"line_end":349,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235892,"byte_end":235895,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235896,"byte_end":235974,"line_start":351,"line_end":351,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found  (a non alphabetic character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":235975,"byte_end":236061,"line_start":352,"line_end":352,"column_start":1,"column_end":87}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236062,"byte_end":236075,"line_start":353,"line_end":353,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236076,"byte_end":236079,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236080,"byte_end":236087,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236088,"byte_end":236153,"line_start":356,"line_end":356,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::alpha1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236154,"byte_end":236197,"line_start":357,"line_end":357,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236198,"byte_end":236249,"line_start":358,"line_end":358,"column_start":1,"column_end":52}},{"value":"/     alpha1(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236250,"byte_end":236271,"line_start":359,"line_end":359,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236272,"byte_end":236277,"line_start":360,"line_end":360,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236278,"byte_end":236281,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"aB1c\"), Ok((\"1c\", \"aB\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236282,"byte_end":236331,"line_start":362,"line_end":362,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"1c\"), Err(Err::Error(Error::new(\"1c\", ErrorKind::Alpha))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236332,"byte_end":236414,"line_start":363,"line_end":363,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Alpha))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236415,"byte_end":236493,"line_start":364,"line_end":364,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236494,"byte_end":236501,"line_start":365,"line_end":365,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1976},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237363,"byte_end":237369,"line_start":392,"line_end":392,"column_start":8,"column_end":14},"name":"digit0","qualname":"::character::complete::digit0","value":"pub fn digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical characters: 0-9","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236727,"byte_end":236786,"line_start":374,"line_end":374,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236787,"byte_end":236790,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236791,"byte_end":236869,"line_start":376,"line_end":376,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non digit character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236870,"byte_end":236950,"line_start":377,"line_end":377,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236951,"byte_end":236964,"line_start":378,"line_end":378,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236965,"byte_end":236968,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236969,"byte_end":236976,"line_start":380,"line_end":380,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":236977,"byte_end":237033,"line_start":381,"line_end":381,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::digit0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237034,"byte_end":237077,"line_start":382,"line_end":382,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237078,"byte_end":237129,"line_start":383,"line_end":383,"column_start":1,"column_end":52}},{"value":"/     digit0(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237130,"byte_end":237151,"line_start":384,"line_end":384,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237152,"byte_end":237157,"line_start":385,"line_end":385,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237158,"byte_end":237161,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237162,"byte_end":237209,"line_start":387,"line_end":387,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"21\"), Ok((\"\", \"21\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237210,"byte_end":237255,"line_start":388,"line_end":388,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"a21c\"), Ok((\"a21c\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237256,"byte_end":237305,"line_start":389,"line_end":389,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237306,"byte_end":237347,"line_start":390,"line_end":390,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237348,"byte_end":237355,"line_start":391,"line_end":391,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1980},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238234,"byte_end":238240,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"digit1","qualname":"::character::complete::digit1","value":"pub fn digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical characters: 0-9","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237566,"byte_end":237624,"line_start":400,"line_end":400,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237625,"byte_end":237628,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237629,"byte_end":237707,"line_start":402,"line_end":402,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non digit character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237708,"byte_end":237788,"line_start":403,"line_end":403,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237789,"byte_end":237802,"line_start":404,"line_end":404,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237803,"byte_end":237806,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237807,"byte_end":237814,"line_start":406,"line_end":406,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237815,"byte_end":237880,"line_start":407,"line_end":407,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::digit1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237881,"byte_end":237924,"line_start":408,"line_end":408,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237925,"byte_end":237976,"line_start":409,"line_end":409,"column_start":1,"column_end":52}},{"value":"/     digit1(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237977,"byte_end":237998,"line_start":410,"line_end":410,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":237999,"byte_end":238004,"line_start":411,"line_end":411,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238005,"byte_end":238008,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238009,"byte_end":238056,"line_start":413,"line_end":413,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"c1\"), Err(Err::Error(Error::new(\"c1\", ErrorKind::Digit))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238057,"byte_end":238139,"line_start":414,"line_end":414,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Digit))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238140,"byte_end":238218,"line_start":415,"line_end":415,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238219,"byte_end":238226,"line_start":416,"line_end":416,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1984},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239040,"byte_end":239050,"line_start":441,"line_end":441,"column_start":8,"column_end":18},"name":"hex_digit0","qualname":"::character::complete::hex_digit0","value":"pub fn hex_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238456,"byte_end":238537,"line_start":425,"line_end":425,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238538,"byte_end":238541,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238542,"byte_end":238663,"line_start":427,"line_end":427,"column_start":1,"column_end":122}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238664,"byte_end":238677,"line_start":428,"line_end":428,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238678,"byte_end":238681,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238682,"byte_end":238689,"line_start":430,"line_end":430,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238690,"byte_end":238746,"line_start":431,"line_end":431,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::hex_digit0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238747,"byte_end":238794,"line_start":432,"line_end":432,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238795,"byte_end":238846,"line_start":433,"line_end":433,"column_start":1,"column_end":52}},{"value":"/     hex_digit0(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238847,"byte_end":238872,"line_start":434,"line_end":434,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238873,"byte_end":238878,"line_start":435,"line_end":435,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238879,"byte_end":238882,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238883,"byte_end":238932,"line_start":437,"line_end":437,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238933,"byte_end":238982,"line_start":438,"line_end":438,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":238983,"byte_end":239024,"line_start":439,"line_end":439,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239025,"byte_end":239032,"line_start":440,"line_end":440,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1988},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239964,"byte_end":239974,"line_start":465,"line_end":465,"column_start":8,"column_end":18},"name":"hex_digit1","qualname":"::character::complete::hex_digit1","value":"pub fn hex_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239246,"byte_end":239326,"line_start":448,"line_end":448,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239327,"byte_end":239330,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239331,"byte_end":239409,"line_start":450,"line_end":450,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239410,"byte_end":239502,"line_start":451,"line_end":451,"column_start":1,"column_end":93}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239503,"byte_end":239516,"line_start":452,"line_end":452,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239517,"byte_end":239520,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239521,"byte_end":239528,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239529,"byte_end":239594,"line_start":455,"line_end":455,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::hex_digit1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239595,"byte_end":239642,"line_start":456,"line_end":456,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239643,"byte_end":239694,"line_start":457,"line_end":457,"column_start":1,"column_end":52}},{"value":"/     hex_digit1(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239695,"byte_end":239720,"line_start":458,"line_end":458,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239721,"byte_end":239726,"line_start":459,"line_end":459,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239727,"byte_end":239730,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239731,"byte_end":239780,"line_start":461,"line_end":461,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::HexDigit))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239781,"byte_end":239866,"line_start":462,"line_end":462,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::HexDigit))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239867,"byte_end":239948,"line_start":463,"line_end":463,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":239949,"byte_end":239956,"line_start":464,"line_end":464,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1992},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240743,"byte_end":240753,"line_start":490,"line_end":490,"column_start":8,"column_end":18},"name":"oct_digit0","qualname":"::character::complete::oct_digit0","value":"pub fn oct_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes zero or more octal characters: 0-7","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240193,"byte_end":240242,"line_start":473,"line_end":473,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240243,"byte_end":240246,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non octal","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240247,"byte_end":240344,"line_start":475,"line_end":475,"column_start":1,"column_end":98}},{"value":"/ digit character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240345,"byte_end":240366,"line_start":476,"line_end":476,"column_start":1,"column_end":22}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240367,"byte_end":240380,"line_start":477,"line_end":477,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240381,"byte_end":240384,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240385,"byte_end":240392,"line_start":479,"line_end":479,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240393,"byte_end":240449,"line_start":480,"line_end":480,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::oct_digit0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240450,"byte_end":240497,"line_start":481,"line_end":481,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240498,"byte_end":240549,"line_start":482,"line_end":482,"column_start":1,"column_end":52}},{"value":"/     oct_digit0(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240550,"byte_end":240575,"line_start":483,"line_end":483,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240576,"byte_end":240581,"line_start":484,"line_end":484,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240582,"byte_end":240585,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240586,"byte_end":240635,"line_start":486,"line_end":486,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240636,"byte_end":240685,"line_start":487,"line_end":487,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240686,"byte_end":240727,"line_start":488,"line_end":488,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240728,"byte_end":240735,"line_start":489,"line_end":489,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241630,"byte_end":241640,"line_start":515,"line_end":515,"column_start":8,"column_end":18},"name":"oct_digit1","qualname":"::character::complete::oct_digit1","value":"pub fn oct_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes one or more octal characters: 0-7","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240950,"byte_end":240998,"line_start":498,"line_end":498,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":240999,"byte_end":241002,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241003,"byte_end":241081,"line_start":500,"line_end":500,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non octal digit character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241082,"byte_end":241168,"line_start":501,"line_end":501,"column_start":1,"column_end":87}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241169,"byte_end":241182,"line_start":502,"line_end":502,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241183,"byte_end":241186,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241187,"byte_end":241194,"line_start":504,"line_end":504,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241195,"byte_end":241260,"line_start":505,"line_end":505,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::oct_digit1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241261,"byte_end":241308,"line_start":506,"line_end":506,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241309,"byte_end":241360,"line_start":507,"line_end":507,"column_start":1,"column_end":52}},{"value":"/     oct_digit1(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241361,"byte_end":241386,"line_start":508,"line_end":508,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241387,"byte_end":241392,"line_start":509,"line_end":509,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241393,"byte_end":241396,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241397,"byte_end":241446,"line_start":511,"line_end":511,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::OctDigit))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241447,"byte_end":241532,"line_start":512,"line_end":512,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::OctDigit))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241533,"byte_end":241614,"line_start":513,"line_end":513,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241615,"byte_end":241622,"line_start":514,"line_end":514,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2000},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242459,"byte_end":242472,"line_start":540,"line_end":540,"column_start":8,"column_end":21},"name":"alphanumeric0","qualname":"::character::complete::alphanumeric0","value":"pub fn alphanumeric0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241859,"byte_end":241943,"line_start":523,"line_end":523,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241944,"byte_end":241947,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":241948,"byte_end":242039,"line_start":525,"line_end":525,"column_start":1,"column_end":92}},{"value":"/ alphanumerical character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242040,"byte_end":242070,"line_start":526,"line_end":526,"column_start":1,"column_end":31}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242071,"byte_end":242084,"line_start":527,"line_end":527,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242085,"byte_end":242088,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242089,"byte_end":242096,"line_start":529,"line_end":529,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242097,"byte_end":242153,"line_start":530,"line_end":530,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::alphanumeric0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242154,"byte_end":242204,"line_start":531,"line_end":531,"column_start":1,"column_end":51}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242205,"byte_end":242256,"line_start":532,"line_end":532,"column_start":1,"column_end":52}},{"value":"/     alphanumeric0(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242257,"byte_end":242285,"line_start":533,"line_end":533,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242286,"byte_end":242291,"line_start":534,"line_end":534,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242292,"byte_end":242295,"line_start":535,"line_end":535,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242296,"byte_end":242349,"line_start":536,"line_end":536,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"&Z21c\"), Ok((\"&Z21c\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242350,"byte_end":242401,"line_start":537,"line_end":537,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242402,"byte_end":242443,"line_start":538,"line_end":538,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242444,"byte_end":242451,"line_start":539,"line_end":539,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2004},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243406,"byte_end":243419,"line_start":565,"line_end":565,"column_start":8,"column_end":21},"name":"alphanumeric1","qualname":"::character::complete::alphanumeric1","value":"pub fn alphanumeric1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242668,"byte_end":242751,"line_start":548,"line_end":548,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242752,"byte_end":242755,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242756,"byte_end":242834,"line_start":550,"line_end":550,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non alphanumerical character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242835,"byte_end":242924,"line_start":551,"line_end":551,"column_start":1,"column_end":90}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242925,"byte_end":242938,"line_start":552,"line_end":552,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242939,"byte_end":242942,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242943,"byte_end":242950,"line_start":554,"line_end":554,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":242951,"byte_end":243016,"line_start":555,"line_end":555,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::alphanumeric1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243017,"byte_end":243067,"line_start":556,"line_end":556,"column_start":1,"column_end":51}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243068,"byte_end":243119,"line_start":557,"line_end":557,"column_start":1,"column_end":52}},{"value":"/     alphanumeric1(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243120,"byte_end":243148,"line_start":558,"line_end":558,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243149,"byte_end":243154,"line_start":559,"line_end":559,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243155,"byte_end":243158,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243159,"byte_end":243212,"line_start":561,"line_end":561,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"&H2\"), Err(Err::Error(Error::new(\"&H2\", ErrorKind::AlphaNumeric))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243213,"byte_end":243304,"line_start":562,"line_end":562,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::AlphaNumeric))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243305,"byte_end":243390,"line_start":563,"line_end":563,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243391,"byte_end":243398,"line_start":564,"line_end":564,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244176,"byte_end":244182,"line_start":590,"line_end":590,"column_start":8,"column_end":14},"name":"space0","qualname":"::character::complete::space0","value":"pub fn space0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces and tabs.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243641,"byte_end":243685,"line_start":573,"line_end":573,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243686,"byte_end":243689,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non space","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243690,"byte_end":243787,"line_start":575,"line_end":575,"column_start":1,"column_end":98}},{"value":"/ character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243788,"byte_end":243803,"line_start":576,"line_end":576,"column_start":1,"column_end":16}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243804,"byte_end":243817,"line_start":577,"line_end":577,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243818,"byte_end":243821,"line_start":578,"line_end":578,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243822,"byte_end":243829,"line_start":579,"line_end":579,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243830,"byte_end":243886,"line_start":580,"line_end":580,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::space0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243887,"byte_end":243930,"line_start":581,"line_end":581,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243931,"byte_end":243982,"line_start":582,"line_end":582,"column_start":1,"column_end":52}},{"value":"/     space0(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":243983,"byte_end":244004,"line_start":583,"line_end":583,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244005,"byte_end":244010,"line_start":584,"line_end":584,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244011,"byte_end":244014,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244015,"byte_end":244068,"line_start":586,"line_end":586,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244069,"byte_end":244118,"line_start":587,"line_end":587,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244119,"byte_end":244160,"line_start":588,"line_end":588,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244161,"byte_end":244168,"line_start":589,"line_end":589,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2012},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245088,"byte_end":245094,"line_start":618,"line_end":618,"column_start":8,"column_end":14},"name":"space1","qualname":"::character::complete::space1","value":"pub fn space1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces and tabs.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244429,"byte_end":244472,"line_start":601,"line_end":601,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244473,"byte_end":244476,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244477,"byte_end":244555,"line_start":603,"line_end":603,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non space character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244556,"byte_end":244636,"line_start":604,"line_end":604,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244637,"byte_end":244650,"line_start":605,"line_end":605,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244651,"byte_end":244654,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244655,"byte_end":244662,"line_start":607,"line_end":607,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244663,"byte_end":244728,"line_start":608,"line_end":608,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::space1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244729,"byte_end":244772,"line_start":609,"line_end":609,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244773,"byte_end":244824,"line_start":610,"line_end":610,"column_start":1,"column_end":52}},{"value":"/     space1(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244825,"byte_end":244846,"line_start":611,"line_end":611,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244847,"byte_end":244852,"line_start":612,"line_end":612,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244853,"byte_end":244856,"line_start":613,"line_end":613,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244857,"byte_end":244910,"line_start":614,"line_end":614,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::Space))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244911,"byte_end":244993,"line_start":615,"line_end":615,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Space))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":244994,"byte_end":245072,"line_start":616,"line_end":616,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245073,"byte_end":245080,"line_start":617,"line_end":617,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245962,"byte_end":245973,"line_start":649,"line_end":649,"column_start":8,"column_end":19},"name":"multispace0","qualname":"::character::complete::multispace0","value":"pub fn multispace0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245379,"byte_end":245453,"line_start":632,"line_end":632,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245454,"byte_end":245457,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: will return the whole input if no terminating token is found (a non space","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245458,"byte_end":245555,"line_start":634,"line_end":634,"column_start":1,"column_end":98}},{"value":"/ character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245556,"byte_end":245571,"line_start":635,"line_end":635,"column_start":1,"column_end":16}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245572,"byte_end":245585,"line_start":636,"line_end":636,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245586,"byte_end":245589,"line_start":637,"line_end":637,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245590,"byte_end":245597,"line_start":638,"line_end":638,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245598,"byte_end":245654,"line_start":639,"line_end":639,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::multispace0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245655,"byte_end":245703,"line_start":640,"line_end":640,"column_start":1,"column_end":49}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245704,"byte_end":245755,"line_start":641,"line_end":641,"column_start":1,"column_end":52}},{"value":"/     multispace0(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245756,"byte_end":245782,"line_start":642,"line_end":642,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245783,"byte_end":245788,"line_start":643,"line_end":643,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245789,"byte_end":245792,"line_start":644,"line_end":644,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245793,"byte_end":245854,"line_start":645,"line_end":645,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245855,"byte_end":245904,"line_start":646,"line_end":646,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245905,"byte_end":245946,"line_start":647,"line_end":647,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":245947,"byte_end":245954,"line_start":648,"line_end":648,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2020},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246963,"byte_end":246974,"line_start":677,"line_end":677,"column_start":8,"column_end":19},"name":"multispace1","qualname":"::character::complete::multispace1","value":"pub fn multispace1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246246,"byte_end":246319,"line_start":660,"line_end":660,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246320,"byte_end":246323,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: will return an error if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246324,"byte_end":246402,"line_start":662,"line_end":662,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non space character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246403,"byte_end":246483,"line_start":663,"line_end":663,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246484,"byte_end":246497,"line_start":664,"line_end":664,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246498,"byte_end":246501,"line_start":665,"line_end":665,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246502,"byte_end":246509,"line_start":666,"line_end":666,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246510,"byte_end":246575,"line_start":667,"line_end":667,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::multispace1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246576,"byte_end":246624,"line_start":668,"line_end":668,"column_start":1,"column_end":49}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246625,"byte_end":246676,"line_start":669,"line_end":669,"column_start":1,"column_end":52}},{"value":"/     multispace1(input)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246677,"byte_end":246703,"line_start":670,"line_end":670,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246704,"byte_end":246709,"line_start":671,"line_end":671,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246710,"byte_end":246713,"line_start":672,"line_end":672,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246714,"byte_end":246775,"line_start":673,"line_end":673,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::MultiSpace))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246776,"byte_end":246863,"line_start":674,"line_end":674,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::MultiSpace))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246864,"byte_end":246947,"line_start":675,"line_end":675,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":246948,"byte_end":246955,"line_start":676,"line_end":676,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5890},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250204,"byte_end":250206,"line_start":768,"line_end":768,"column_start":9,"column_end":11},"name":"i8","qualname":"::character::complete::i8","value":"pub fn i8<T, E: ParseError<T>>(T) -> IResult<T, i8, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":247743,"byte_end":247791,"line_start":712,"line_end":712,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":247800,"byte_end":247803,"line_start":713,"line_end":713,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":247812,"byte_end":247869,"line_start":714,"line_end":714,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5896},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250207,"byte_end":250210,"line_start":768,"line_end":768,"column_start":12,"column_end":15},"name":"i16","qualname":"::character::complete::i16","value":"pub fn i16<T, E: ParseError<T>>(T) -> IResult<T, i16, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":247743,"byte_end":247791,"line_start":712,"line_end":712,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":247800,"byte_end":247803,"line_start":713,"line_end":713,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":247812,"byte_end":247869,"line_start":714,"line_end":714,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5902},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250211,"byte_end":250214,"line_start":768,"line_end":768,"column_start":16,"column_end":19},"name":"i32","qualname":"::character::complete::i32","value":"pub fn i32<T, E: ParseError<T>>(T) -> IResult<T, i32, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":247743,"byte_end":247791,"line_start":712,"line_end":712,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":247800,"byte_end":247803,"line_start":713,"line_end":713,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":247812,"byte_end":247869,"line_start":714,"line_end":714,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5908},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250215,"byte_end":250218,"line_start":768,"line_end":768,"column_start":20,"column_end":23},"name":"i64","qualname":"::character::complete::i64","value":"pub fn i64<T, E: ParseError<T>>(T) -> IResult<T, i64, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":247743,"byte_end":247791,"line_start":712,"line_end":712,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":247800,"byte_end":247803,"line_start":713,"line_end":713,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":247812,"byte_end":247869,"line_start":714,"line_end":714,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5914},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250219,"byte_end":250223,"line_start":768,"line_end":768,"column_start":24,"column_end":28},"name":"i128","qualname":"::character::complete::i128","value":"pub fn i128<T, E: ParseError<T>>(T) -> IResult<T, i128, E> where\nT: InputIter + Slice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":247743,"byte_end":247791,"line_start":712,"line_end":712,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":247800,"byte_end":247803,"line_start":713,"line_end":713,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":247812,"byte_end":247869,"line_start":714,"line_end":714,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5920},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":251713,"byte_end":251715,"line_start":811,"line_end":811,"column_start":10,"column_end":12},"name":"u8","qualname":"::character::complete::u8","value":"pub fn u8<T, E: ParseError<T>>(T) -> IResult<T, u8, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250303,"byte_end":250351,"line_start":774,"line_end":774,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250360,"byte_end":250363,"line_start":775,"line_end":775,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250372,"byte_end":250429,"line_start":776,"line_end":776,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5924},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":251716,"byte_end":251719,"line_start":811,"line_end":811,"column_start":13,"column_end":16},"name":"u16","qualname":"::character::complete::u16","value":"pub fn u16<T, E: ParseError<T>>(T) -> IResult<T, u16, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250303,"byte_end":250351,"line_start":774,"line_end":774,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250360,"byte_end":250363,"line_start":775,"line_end":775,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250372,"byte_end":250429,"line_start":776,"line_end":776,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5928},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":251720,"byte_end":251723,"line_start":811,"line_end":811,"column_start":17,"column_end":20},"name":"u32","qualname":"::character::complete::u32","value":"pub fn u32<T, E: ParseError<T>>(T) -> IResult<T, u32, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250303,"byte_end":250351,"line_start":774,"line_end":774,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250360,"byte_end":250363,"line_start":775,"line_end":775,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250372,"byte_end":250429,"line_start":776,"line_end":776,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5932},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":251724,"byte_end":251727,"line_start":811,"line_end":811,"column_start":21,"column_end":24},"name":"u64","qualname":"::character::complete::u64","value":"pub fn u64<T, E: ParseError<T>>(T) -> IResult<T, u64, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250303,"byte_end":250351,"line_start":774,"line_end":774,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250360,"byte_end":250363,"line_start":775,"line_end":775,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250372,"byte_end":250429,"line_start":776,"line_end":776,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5936},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":251728,"byte_end":251732,"line_start":811,"line_end":811,"column_start":25,"column_end":29},"name":"u128","qualname":"::character::complete::u128","value":"pub fn u128<T, E: ParseError<T>>(T) -> IResult<T, u128, E> where\nT: InputIter + Slice<RangeFrom<usize>> + InputLength,\n<T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250303,"byte_end":250351,"line_start":774,"line_end":774,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250360,"byte_end":250363,"line_start":775,"line_end":775,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/complete.rs","byte_start":250372,"byte_end":250429,"line_start":776,"line_end":776,"column_start":9,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":2036},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::character::streaming","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","parent":null,"children":[{"krate":0,"index":2037},{"krate":0,"index":2040},{"krate":0,"index":2043},{"krate":0,"index":2046},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2053},{"krate":0,"index":2056},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2063},{"krate":0,"index":2066},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2073},{"krate":0,"index":2076},{"krate":0,"index":2079},{"krate":0,"index":2082},{"krate":0,"index":2085},{"krate":0,"index":2088},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2095},{"krate":0,"index":2098},{"krate":0,"index":2104},{"krate":0,"index":2111},{"krate":0,"index":2118},{"krate":0,"index":2125},{"krate":0,"index":2128},{"krate":0,"index":2132},{"krate":0,"index":2135},{"krate":0,"index":2138},{"krate":0,"index":2141},{"krate":0,"index":2144},{"krate":0,"index":2148},{"krate":0,"index":2152},{"krate":0,"index":2156},{"krate":0,"index":2160},{"krate":0,"index":2164},{"krate":0,"index":2168},{"krate":0,"index":2172},{"krate":0,"index":2176},{"krate":0,"index":2180},{"krate":0,"index":2184},{"krate":0,"index":2188},{"krate":0,"index":2192},{"krate":0,"index":2196},{"krate":0,"index":2200},{"krate":0,"index":2210},{"krate":0,"index":5940},{"krate":0,"index":5946},{"krate":0,"index":5952},{"krate":0,"index":5958},{"krate":0,"index":5964},{"krate":0,"index":2211},{"krate":0,"index":5970},{"krate":0,"index":5974},{"krate":0,"index":5978},{"krate":0,"index":5982},{"krate":0,"index":5986}],"decl_id":null,"docs":" Character specific parsers and combinators, streaming version","sig":null,"attributes":[{"value":"/ Character specific parsers and combinators, streaming version","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":264550,"byte_end":264615,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":264616,"byte_end":264619,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Functions recognizing specific characters","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":264620,"byte_end":264665,"line_start":3,"line_end":3,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":2098},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265589,"byte_end":265593,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"char","qualname":"::character::streaming::char","value":"pub fn char<I, Error: ParseError<I>>(char) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter + InputLength,\n<I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character.","sig":null,"attributes":[{"value":"/ Recognizes one character.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265032,"byte_end":265061,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265062,"byte_end":265065,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265066,"byte_end":265167,"line_start":18,"line_end":18,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265168,"byte_end":265181,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265182,"byte_end":265185,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265186,"byte_end":265193,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265194,"byte_end":265259,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::streaming::char;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265260,"byte_end":265302,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265303,"byte_end":265350,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/     char('a')(i)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265351,"byte_end":265371,"line_start":25,"line_end":25,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265372,"byte_end":265377,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265378,"byte_end":265425,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"bc\"), Err(Err::Error(Error::new(\"bc\", ErrorKind::Char))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265426,"byte_end":265507,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265508,"byte_end":265573,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":265574,"byte_end":265581,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2104},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266707,"byte_end":266714,"line_start":61,"line_end":61,"column_start":8,"column_end":15},"name":"satisfy","qualname":"::character::streaming::satisfy","value":"pub fn satisfy<F, I, Error: ParseError<I>>(F) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar,\nF: Fn(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character and checks that it satisfies a predicate","sig":null,"attributes":[{"value":"/ Recognizes one character and checks that it satisfies a predicate","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266079,"byte_end":266148,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266149,"byte_end":266152,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266153,"byte_end":266254,"line_start":48,"line_end":48,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266255,"byte_end":266268,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266269,"byte_end":266272,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266273,"byte_end":266280,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266281,"byte_end":266346,"line_start":52,"line_end":52,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::streaming::satisfy;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266347,"byte_end":266392,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266393,"byte_end":266440,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/     satisfy(|c| c == 'a' || c == 'b')(i)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266441,"byte_end":266485,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266486,"byte_end":266491,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266492,"byte_end":266539,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"cd\"), Err(Err::Error(Error::new(\"cd\", ErrorKind::Satisfy))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266540,"byte_end":266624,"line_start":58,"line_end":58,"column_start":1,"column_end":85}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266625,"byte_end":266691,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":266692,"byte_end":266699,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":267778,"byte_end":267784,"line_start":90,"line_end":90,"column_start":8,"column_end":14},"name":"one_of","qualname":"::character::streaming::one_of","value":"pub fn one_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one of the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes one of the provided characters.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":267219,"byte_end":267265,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":267266,"byte_end":267269,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":267270,"byte_end":267371,"line_start":80,"line_end":80,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":267372,"byte_end":267385,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":267386,"byte_end":267389,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":267390,"byte_end":267397,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":267398,"byte_end":267445,"line_start":84,"line_end":84,"column_start":1,"column_end":48}},{"value":"/ # use nom::character::streaming::one_of;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":267446,"byte_end":267490,"line_start":85,"line_end":85,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(one_of::<_, _, (_, ErrorKind)>(\"abc\")(\"b\"), Ok((\"\", 'b')));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":267491,"byte_end":267565,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(one_of::<_, _, (_, ErrorKind)>(\"a\")(\"bc\"), Err(Err::Error((\"bc\", ErrorKind::OneOf))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":267566,"byte_end":267667,"line_start":87,"line_end":87,"column_start":1,"column_end":102}},{"value":"/ assert_eq!(one_of::<_, _, (_, ErrorKind)>(\"a\")(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":267668,"byte_end":267762,"line_start":88,"line_end":88,"column_start":1,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":267763,"byte_end":267770,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":268864,"byte_end":268871,"line_start":115,"line_end":115,"column_start":8,"column_end":15},"name":"none_of","qualname":"::character::streaming::none_of","value":"pub fn none_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a character that is not in the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes a character that is not in the provided characters.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":268281,"byte_end":268347,"line_start":103,"line_end":103,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":268348,"byte_end":268351,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":268352,"byte_end":268453,"line_start":105,"line_end":105,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":268454,"byte_end":268467,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":268468,"byte_end":268471,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":268472,"byte_end":268479,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":268480,"byte_end":268527,"line_start":109,"line_end":109,"column_start":1,"column_end":48}},{"value":"/ # use nom::character::streaming::none_of;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":268528,"byte_end":268573,"line_start":110,"line_end":110,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(none_of::<_, _, (_, ErrorKind)>(\"abc\")(\"z\"), Ok((\"\", 'z')));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":268574,"byte_end":268649,"line_start":111,"line_end":111,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(none_of::<_, _, (_, ErrorKind)>(\"ab\")(\"a\"), Err(Err::Error((\"a\", ErrorKind::NoneOf))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":268650,"byte_end":268752,"line_start":112,"line_end":112,"column_start":1,"column_end":103}},{"value":"/ assert_eq!(none_of::<_, _, (_, ErrorKind)>(\"a\")(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":268753,"byte_end":268848,"line_start":113,"line_end":113,"column_start":1,"column_end":96}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":268849,"byte_end":268856,"line_start":114,"line_end":114,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2125},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":269908,"byte_end":269912,"line_start":140,"line_end":140,"column_start":8,"column_end":12},"name":"crlf","qualname":"::character::streaming::crlf","value":"pub fn crlf<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter, T: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes the string \"\\r\\n\".","sig":null,"attributes":[{"value":"/ Recognizes the string \"\\r\\n\".","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":269370,"byte_end":269403,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":269404,"byte_end":269407,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":269408,"byte_end":269509,"line_start":130,"line_end":130,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":269510,"byte_end":269523,"line_start":131,"line_end":131,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":269524,"byte_end":269527,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":269528,"byte_end":269535,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":269536,"byte_end":269592,"line_start":134,"line_end":134,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::crlf;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":269593,"byte_end":269635,"line_start":135,"line_end":135,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(crlf::<_, (_, ErrorKind)>(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":269636,"byte_end":269706,"line_start":136,"line_end":136,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(crlf::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Err(Err::Error((\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":269707,"byte_end":269807,"line_start":137,"line_end":137,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(crlf::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":269808,"byte_end":269892,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":269893,"byte_end":269900,"line_start":139,"line_end":139,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2128},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":271267,"byte_end":271282,"line_start":171,"line_end":171,"column_start":8,"column_end":23},"name":"not_line_ending","qualname":"::character::streaming::not_line_ending","value":"pub fn not_line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>,\n<T as InputIter>::Item: AsChar, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a string of any char except '\\r\\n' or '\\n'.","sig":null,"attributes":[{"value":"/ Recognizes a string of any char except '\\r\\n' or '\\n'.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":270438,"byte_end":270496,"line_start":157,"line_end":157,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":270497,"byte_end":270500,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":270501,"byte_end":270602,"line_start":159,"line_end":159,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":270603,"byte_end":270616,"line_start":160,"line_end":160,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":270617,"byte_end":270620,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":270621,"byte_end":270628,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":270629,"byte_end":270694,"line_start":163,"line_end":163,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::streaming::not_line_ending;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":270695,"byte_end":270748,"line_start":164,"line_end":164,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Ok((\"\\r\\nc\", \"ab\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":270749,"byte_end":270834,"line_start":165,"line_end":165,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"abc\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":270835,"byte_end":270934,"line_start":166,"line_end":166,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":270935,"byte_end":271031,"line_start":167,"line_end":167,"column_start":1,"column_end":97}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"a\\rb\\nc\"), Err(Err::Error((\"a\\rb\\nc\", ErrorKind::Tag ))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":271032,"byte_end":271143,"line_start":168,"line_end":168,"column_start":1,"column_end":112}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"a\\rbc\"), Err(Err::Error((\"a\\rbc\", ErrorKind::Tag ))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":271144,"byte_end":271251,"line_start":169,"line_end":169,"column_start":1,"column_end":108}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":271252,"byte_end":271259,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2132},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":272989,"byte_end":273000,"line_start":218,"line_end":218,"column_start":8,"column_end":19},"name":"line_ending","qualname":"::character::streaming::line_ending","value":"pub fn line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an end of line (both '\\n' and '\\r\\n').","sig":null,"attributes":[{"value":"/ Recognizes an end of line (both '\\n' and '\\r\\n').","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":272403,"byte_end":272456,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":272457,"byte_end":272460,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":272461,"byte_end":272562,"line_start":208,"line_end":208,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":272563,"byte_end":272576,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":272577,"byte_end":272580,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":272581,"byte_end":272588,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":272589,"byte_end":272645,"line_start":212,"line_end":212,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::line_ending;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":272646,"byte_end":272695,"line_start":213,"line_end":213,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(line_ending::<_, (_, ErrorKind)>(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":272696,"byte_end":272773,"line_start":214,"line_end":214,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(line_ending::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Err(Err::Error((\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":272774,"byte_end":272881,"line_start":215,"line_end":215,"column_start":1,"column_end":108}},{"value":"/ assert_eq!(line_ending::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":272882,"byte_end":272973,"line_start":216,"line_end":216,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":272974,"byte_end":272981,"line_start":217,"line_end":217,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2135},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274279,"byte_end":274286,"line_start":250,"line_end":250,"column_start":8,"column_end":15},"name":"newline","qualname":"::character::streaming::newline","value":"pub fn newline<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter + InputLength,\n<I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a newline character '\\\\n'.","sig":null,"attributes":[{"value":"/ Matches a newline character '\\\\n'.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":273732,"byte_end":273770,"line_start":238,"line_end":238,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":273771,"byte_end":273774,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":273775,"byte_end":273876,"line_start":240,"line_end":240,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":273877,"byte_end":273890,"line_start":241,"line_end":241,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":273891,"byte_end":273894,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":273895,"byte_end":273902,"line_start":243,"line_end":243,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":273903,"byte_end":273959,"line_start":244,"line_end":244,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::newline;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":273960,"byte_end":274005,"line_start":245,"line_end":245,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(newline::<_, (_, ErrorKind)>(\"\\nc\"), Ok((\"c\", '\\n')));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274006,"byte_end":274075,"line_start":246,"line_end":246,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(newline::<_, (_, ErrorKind)>(\"\\r\\nc\"), Err(Err::Error((\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274076,"byte_end":274175,"line_start":247,"line_end":247,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(newline::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274176,"byte_end":274263,"line_start":248,"line_end":248,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274264,"byte_end":274271,"line_start":249,"line_end":249,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2138},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274996,"byte_end":274999,"line_start":270,"line_end":270,"column_start":8,"column_end":11},"name":"tab","qualname":"::character::streaming::tab","value":"pub fn tab<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter + InputLength,\n<I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a tab character '\\t'.","sig":null,"attributes":[{"value":"/ Matches a tab character '\\t'.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274470,"byte_end":274503,"line_start":258,"line_end":258,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274504,"byte_end":274507,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274508,"byte_end":274609,"line_start":260,"line_end":260,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274610,"byte_end":274623,"line_start":261,"line_end":261,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274624,"byte_end":274627,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274628,"byte_end":274635,"line_start":263,"line_end":263,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274636,"byte_end":274692,"line_start":264,"line_end":264,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::tab;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274693,"byte_end":274734,"line_start":265,"line_end":265,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(tab::<_, (_, ErrorKind)>(\"\\tc\"), Ok((\"c\", '\\t')));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274735,"byte_end":274800,"line_start":266,"line_end":266,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(tab::<_, (_, ErrorKind)>(\"\\r\\nc\"), Err(Err::Error((\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274801,"byte_end":274896,"line_start":267,"line_end":267,"column_start":1,"column_end":96}},{"value":"/ assert_eq!(tab::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274897,"byte_end":274980,"line_start":268,"line_end":268,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":274981,"byte_end":274988,"line_start":269,"line_end":269,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2141},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":275712,"byte_end":275719,"line_start":289,"line_end":289,"column_start":8,"column_end":15},"name":"anychar","qualname":"::character::streaming::anychar","value":"pub fn anychar<T, E: ParseError<T>>(T) -> IResult<T, char, E> where\nT: InputIter + InputLength + Slice<RangeFrom<usize>>,\n<T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches one byte as a character. Note that the input type will\n accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","sig":null,"attributes":[{"value":"/ Matches one byte as a character. Note that the input type will","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":275183,"byte_end":275249,"line_start":278,"line_end":278,"column_start":1,"column_end":67}},{"value":"/ accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":275250,"byte_end":275319,"line_start":279,"line_end":279,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":275320,"byte_end":275323,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":275324,"byte_end":275425,"line_start":281,"line_end":281,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":275426,"byte_end":275439,"line_start":282,"line_end":282,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":275440,"byte_end":275443,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":275444,"byte_end":275451,"line_start":284,"line_end":284,"column_start":1,"column_end":8}},{"value":"/ # use nom::{character::streaming::anychar, Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":275452,"byte_end":275539,"line_start":285,"line_end":285,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(anychar::<_, (_, ErrorKind)>(\"abc\"), Ok((\"bc\",'a')));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":275540,"byte_end":275608,"line_start":286,"line_end":286,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(anychar::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":275609,"byte_end":275696,"line_start":287,"line_end":287,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":275697,"byte_end":275704,"line_start":288,"line_end":288,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2144},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":276795,"byte_end":276801,"line_start":317,"line_end":317,"column_start":8,"column_end":14},"name":"alpha0","qualname":"::character::streaming::alpha0","value":"pub fn alpha0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":276161,"byte_end":276250,"line_start":304,"line_end":304,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":276251,"byte_end":276254,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":276255,"byte_end":276356,"line_start":306,"line_end":306,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphabetic character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":276357,"byte_end":276426,"line_start":307,"line_end":307,"column_start":1,"column_end":70}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":276427,"byte_end":276440,"line_start":308,"line_end":308,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":276441,"byte_end":276444,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":276445,"byte_end":276452,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":276453,"byte_end":276509,"line_start":311,"line_end":311,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alpha0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":276510,"byte_end":276554,"line_start":312,"line_end":312,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(alpha0::<_, (_, ErrorKind)>(\"ab1c\"), Ok((\"1c\", \"ab\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":276555,"byte_end":276625,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha0::<_, (_, ErrorKind)>(\"1c\"), Ok((\"1c\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":276626,"byte_end":276692,"line_start":314,"line_end":314,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(alpha0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":276693,"byte_end":276779,"line_start":315,"line_end":315,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":276780,"byte_end":276787,"line_start":316,"line_end":316,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2148},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277645,"byte_end":277651,"line_start":338,"line_end":338,"column_start":8,"column_end":14},"name":"alpha1","qualname":"::character::streaming::alpha1","value":"pub fn alpha1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":276985,"byte_end":277073,"line_start":325,"line_end":325,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277074,"byte_end":277077,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277078,"byte_end":277179,"line_start":327,"line_end":327,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphabetic character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277180,"byte_end":277249,"line_start":328,"line_end":328,"column_start":1,"column_end":70}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277250,"byte_end":277263,"line_start":329,"line_end":329,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277264,"byte_end":277267,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277268,"byte_end":277275,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277276,"byte_end":277332,"line_start":332,"line_end":332,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alpha1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277333,"byte_end":277377,"line_start":333,"line_end":333,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(alpha1::<_, (_, ErrorKind)>(\"aB1c\"), Ok((\"1c\", \"aB\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277378,"byte_end":277448,"line_start":334,"line_end":334,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha1::<_, (_, ErrorKind)>(\"1c\"), Err(Err::Error((\"1c\", ErrorKind::Alpha))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277449,"byte_end":277542,"line_start":335,"line_end":335,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(alpha1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277543,"byte_end":277629,"line_start":336,"line_end":336,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277630,"byte_end":277637,"line_start":337,"line_end":337,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2152},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278455,"byte_end":278461,"line_start":359,"line_end":359,"column_start":8,"column_end":14},"name":"digit0","qualname":"::character::streaming::digit0","value":"pub fn digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical characters: 0-9","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277854,"byte_end":277913,"line_start":346,"line_end":346,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277914,"byte_end":277917,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":277918,"byte_end":278019,"line_start":348,"line_end":348,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non digit character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278020,"byte_end":278084,"line_start":349,"line_end":349,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278085,"byte_end":278098,"line_start":350,"line_end":350,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278099,"byte_end":278102,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278103,"byte_end":278110,"line_start":352,"line_end":352,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278111,"byte_end":278167,"line_start":353,"line_end":353,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::digit0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278168,"byte_end":278212,"line_start":354,"line_end":354,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(digit0::<_, (_, ErrorKind)>(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278213,"byte_end":278281,"line_start":355,"line_end":355,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(digit0::<_, (_, ErrorKind)>(\"a21c\"), Ok((\"a21c\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278282,"byte_end":278352,"line_start":356,"line_end":356,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278353,"byte_end":278439,"line_start":357,"line_end":357,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278440,"byte_end":278447,"line_start":358,"line_end":358,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279272,"byte_end":279278,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"digit1","qualname":"::character::streaming::digit1","value":"pub fn digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical characters: 0-9","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278649,"byte_end":278707,"line_start":367,"line_end":367,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278708,"byte_end":278711,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278712,"byte_end":278813,"line_start":369,"line_end":369,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non digit character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278814,"byte_end":278878,"line_start":370,"line_end":370,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278879,"byte_end":278892,"line_start":371,"line_end":371,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278893,"byte_end":278896,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278897,"byte_end":278904,"line_start":373,"line_end":373,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278905,"byte_end":278961,"line_start":374,"line_end":374,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::digit1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":278962,"byte_end":279006,"line_start":375,"line_end":375,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(digit1::<_, (_, ErrorKind)>(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279007,"byte_end":279075,"line_start":376,"line_end":376,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(digit1::<_, (_, ErrorKind)>(\"c1\"), Err(Err::Error((\"c1\", ErrorKind::Digit))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279076,"byte_end":279169,"line_start":377,"line_end":377,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279170,"byte_end":279256,"line_start":378,"line_end":378,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279257,"byte_end":279264,"line_start":379,"line_end":379,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2160},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280138,"byte_end":280148,"line_start":401,"line_end":401,"column_start":8,"column_end":18},"name":"hex_digit0","qualname":"::character::streaming::hex_digit0","value":"pub fn hex_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279485,"byte_end":279566,"line_start":388,"line_end":388,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279567,"byte_end":279570,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279571,"byte_end":279672,"line_start":390,"line_end":390,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279673,"byte_end":279749,"line_start":391,"line_end":391,"column_start":1,"column_end":77}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279750,"byte_end":279763,"line_start":392,"line_end":392,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279764,"byte_end":279767,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279768,"byte_end":279775,"line_start":394,"line_end":394,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279776,"byte_end":279832,"line_start":395,"line_end":395,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::hex_digit0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279833,"byte_end":279881,"line_start":396,"line_end":396,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279882,"byte_end":279956,"line_start":397,"line_end":397,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":279957,"byte_end":280031,"line_start":398,"line_end":398,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280032,"byte_end":280122,"line_start":399,"line_end":399,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280123,"byte_end":280130,"line_start":400,"line_end":400,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2164},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":281014,"byte_end":281024,"line_start":422,"line_end":422,"column_start":8,"column_end":18},"name":"hex_digit1","qualname":"::character::streaming::hex_digit1","value":"pub fn hex_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280336,"byte_end":280416,"line_start":409,"line_end":409,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280417,"byte_end":280420,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280421,"byte_end":280522,"line_start":411,"line_end":411,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280523,"byte_end":280599,"line_start":412,"line_end":412,"column_start":1,"column_end":77}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280600,"byte_end":280613,"line_start":413,"line_end":413,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280614,"byte_end":280617,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280618,"byte_end":280625,"line_start":415,"line_end":415,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280626,"byte_end":280682,"line_start":416,"line_end":416,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::hex_digit1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280683,"byte_end":280731,"line_start":417,"line_end":417,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280732,"byte_end":280806,"line_start":418,"line_end":418,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::HexDigit))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280807,"byte_end":280907,"line_start":419,"line_end":419,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280908,"byte_end":280998,"line_start":420,"line_end":420,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":280999,"byte_end":281006,"line_start":421,"line_end":421,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":281849,"byte_end":281859,"line_start":443,"line_end":443,"column_start":8,"column_end":18},"name":"oct_digit0","qualname":"::character::streaming::oct_digit0","value":"pub fn oct_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes zero or more octal characters: 0-7","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":281234,"byte_end":281283,"line_start":430,"line_end":430,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":281284,"byte_end":281287,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":281288,"byte_end":281389,"line_start":432,"line_end":432,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non octal digit character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":281390,"byte_end":281460,"line_start":433,"line_end":433,"column_start":1,"column_end":71}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":281461,"byte_end":281474,"line_start":434,"line_end":434,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":281475,"byte_end":281478,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":281479,"byte_end":281486,"line_start":436,"line_end":436,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":281487,"byte_end":281543,"line_start":437,"line_end":437,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::oct_digit0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":281544,"byte_end":281592,"line_start":438,"line_end":438,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":281593,"byte_end":281667,"line_start":439,"line_end":439,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":281668,"byte_end":281742,"line_start":440,"line_end":440,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":281743,"byte_end":281833,"line_start":441,"line_end":441,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":281834,"byte_end":281841,"line_start":442,"line_end":442,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2172},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282687,"byte_end":282697,"line_start":464,"line_end":464,"column_start":8,"column_end":18},"name":"oct_digit1","qualname":"::character::streaming::oct_digit1","value":"pub fn oct_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes one or more octal characters: 0-7","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282047,"byte_end":282095,"line_start":451,"line_end":451,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282096,"byte_end":282099,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282100,"byte_end":282201,"line_start":453,"line_end":453,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non octal digit character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282202,"byte_end":282272,"line_start":454,"line_end":454,"column_start":1,"column_end":71}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282273,"byte_end":282286,"line_start":455,"line_end":455,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282287,"byte_end":282290,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282291,"byte_end":282298,"line_start":457,"line_end":457,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282299,"byte_end":282355,"line_start":458,"line_end":458,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::oct_digit1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282356,"byte_end":282404,"line_start":459,"line_end":459,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282405,"byte_end":282479,"line_start":460,"line_end":460,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::OctDigit))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282480,"byte_end":282580,"line_start":461,"line_end":461,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282581,"byte_end":282671,"line_start":462,"line_end":462,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282672,"byte_end":282679,"line_start":463,"line_end":463,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2176},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":283578,"byte_end":283591,"line_start":485,"line_end":485,"column_start":8,"column_end":21},"name":"alphanumeric0","qualname":"::character::streaming::alphanumeric0","value":"pub fn alphanumeric0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282907,"byte_end":282991,"line_start":472,"line_end":472,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282992,"byte_end":282995,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":282996,"byte_end":283097,"line_start":474,"line_end":474,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphanumerical character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":283098,"byte_end":283171,"line_start":475,"line_end":475,"column_start":1,"column_end":74}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":283172,"byte_end":283185,"line_start":476,"line_end":476,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":283186,"byte_end":283189,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":283190,"byte_end":283197,"line_start":478,"line_end":478,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":283198,"byte_end":283254,"line_start":479,"line_end":479,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alphanumeric0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":283255,"byte_end":283306,"line_start":480,"line_end":480,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":283307,"byte_end":283388,"line_start":481,"line_end":481,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"&Z21c\"), Ok((\"&Z21c\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":283389,"byte_end":283468,"line_start":482,"line_end":482,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":283469,"byte_end":283562,"line_start":483,"line_end":483,"column_start":1,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":283563,"byte_end":283570,"line_start":484,"line_end":484,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2180},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284478,"byte_end":284491,"line_start":506,"line_end":506,"column_start":8,"column_end":21},"name":"alphanumeric1","qualname":"::character::streaming::alphanumeric1","value":"pub fn alphanumeric1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":283778,"byte_end":283861,"line_start":493,"line_end":493,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":283862,"byte_end":283865,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":283866,"byte_end":283967,"line_start":495,"line_end":495,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphanumerical character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":283968,"byte_end":284041,"line_start":496,"line_end":496,"column_start":1,"column_end":74}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284042,"byte_end":284055,"line_start":497,"line_end":497,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284056,"byte_end":284059,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284060,"byte_end":284067,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284068,"byte_end":284124,"line_start":500,"line_end":500,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alphanumeric1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284125,"byte_end":284176,"line_start":501,"line_end":501,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284177,"byte_end":284258,"line_start":502,"line_end":502,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"&H2\"), Err(Err::Error((\"&H2\", ErrorKind::AlphaNumeric))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284259,"byte_end":284368,"line_start":503,"line_end":503,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284369,"byte_end":284462,"line_start":504,"line_end":504,"column_start":1,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284463,"byte_end":284470,"line_start":505,"line_end":505,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2184},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285296,"byte_end":285302,"line_start":527,"line_end":527,"column_start":8,"column_end":14},"name":"space0","qualname":"::character::streaming::space0","value":"pub fn space0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces and tabs.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284704,"byte_end":284748,"line_start":514,"line_end":514,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284749,"byte_end":284752,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284753,"byte_end":284854,"line_start":516,"line_end":516,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284855,"byte_end":284919,"line_start":517,"line_end":517,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284920,"byte_end":284933,"line_start":518,"line_end":518,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284934,"byte_end":284937,"line_start":519,"line_end":519,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284938,"byte_end":284945,"line_start":520,"line_end":520,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":284946,"byte_end":285002,"line_start":521,"line_end":521,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::space0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285003,"byte_end":285047,"line_start":522,"line_end":522,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(space0::<_, (_, ErrorKind)>(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285048,"byte_end":285122,"line_start":523,"line_end":523,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(space0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285123,"byte_end":285193,"line_start":524,"line_end":524,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(space0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285194,"byte_end":285280,"line_start":525,"line_end":525,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285281,"byte_end":285288,"line_start":526,"line_end":526,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":286153,"byte_end":286159,"line_start":550,"line_end":550,"column_start":8,"column_end":14},"name":"space1","qualname":"::character::streaming::space1","value":"pub fn space1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces and tabs.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285539,"byte_end":285582,"line_start":537,"line_end":537,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285583,"byte_end":285586,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285587,"byte_end":285688,"line_start":539,"line_end":539,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285689,"byte_end":285753,"line_start":540,"line_end":540,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285754,"byte_end":285767,"line_start":541,"line_end":541,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285768,"byte_end":285771,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285772,"byte_end":285779,"line_start":543,"line_end":543,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285780,"byte_end":285836,"line_start":544,"line_end":544,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::space1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285837,"byte_end":285881,"line_start":545,"line_end":545,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(space1::<_, (_, ErrorKind)>(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285882,"byte_end":285956,"line_start":546,"line_end":546,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(space1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::Space))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":285957,"byte_end":286050,"line_start":547,"line_end":547,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(space1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":286051,"byte_end":286137,"line_start":548,"line_end":548,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":286138,"byte_end":286145,"line_start":549,"line_end":549,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2192},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":287085,"byte_end":287096,"line_start":577,"line_end":577,"column_start":8,"column_end":19},"name":"multispace0","qualname":"::character::streaming::multispace0","value":"pub fn multispace0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":286435,"byte_end":286509,"line_start":564,"line_end":564,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":286510,"byte_end":286513,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":286514,"byte_end":286615,"line_start":566,"line_end":566,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":286616,"byte_end":286680,"line_start":567,"line_end":567,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":286681,"byte_end":286694,"line_start":568,"line_end":568,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":286695,"byte_end":286698,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":286699,"byte_end":286706,"line_start":570,"line_end":570,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":286707,"byte_end":286763,"line_start":571,"line_end":571,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::multispace0;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":286764,"byte_end":286813,"line_start":572,"line_end":572,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(multispace0::<_, (_, ErrorKind)>(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":286814,"byte_end":286901,"line_start":573,"line_end":573,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(multispace0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":286902,"byte_end":286977,"line_start":574,"line_end":574,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(multispace0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":286978,"byte_end":287069,"line_start":575,"line_end":575,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":287070,"byte_end":287077,"line_start":576,"line_end":576,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2196},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288037,"byte_end":288048,"line_start":601,"line_end":601,"column_start":8,"column_end":19},"name":"multispace1","qualname":"::character::streaming::multispace1","value":"pub fn multispace1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":287360,"byte_end":287433,"line_start":588,"line_end":588,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":287434,"byte_end":287437,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":287438,"byte_end":287539,"line_start":590,"line_end":590,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":287540,"byte_end":287604,"line_start":591,"line_end":591,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":287605,"byte_end":287618,"line_start":592,"line_end":592,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":287619,"byte_end":287622,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":287623,"byte_end":287630,"line_start":594,"line_end":594,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":287631,"byte_end":287687,"line_start":595,"line_end":595,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::multispace1;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":287688,"byte_end":287737,"line_start":596,"line_end":596,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(multispace1::<_, (_, ErrorKind)>(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":287738,"byte_end":287825,"line_start":597,"line_end":597,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(multispace1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::MultiSpace))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":287826,"byte_end":287929,"line_start":598,"line_end":598,"column_start":1,"column_end":104}},{"value":"/ assert_eq!(multispace1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":287930,"byte_end":288021,"line_start":599,"line_end":599,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288022,"byte_end":288029,"line_start":600,"line_end":600,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5940},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291257,"byte_end":291259,"line_start":692,"line_end":692,"column_start":9,"column_end":11},"name":"i8","qualname":"::character::streaming::i8","value":"pub fn i8<T, E: ParseError<T>>(T) -> IResult<T, i8, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288823,"byte_end":288871,"line_start":636,"line_end":636,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288880,"byte_end":288883,"line_start":637,"line_end":637,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288892,"byte_end":288949,"line_start":638,"line_end":638,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5946},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291260,"byte_end":291263,"line_start":692,"line_end":692,"column_start":12,"column_end":15},"name":"i16","qualname":"::character::streaming::i16","value":"pub fn i16<T, E: ParseError<T>>(T) -> IResult<T, i16, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288823,"byte_end":288871,"line_start":636,"line_end":636,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288880,"byte_end":288883,"line_start":637,"line_end":637,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288892,"byte_end":288949,"line_start":638,"line_end":638,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5952},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291264,"byte_end":291267,"line_start":692,"line_end":692,"column_start":16,"column_end":19},"name":"i32","qualname":"::character::streaming::i32","value":"pub fn i32<T, E: ParseError<T>>(T) -> IResult<T, i32, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288823,"byte_end":288871,"line_start":636,"line_end":636,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288880,"byte_end":288883,"line_start":637,"line_end":637,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288892,"byte_end":288949,"line_start":638,"line_end":638,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5958},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291268,"byte_end":291271,"line_start":692,"line_end":692,"column_start":20,"column_end":23},"name":"i64","qualname":"::character::streaming::i64","value":"pub fn i64<T, E: ParseError<T>>(T) -> IResult<T, i64, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288823,"byte_end":288871,"line_start":636,"line_end":636,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288880,"byte_end":288883,"line_start":637,"line_end":637,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288892,"byte_end":288949,"line_start":638,"line_end":638,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5964},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291272,"byte_end":291276,"line_start":692,"line_end":692,"column_start":24,"column_end":28},"name":"i128","qualname":"::character::streaming::i128","value":"pub fn i128<T, E: ParseError<T>>(T) -> IResult<T, i128, E> where\nT: InputIter + Slice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288823,"byte_end":288871,"line_start":636,"line_end":636,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288880,"byte_end":288883,"line_start":637,"line_end":637,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":288892,"byte_end":288949,"line_start":638,"line_end":638,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5970},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":292745,"byte_end":292747,"line_start":735,"line_end":735,"column_start":10,"column_end":12},"name":"u8","qualname":"::character::streaming::u8","value":"pub fn u8<T, E: ParseError<T>>(T) -> IResult<T, u8, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291356,"byte_end":291404,"line_start":698,"line_end":698,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291413,"byte_end":291416,"line_start":699,"line_end":699,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291425,"byte_end":291482,"line_start":700,"line_end":700,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5974},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":292748,"byte_end":292751,"line_start":735,"line_end":735,"column_start":13,"column_end":16},"name":"u16","qualname":"::character::streaming::u16","value":"pub fn u16<T, E: ParseError<T>>(T) -> IResult<T, u16, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291356,"byte_end":291404,"line_start":698,"line_end":698,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291413,"byte_end":291416,"line_start":699,"line_end":699,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291425,"byte_end":291482,"line_start":700,"line_end":700,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5978},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":292752,"byte_end":292755,"line_start":735,"line_end":735,"column_start":17,"column_end":20},"name":"u32","qualname":"::character::streaming::u32","value":"pub fn u32<T, E: ParseError<T>>(T) -> IResult<T, u32, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291356,"byte_end":291404,"line_start":698,"line_end":698,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291413,"byte_end":291416,"line_start":699,"line_end":699,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291425,"byte_end":291482,"line_start":700,"line_end":700,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5982},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":292756,"byte_end":292759,"line_start":735,"line_end":735,"column_start":21,"column_end":24},"name":"u64","qualname":"::character::streaming::u64","value":"pub fn u64<T, E: ParseError<T>>(T) -> IResult<T, u64, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291356,"byte_end":291404,"line_start":698,"line_end":698,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291413,"byte_end":291416,"line_start":699,"line_end":699,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291425,"byte_end":291482,"line_start":700,"line_end":700,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5986},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":292760,"byte_end":292764,"line_start":735,"line_end":735,"column_start":25,"column_end":29},"name":"u128","qualname":"::character::streaming::u128","value":"pub fn u128<T, E: ParseError<T>>(T) -> IResult<T, u128, E> where\nT: InputIter + Slice<RangeFrom<usize>> + InputLength,\n<T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291356,"byte_end":291404,"line_start":698,"line_end":698,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291413,"byte_end":291416,"line_start":699,"line_end":699,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/streaming.rs","byte_start":291425,"byte_end":291482,"line_start":700,"line_end":700,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":2212},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221599,"byte_end":221612,"line_start":21,"line_end":21,"column_start":8,"column_end":21},"name":"is_alphabetic","qualname":"::character::is_alphabetic","value":"pub fn is_alphabetic(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII alphabetic: A-Z, a-z","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII alphabetic: A-Z, a-z","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221368,"byte_end":221415,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221416,"byte_end":221419,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221420,"byte_end":221433,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221434,"byte_end":221437,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221438,"byte_end":221445,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_alphabetic;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221446,"byte_end":221486,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(is_alphabetic(b'9'), false);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221487,"byte_end":221530,"line_start":17,"line_end":17,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(is_alphabetic(b'a'), true);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221531,"byte_end":221573,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221574,"byte_end":221581,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221582,"byte_end":221591,"line_start":20,"line_end":20,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2213},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221904,"byte_end":221912,"line_start":35,"line_end":35,"column_start":8,"column_end":16},"name":"is_digit","qualname":"::character::is_digit","value":"pub fn is_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII digit: 0-9","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII digit: 0-9","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221698,"byte_end":221735,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221736,"byte_end":221739,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221740,"byte_end":221753,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221754,"byte_end":221757,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221758,"byte_end":221765,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_digit;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221766,"byte_end":221801,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(is_digit(b'a'), false);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221802,"byte_end":221840,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(is_digit(b'9'), true);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221841,"byte_end":221878,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221879,"byte_end":221886,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221887,"byte_end":221896,"line_start":34,"line_end":34,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2214},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222280,"byte_end":222292,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"is_hex_digit","qualname":"::character::is_hex_digit","value":"pub fn is_hex_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII hex digit: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII hex digit: 0-9, A-F, a-f","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221964,"byte_end":222015,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222016,"byte_end":222019,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222020,"byte_end":222033,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222034,"byte_end":222037,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222038,"byte_end":222045,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_hex_digit;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222046,"byte_end":222085,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_hex_digit(b'a'), true);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222086,"byte_end":222127,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_hex_digit(b'9'), true);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222128,"byte_end":222169,"line_start":46,"line_end":46,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_hex_digit(b'A'), true);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222170,"byte_end":222211,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_hex_digit(b'x'), false);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222212,"byte_end":222254,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222255,"byte_end":222262,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222263,"byte_end":222272,"line_start":50,"line_end":50,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2215},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222677,"byte_end":222689,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"is_oct_digit","qualname":"::character::is_oct_digit","value":"pub fn is_oct_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII octal digit: 0-7","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII octal digit: 0-7","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222410,"byte_end":222453,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222454,"byte_end":222457,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222458,"byte_end":222471,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222472,"byte_end":222475,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222476,"byte_end":222483,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_oct_digit;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222484,"byte_end":222523,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_oct_digit(b'a'), false);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222524,"byte_end":222566,"line_start":61,"line_end":61,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(is_oct_digit(b'9'), false);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222567,"byte_end":222609,"line_start":62,"line_end":62,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(is_oct_digit(b'6'), true);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222610,"byte_end":222651,"line_start":63,"line_end":63,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222652,"byte_end":222659,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222660,"byte_end":222669,"line_start":65,"line_end":65,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2216},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223075,"byte_end":223090,"line_start":82,"line_end":82,"column_start":8,"column_end":23},"name":"is_alphanumeric","qualname":"::character::is_alphanumeric","value":"pub fn is_alphanumeric(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222741,"byte_end":222795,"line_start":70,"line_end":70,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222796,"byte_end":222799,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222800,"byte_end":222813,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222814,"byte_end":222817,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222818,"byte_end":222825,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_alphanumeric;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222826,"byte_end":222868,"line_start":75,"line_end":75,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(is_alphanumeric(b'-'), false);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222869,"byte_end":222914,"line_start":76,"line_end":76,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(is_alphanumeric(b'a'), true);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222915,"byte_end":222959,"line_start":77,"line_end":77,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(is_alphanumeric(b'9'), true);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":222960,"byte_end":223004,"line_start":78,"line_end":78,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(is_alphanumeric(b'A'), true);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223005,"byte_end":223049,"line_start":79,"line_end":79,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223050,"byte_end":223057,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223058,"byte_end":223067,"line_start":81,"line_end":81,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2217},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223439,"byte_end":223447,"line_start":98,"line_end":98,"column_start":8,"column_end":16},"name":"is_space","qualname":"::character::is_space","value":"pub fn is_space(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII space or tab","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII space or tab","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223151,"byte_end":223190,"line_start":86,"line_end":86,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223191,"byte_end":223194,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223195,"byte_end":223208,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223209,"byte_end":223212,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223213,"byte_end":223220,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_space;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223221,"byte_end":223256,"line_start":91,"line_end":91,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(is_space(b'\\n'), false);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223257,"byte_end":223296,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_space(b'\\r'), false);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223297,"byte_end":223336,"line_start":93,"line_end":93,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_space(b' '), true);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223337,"byte_end":223374,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(is_space(b'\\t'), true);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223375,"byte_end":223413,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223414,"byte_end":223421,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223422,"byte_end":223431,"line_start":97,"line_end":97,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2218},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223798,"byte_end":223808,"line_start":114,"line_end":114,"column_start":8,"column_end":18},"name":"is_newline","qualname":"::character::is_newline","value":"pub fn is_newline(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII newline: \\n","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII newline: \\n","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223500,"byte_end":223538,"line_start":102,"line_end":102,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223539,"byte_end":223542,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223543,"byte_end":223556,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223557,"byte_end":223560,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223561,"byte_end":223568,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_newline;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223569,"byte_end":223606,"line_start":107,"line_end":107,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(is_newline(b'\\n'), true);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223607,"byte_end":223647,"line_start":108,"line_end":108,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(is_newline(b'\\r'), false);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223648,"byte_end":223689,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_newline(b' '), false);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223690,"byte_end":223730,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(is_newline(b'\\t'), false);","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223731,"byte_end":223772,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223773,"byte_end":223780,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":223781,"byte_end":223790,"line_start":113,"line_end":113,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":2220},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"number","qualname":"::number","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/mod.rs","parent":null,"children":[{"krate":0,"index":2221},{"krate":0,"index":2453},{"krate":0,"index":6052},{"krate":0,"index":6059},{"krate":0,"index":6061},{"krate":0,"index":6062},{"krate":0,"index":6064},{"krate":0,"index":6065},{"krate":0,"index":6067},{"krate":0,"index":6069}],"decl_id":null,"docs":" Parsers recognizing numbers\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15722,"byte_end":15734,"line_start":470,"line_end":470,"column_start":1,"column_end":13}},{"value":"/ Parsers recognizing numbers","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/mod.rs","byte_start":319969,"byte_end":320000,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":2221},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::number::complete","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","parent":null,"children":[{"krate":0,"index":2222},{"krate":0,"index":2225},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2232},{"krate":0,"index":2235},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2242},{"krate":0,"index":2245},{"krate":0,"index":2248},{"krate":0,"index":2251},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2258},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2266},{"krate":0,"index":2269},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2276},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2283},{"krate":0,"index":2286},{"krate":0,"index":2289},{"krate":0,"index":2292},{"krate":0,"index":2295},{"krate":0,"index":2298},{"krate":0,"index":2301},{"krate":0,"index":2304},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2312},{"krate":0,"index":2315},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2324},{"krate":0,"index":2327},{"krate":0,"index":2330},{"krate":0,"index":2333},{"krate":0,"index":2336},{"krate":0,"index":2339},{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":2348},{"krate":0,"index":2351},{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2360},{"krate":0,"index":2363},{"krate":0,"index":2366},{"krate":0,"index":2369},{"krate":0,"index":2372},{"krate":0,"index":2375},{"krate":0,"index":2378},{"krate":0,"index":2381},{"krate":0,"index":2384},{"krate":0,"index":2387},{"krate":0,"index":2390},{"krate":0,"index":2393},{"krate":0,"index":2396},{"krate":0,"index":2399},{"krate":0,"index":2402},{"krate":0,"index":2405},{"krate":0,"index":2408},{"krate":0,"index":2411},{"krate":0,"index":2414},{"krate":0,"index":2417},{"krate":0,"index":2420},{"krate":0,"index":2423},{"krate":0,"index":2426},{"krate":0,"index":2429},{"krate":0,"index":2432},{"krate":0,"index":2435},{"krate":0,"index":6016},{"krate":0,"index":2439},{"krate":0,"index":2445},{"krate":0,"index":2449}],"decl_id":null,"docs":" Parsers recognizing numbers, complete input version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing numbers, complete input version","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":320241,"byte_end":320296,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":2309},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321820,"byte_end":321825,"line_start":52,"line_end":52,"column_start":8,"column_end":13},"name":"be_u8","qualname":"::number::complete::be_u8","value":"pub fn be_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321334,"byte_end":321376,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321377,"byte_end":321380,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321381,"byte_end":321456,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321457,"byte_end":321468,"line_start":39,"line_end":39,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321469,"byte_end":321516,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321517,"byte_end":321545,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321546,"byte_end":321583,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321584,"byte_end":321587,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321588,"byte_end":321610,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/   be_u8(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321611,"byte_end":321625,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321626,"byte_end":321632,"line_start":46,"line_end":46,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321633,"byte_end":321636,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321637,"byte_end":321716,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321717,"byte_end":321794,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321795,"byte_end":321802,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":321803,"byte_end":321812,"line_start":51,"line_end":51,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322678,"byte_end":322684,"line_start":82,"line_end":82,"column_start":8,"column_end":14},"name":"be_u16","qualname":"::number::complete::be_u16","value":"pub fn be_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 2 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322173,"byte_end":322226,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322227,"byte_end":322230,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322231,"byte_end":322306,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322307,"byte_end":322318,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322319,"byte_end":322366,"line_start":70,"line_end":70,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322367,"byte_end":322395,"line_start":71,"line_end":71,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u16;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322396,"byte_end":322434,"line_start":72,"line_end":72,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322435,"byte_end":322438,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322439,"byte_end":322461,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/   be_u16(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322462,"byte_end":322477,"line_start":75,"line_end":75,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322478,"byte_end":322484,"line_start":76,"line_end":76,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322485,"byte_end":322488,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322489,"byte_end":322566,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322567,"byte_end":322652,"line_start":79,"line_end":79,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322653,"byte_end":322660,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":322661,"byte_end":322670,"line_start":81,"line_end":81,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2315},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323610,"byte_end":323616,"line_start":115,"line_end":115,"column_start":8,"column_end":14},"name":"be_u24","qualname":"::number::complete::be_u24","value":"pub fn be_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 3 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 3 byte integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323100,"byte_end":323152,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323153,"byte_end":323156,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323157,"byte_end":323232,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323233,"byte_end":323244,"line_start":102,"line_end":102,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323245,"byte_end":323292,"line_start":103,"line_end":103,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323293,"byte_end":323321,"line_start":104,"line_end":104,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u24;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323322,"byte_end":323360,"line_start":105,"line_end":105,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323361,"byte_end":323364,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323365,"byte_end":323387,"line_start":107,"line_end":107,"column_start":1,"column_end":23}},{"value":"/   be_u24(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323388,"byte_end":323403,"line_start":108,"line_end":108,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323404,"byte_end":323410,"line_start":109,"line_end":109,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323411,"byte_end":323414,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323415,"byte_end":323498,"line_start":111,"line_end":111,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323499,"byte_end":323584,"line_start":112,"line_end":112,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323585,"byte_end":323592,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":323593,"byte_end":323602,"line_start":114,"line_end":114,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2318},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324549,"byte_end":324555,"line_start":148,"line_end":148,"column_start":8,"column_end":14},"name":"be_u32","qualname":"::number::complete::be_u32","value":"pub fn be_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 4 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324032,"byte_end":324085,"line_start":132,"line_end":132,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324086,"byte_end":324089,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324090,"byte_end":324165,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324166,"byte_end":324177,"line_start":135,"line_end":135,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324178,"byte_end":324225,"line_start":136,"line_end":136,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324226,"byte_end":324254,"line_start":137,"line_end":137,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324255,"byte_end":324293,"line_start":138,"line_end":138,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324294,"byte_end":324297,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324298,"byte_end":324320,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"/   be_u32(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324321,"byte_end":324336,"line_start":141,"line_end":141,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324337,"byte_end":324343,"line_start":142,"line_end":142,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324344,"byte_end":324347,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324348,"byte_end":324437,"line_start":144,"line_end":144,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324438,"byte_end":324523,"line_start":145,"line_end":145,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324524,"byte_end":324531,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324532,"byte_end":324541,"line_start":147,"line_end":147,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2321},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325512,"byte_end":325518,"line_start":181,"line_end":181,"column_start":8,"column_end":14},"name":"be_u64","qualname":"::number::complete::be_u64","value":"pub fn be_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 8 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":324971,"byte_end":325024,"line_start":165,"line_end":165,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325025,"byte_end":325028,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325029,"byte_end":325104,"line_start":167,"line_end":167,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325105,"byte_end":325116,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325117,"byte_end":325164,"line_start":169,"line_end":169,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325165,"byte_end":325193,"line_start":170,"line_end":170,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325194,"byte_end":325232,"line_start":171,"line_end":171,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325233,"byte_end":325236,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325237,"byte_end":325259,"line_start":173,"line_end":173,"column_start":1,"column_end":23}},{"value":"/   be_u64(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325260,"byte_end":325275,"line_start":174,"line_end":174,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325276,"byte_end":325282,"line_start":175,"line_end":175,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325283,"byte_end":325286,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325287,"byte_end":325400,"line_start":177,"line_end":177,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325401,"byte_end":325486,"line_start":178,"line_end":178,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325487,"byte_end":325494,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325495,"byte_end":325504,"line_start":180,"line_end":180,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326546,"byte_end":326553,"line_start":215,"line_end":215,"column_start":8,"column_end":15},"name":"be_u128","qualname":"::number::complete::be_u128","value":"pub fn be_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 16 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325934,"byte_end":325988,"line_start":198,"line_end":198,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325989,"byte_end":325992,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":325993,"byte_end":326068,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326069,"byte_end":326080,"line_start":201,"line_end":201,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326081,"byte_end":326128,"line_start":202,"line_end":202,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326129,"byte_end":326157,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u128;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326158,"byte_end":326197,"line_start":204,"line_end":204,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326198,"byte_end":326201,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326202,"byte_end":326224,"line_start":206,"line_end":206,"column_start":1,"column_end":23}},{"value":"/   be_u128(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326225,"byte_end":326241,"line_start":207,"line_end":207,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326242,"byte_end":326248,"line_start":208,"line_end":208,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326249,"byte_end":326252,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326253,"byte_end":326414,"line_start":210,"line_end":210,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326415,"byte_end":326500,"line_start":211,"line_end":211,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326501,"byte_end":326508,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326509,"byte_end":326518,"line_start":213,"line_end":213,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326519,"byte_end":326538,"line_start":214,"line_end":214,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2327},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327456,"byte_end":327461,"line_start":248,"line_end":248,"column_start":8,"column_end":13},"name":"be_i8","qualname":"::number::complete::be_i8","value":"pub fn be_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":326973,"byte_end":327012,"line_start":232,"line_end":232,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327013,"byte_end":327016,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327017,"byte_end":327092,"line_start":234,"line_end":234,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327093,"byte_end":327104,"line_start":235,"line_end":235,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327105,"byte_end":327152,"line_start":236,"line_end":236,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327153,"byte_end":327181,"line_start":237,"line_end":237,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327182,"byte_end":327219,"line_start":238,"line_end":238,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327220,"byte_end":327223,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327224,"byte_end":327246,"line_start":240,"line_end":240,"column_start":1,"column_end":23}},{"value":"/   be_i8(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327247,"byte_end":327261,"line_start":241,"line_end":241,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327262,"byte_end":327268,"line_start":242,"line_end":242,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327269,"byte_end":327272,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327273,"byte_end":327352,"line_start":244,"line_end":244,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327353,"byte_end":327430,"line_start":245,"line_end":245,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327431,"byte_end":327438,"line_start":246,"line_end":246,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327439,"byte_end":327448,"line_start":247,"line_end":247,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2330},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328129,"byte_end":328135,"line_start":271,"line_end":271,"column_start":8,"column_end":14},"name":"be_i16","qualname":"::number::complete::be_i16","value":"pub fn be_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 2 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327626,"byte_end":327677,"line_start":255,"line_end":255,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327678,"byte_end":327681,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327682,"byte_end":327757,"line_start":257,"line_end":257,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327758,"byte_end":327769,"line_start":258,"line_end":258,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327770,"byte_end":327817,"line_start":259,"line_end":259,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327818,"byte_end":327846,"line_start":260,"line_end":260,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i16;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327847,"byte_end":327885,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327886,"byte_end":327889,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327890,"byte_end":327912,"line_start":263,"line_end":263,"column_start":1,"column_end":23}},{"value":"/   be_i16(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327913,"byte_end":327928,"line_start":264,"line_end":264,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327929,"byte_end":327935,"line_start":265,"line_end":265,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327936,"byte_end":327939,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":327940,"byte_end":328017,"line_start":267,"line_end":267,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328018,"byte_end":328103,"line_start":268,"line_end":268,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328104,"byte_end":328111,"line_start":269,"line_end":269,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328112,"byte_end":328121,"line_start":270,"line_end":270,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2333},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328812,"byte_end":328818,"line_start":294,"line_end":294,"column_start":8,"column_end":14},"name":"be_i24","qualname":"::number::complete::be_i24","value":"pub fn be_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 3 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328303,"byte_end":328354,"line_start":278,"line_end":278,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328355,"byte_end":328358,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328359,"byte_end":328434,"line_start":280,"line_end":280,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328435,"byte_end":328446,"line_start":281,"line_end":281,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328447,"byte_end":328494,"line_start":282,"line_end":282,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328495,"byte_end":328523,"line_start":283,"line_end":283,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i24;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328524,"byte_end":328562,"line_start":284,"line_end":284,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328563,"byte_end":328566,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328567,"byte_end":328589,"line_start":286,"line_end":286,"column_start":1,"column_end":23}},{"value":"/   be_i24(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328590,"byte_end":328605,"line_start":287,"line_end":287,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328606,"byte_end":328612,"line_start":288,"line_end":288,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328613,"byte_end":328616,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328617,"byte_end":328700,"line_start":290,"line_end":290,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328701,"byte_end":328786,"line_start":291,"line_end":291,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328787,"byte_end":328794,"line_start":292,"line_end":292,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":328795,"byte_end":328804,"line_start":293,"line_end":293,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2336},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329651,"byte_end":329657,"line_start":322,"line_end":322,"column_start":8,"column_end":14},"name":"be_i32","qualname":"::number::complete::be_i32","value":"pub fn be_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 4 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329136,"byte_end":329187,"line_start":306,"line_end":306,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329188,"byte_end":329191,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Teturns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329192,"byte_end":329267,"line_start":308,"line_end":308,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329268,"byte_end":329279,"line_start":309,"line_end":309,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329280,"byte_end":329327,"line_start":310,"line_end":310,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329328,"byte_end":329356,"line_start":311,"line_end":311,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329357,"byte_end":329395,"line_start":312,"line_end":312,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329396,"byte_end":329399,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329400,"byte_end":329422,"line_start":314,"line_end":314,"column_start":1,"column_end":23}},{"value":"/   be_i32(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329423,"byte_end":329438,"line_start":315,"line_end":315,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329439,"byte_end":329445,"line_start":316,"line_end":316,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329446,"byte_end":329449,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329450,"byte_end":329539,"line_start":318,"line_end":318,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329540,"byte_end":329625,"line_start":319,"line_end":319,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329626,"byte_end":329633,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329634,"byte_end":329643,"line_start":321,"line_end":321,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2339},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330364,"byte_end":330370,"line_start":345,"line_end":345,"column_start":8,"column_end":14},"name":"be_i64","qualname":"::number::complete::be_i64","value":"pub fn be_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 8 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329825,"byte_end":329876,"line_start":329,"line_end":329,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329877,"byte_end":329880,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329881,"byte_end":329956,"line_start":331,"line_end":331,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329957,"byte_end":329968,"line_start":332,"line_end":332,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":329969,"byte_end":330016,"line_start":333,"line_end":333,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330017,"byte_end":330045,"line_start":334,"line_end":334,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330046,"byte_end":330084,"line_start":335,"line_end":335,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330085,"byte_end":330088,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330089,"byte_end":330111,"line_start":337,"line_end":337,"column_start":1,"column_end":23}},{"value":"/   be_i64(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330112,"byte_end":330127,"line_start":338,"line_end":338,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330128,"byte_end":330134,"line_start":339,"line_end":339,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330135,"byte_end":330138,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330139,"byte_end":330252,"line_start":341,"line_end":341,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330253,"byte_end":330338,"line_start":342,"line_end":342,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330339,"byte_end":330346,"line_start":343,"line_end":343,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330347,"byte_end":330356,"line_start":344,"line_end":344,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2342},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331148,"byte_end":331155,"line_start":369,"line_end":369,"column_start":8,"column_end":15},"name":"be_i128","qualname":"::number::complete::be_i128","value":"pub fn be_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 16 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330538,"byte_end":330590,"line_start":352,"line_end":352,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330591,"byte_end":330594,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330595,"byte_end":330670,"line_start":354,"line_end":354,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330671,"byte_end":330682,"line_start":355,"line_end":355,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330683,"byte_end":330730,"line_start":356,"line_end":356,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330731,"byte_end":330759,"line_start":357,"line_end":357,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i128;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330760,"byte_end":330799,"line_start":358,"line_end":358,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330800,"byte_end":330803,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330804,"byte_end":330826,"line_start":360,"line_end":360,"column_start":1,"column_end":23}},{"value":"/   be_i128(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330827,"byte_end":330843,"line_start":361,"line_end":361,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330844,"byte_end":330850,"line_start":362,"line_end":362,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330851,"byte_end":330854,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":330855,"byte_end":331016,"line_start":364,"line_end":364,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331017,"byte_end":331102,"line_start":365,"line_end":365,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331103,"byte_end":331110,"line_start":366,"line_end":366,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331111,"byte_end":331120,"line_start":367,"line_end":367,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331121,"byte_end":331140,"line_start":368,"line_end":368,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2345},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331812,"byte_end":331817,"line_start":392,"line_end":392,"column_start":8,"column_end":13},"name":"le_u8","qualname":"::number::complete::le_u8","value":"pub fn le_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331326,"byte_end":331368,"line_start":376,"line_end":376,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331369,"byte_end":331372,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331373,"byte_end":331448,"line_start":378,"line_end":378,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331449,"byte_end":331460,"line_start":379,"line_end":379,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331461,"byte_end":331508,"line_start":380,"line_end":380,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331509,"byte_end":331537,"line_start":381,"line_end":381,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331538,"byte_end":331575,"line_start":382,"line_end":382,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331576,"byte_end":331579,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331580,"byte_end":331602,"line_start":384,"line_end":384,"column_start":1,"column_end":23}},{"value":"/   le_u8(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331603,"byte_end":331617,"line_start":385,"line_end":385,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331618,"byte_end":331624,"line_start":386,"line_end":386,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331625,"byte_end":331628,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331629,"byte_end":331708,"line_start":388,"line_end":388,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331709,"byte_end":331786,"line_start":389,"line_end":389,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331787,"byte_end":331794,"line_start":390,"line_end":390,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":331795,"byte_end":331804,"line_start":391,"line_end":391,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2348},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332673,"byte_end":332679,"line_start":422,"line_end":422,"column_start":8,"column_end":14},"name":"le_u16","qualname":"::number::complete::le_u16","value":"pub fn le_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 2 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332165,"byte_end":332221,"line_start":406,"line_end":406,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332222,"byte_end":332225,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332226,"byte_end":332301,"line_start":408,"line_end":408,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332302,"byte_end":332313,"line_start":409,"line_end":409,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332314,"byte_end":332361,"line_start":410,"line_end":410,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332362,"byte_end":332390,"line_start":411,"line_end":411,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u16;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332391,"byte_end":332429,"line_start":412,"line_end":412,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332430,"byte_end":332433,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332434,"byte_end":332456,"line_start":414,"line_end":414,"column_start":1,"column_end":23}},{"value":"/   le_u16(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332457,"byte_end":332472,"line_start":415,"line_end":415,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332473,"byte_end":332479,"line_start":416,"line_end":416,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332480,"byte_end":332483,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332484,"byte_end":332561,"line_start":418,"line_end":418,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332562,"byte_end":332647,"line_start":419,"line_end":419,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332648,"byte_end":332655,"line_start":420,"line_end":420,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":332656,"byte_end":332665,"line_start":421,"line_end":421,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2351},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333621,"byte_end":333627,"line_start":455,"line_end":455,"column_start":8,"column_end":14},"name":"le_u24","qualname":"::number::complete::le_u24","value":"pub fn le_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 3 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 3 byte integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333108,"byte_end":333163,"line_start":439,"line_end":439,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333164,"byte_end":333167,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333168,"byte_end":333243,"line_start":441,"line_end":441,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333244,"byte_end":333255,"line_start":442,"line_end":442,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333256,"byte_end":333303,"line_start":443,"line_end":443,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333304,"byte_end":333332,"line_start":444,"line_end":444,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u24;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333333,"byte_end":333371,"line_start":445,"line_end":445,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333372,"byte_end":333375,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333376,"byte_end":333398,"line_start":447,"line_end":447,"column_start":1,"column_end":23}},{"value":"/   le_u24(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333399,"byte_end":333414,"line_start":448,"line_end":448,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333415,"byte_end":333421,"line_start":449,"line_end":449,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333422,"byte_end":333425,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333426,"byte_end":333509,"line_start":451,"line_end":451,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333510,"byte_end":333595,"line_start":452,"line_end":452,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333596,"byte_end":333603,"line_start":453,"line_end":453,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":333604,"byte_end":333613,"line_start":454,"line_end":454,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2354},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334576,"byte_end":334582,"line_start":488,"line_end":488,"column_start":8,"column_end":14},"name":"le_u32","qualname":"::number::complete::le_u32","value":"pub fn le_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 4 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334056,"byte_end":334112,"line_start":472,"line_end":472,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334113,"byte_end":334116,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334117,"byte_end":334192,"line_start":474,"line_end":474,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334193,"byte_end":334204,"line_start":475,"line_end":475,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334205,"byte_end":334252,"line_start":476,"line_end":476,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334253,"byte_end":334281,"line_start":477,"line_end":477,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334282,"byte_end":334320,"line_start":478,"line_end":478,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334321,"byte_end":334324,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334325,"byte_end":334347,"line_start":480,"line_end":480,"column_start":1,"column_end":23}},{"value":"/   le_u32(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334348,"byte_end":334363,"line_start":481,"line_end":481,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334364,"byte_end":334370,"line_start":482,"line_end":482,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334371,"byte_end":334374,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334375,"byte_end":334464,"line_start":484,"line_end":484,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334465,"byte_end":334550,"line_start":485,"line_end":485,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334551,"byte_end":334558,"line_start":486,"line_end":486,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":334559,"byte_end":334568,"line_start":487,"line_end":487,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2357},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335555,"byte_end":335561,"line_start":521,"line_end":521,"column_start":8,"column_end":14},"name":"le_u64","qualname":"::number::complete::le_u64","value":"pub fn le_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 8 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335011,"byte_end":335067,"line_start":505,"line_end":505,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335068,"byte_end":335071,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335072,"byte_end":335147,"line_start":507,"line_end":507,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335148,"byte_end":335159,"line_start":508,"line_end":508,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335160,"byte_end":335207,"line_start":509,"line_end":509,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335208,"byte_end":335236,"line_start":510,"line_end":510,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335237,"byte_end":335275,"line_start":511,"line_end":511,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335276,"byte_end":335279,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335280,"byte_end":335302,"line_start":513,"line_end":513,"column_start":1,"column_end":23}},{"value":"/   le_u64(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335303,"byte_end":335318,"line_start":514,"line_end":514,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335319,"byte_end":335325,"line_start":515,"line_end":515,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335326,"byte_end":335329,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335330,"byte_end":335443,"line_start":517,"line_end":517,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335444,"byte_end":335529,"line_start":518,"line_end":518,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335530,"byte_end":335537,"line_start":519,"line_end":519,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335538,"byte_end":335547,"line_start":520,"line_end":520,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2360},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336605,"byte_end":336612,"line_start":555,"line_end":555,"column_start":8,"column_end":15},"name":"le_u128","qualname":"::number::complete::le_u128","value":"pub fn le_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 16 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":335990,"byte_end":336047,"line_start":538,"line_end":538,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336048,"byte_end":336051,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336052,"byte_end":336127,"line_start":540,"line_end":540,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336128,"byte_end":336139,"line_start":541,"line_end":541,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336140,"byte_end":336187,"line_start":542,"line_end":542,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336188,"byte_end":336216,"line_start":543,"line_end":543,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u128;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336217,"byte_end":336256,"line_start":544,"line_end":544,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336257,"byte_end":336260,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336261,"byte_end":336283,"line_start":546,"line_end":546,"column_start":1,"column_end":23}},{"value":"/   le_u128(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336284,"byte_end":336300,"line_start":547,"line_end":547,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336301,"byte_end":336307,"line_start":548,"line_end":548,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336308,"byte_end":336311,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336312,"byte_end":336473,"line_start":550,"line_end":550,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336474,"byte_end":336559,"line_start":551,"line_end":551,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336560,"byte_end":336567,"line_start":552,"line_end":552,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336568,"byte_end":336577,"line_start":553,"line_end":553,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":336578,"byte_end":336597,"line_start":554,"line_end":554,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337528,"byte_end":337533,"line_start":588,"line_end":588,"column_start":8,"column_end":13},"name":"le_i8","qualname":"::number::complete::le_i8","value":"pub fn le_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337045,"byte_end":337084,"line_start":572,"line_end":572,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337085,"byte_end":337088,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337089,"byte_end":337164,"line_start":574,"line_end":574,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337165,"byte_end":337176,"line_start":575,"line_end":575,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337177,"byte_end":337224,"line_start":576,"line_end":576,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337225,"byte_end":337253,"line_start":577,"line_end":577,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337254,"byte_end":337291,"line_start":578,"line_end":578,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337292,"byte_end":337295,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337296,"byte_end":337318,"line_start":580,"line_end":580,"column_start":1,"column_end":23}},{"value":"/   le_i8(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337319,"byte_end":337333,"line_start":581,"line_end":581,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337334,"byte_end":337340,"line_start":582,"line_end":582,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337341,"byte_end":337344,"line_start":583,"line_end":583,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337345,"byte_end":337424,"line_start":584,"line_end":584,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337425,"byte_end":337502,"line_start":585,"line_end":585,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337503,"byte_end":337510,"line_start":586,"line_end":586,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337511,"byte_end":337520,"line_start":587,"line_end":587,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2366},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338204,"byte_end":338210,"line_start":611,"line_end":611,"column_start":8,"column_end":14},"name":"le_i16","qualname":"::number::complete::le_i16","value":"pub fn le_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 2 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337698,"byte_end":337752,"line_start":595,"line_end":595,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337753,"byte_end":337756,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337757,"byte_end":337832,"line_start":597,"line_end":597,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337833,"byte_end":337844,"line_start":598,"line_end":598,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337845,"byte_end":337892,"line_start":599,"line_end":599,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337893,"byte_end":337921,"line_start":600,"line_end":600,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i16;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337922,"byte_end":337960,"line_start":601,"line_end":601,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337961,"byte_end":337964,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337965,"byte_end":337987,"line_start":603,"line_end":603,"column_start":1,"column_end":23}},{"value":"/   le_i16(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":337988,"byte_end":338003,"line_start":604,"line_end":604,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338004,"byte_end":338010,"line_start":605,"line_end":605,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338011,"byte_end":338014,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338015,"byte_end":338092,"line_start":607,"line_end":607,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338093,"byte_end":338178,"line_start":608,"line_end":608,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338179,"byte_end":338186,"line_start":609,"line_end":609,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338187,"byte_end":338196,"line_start":610,"line_end":610,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2369},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338890,"byte_end":338896,"line_start":634,"line_end":634,"column_start":8,"column_end":14},"name":"le_i24","qualname":"::number::complete::le_i24","value":"pub fn le_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 3 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338378,"byte_end":338432,"line_start":618,"line_end":618,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338433,"byte_end":338436,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338437,"byte_end":338512,"line_start":620,"line_end":620,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338513,"byte_end":338524,"line_start":621,"line_end":621,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338525,"byte_end":338572,"line_start":622,"line_end":622,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338573,"byte_end":338601,"line_start":623,"line_end":623,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i24;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338602,"byte_end":338640,"line_start":624,"line_end":624,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338641,"byte_end":338644,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338645,"byte_end":338667,"line_start":626,"line_end":626,"column_start":1,"column_end":23}},{"value":"/   le_i24(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338668,"byte_end":338683,"line_start":627,"line_end":627,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338684,"byte_end":338690,"line_start":628,"line_end":628,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338691,"byte_end":338694,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338695,"byte_end":338778,"line_start":630,"line_end":630,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338779,"byte_end":338864,"line_start":631,"line_end":631,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338865,"byte_end":338872,"line_start":632,"line_end":632,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":338873,"byte_end":338882,"line_start":633,"line_end":633,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2372},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339732,"byte_end":339738,"line_start":662,"line_end":662,"column_start":8,"column_end":14},"name":"le_i32","qualname":"::number::complete::le_i32","value":"pub fn le_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 4 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339214,"byte_end":339268,"line_start":646,"line_end":646,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339269,"byte_end":339272,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339273,"byte_end":339348,"line_start":648,"line_end":648,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339349,"byte_end":339360,"line_start":649,"line_end":649,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339361,"byte_end":339408,"line_start":650,"line_end":650,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339409,"byte_end":339437,"line_start":651,"line_end":651,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339438,"byte_end":339476,"line_start":652,"line_end":652,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339477,"byte_end":339480,"line_start":653,"line_end":653,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339481,"byte_end":339503,"line_start":654,"line_end":654,"column_start":1,"column_end":23}},{"value":"/   le_i32(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339504,"byte_end":339519,"line_start":655,"line_end":655,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339520,"byte_end":339526,"line_start":656,"line_end":656,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339527,"byte_end":339530,"line_start":657,"line_end":657,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339531,"byte_end":339620,"line_start":658,"line_end":658,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339621,"byte_end":339706,"line_start":659,"line_end":659,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339707,"byte_end":339714,"line_start":660,"line_end":660,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339715,"byte_end":339724,"line_start":661,"line_end":661,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2375},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340448,"byte_end":340454,"line_start":685,"line_end":685,"column_start":8,"column_end":14},"name":"le_i64","qualname":"::number::complete::le_i64","value":"pub fn le_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 8 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339906,"byte_end":339960,"line_start":669,"line_end":669,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339961,"byte_end":339964,"line_start":670,"line_end":670,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":339965,"byte_end":340040,"line_start":671,"line_end":671,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340041,"byte_end":340052,"line_start":672,"line_end":672,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340053,"byte_end":340100,"line_start":673,"line_end":673,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340101,"byte_end":340129,"line_start":674,"line_end":674,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340130,"byte_end":340168,"line_start":675,"line_end":675,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340169,"byte_end":340172,"line_start":676,"line_end":676,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340173,"byte_end":340195,"line_start":677,"line_end":677,"column_start":1,"column_end":23}},{"value":"/   le_i64(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340196,"byte_end":340211,"line_start":678,"line_end":678,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340212,"byte_end":340218,"line_start":679,"line_end":679,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340219,"byte_end":340222,"line_start":680,"line_end":680,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340223,"byte_end":340336,"line_start":681,"line_end":681,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340337,"byte_end":340422,"line_start":682,"line_end":682,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340423,"byte_end":340430,"line_start":683,"line_end":683,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340431,"byte_end":340440,"line_start":684,"line_end":684,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2378},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341235,"byte_end":341242,"line_start":709,"line_end":709,"column_start":8,"column_end":15},"name":"le_i128","qualname":"::number::complete::le_i128","value":"pub fn le_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 16 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340622,"byte_end":340677,"line_start":692,"line_end":692,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340678,"byte_end":340681,"line_start":693,"line_end":693,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340682,"byte_end":340757,"line_start":694,"line_end":694,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340758,"byte_end":340769,"line_start":695,"line_end":695,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340770,"byte_end":340817,"line_start":696,"line_end":696,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340818,"byte_end":340846,"line_start":697,"line_end":697,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i128;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340847,"byte_end":340886,"line_start":698,"line_end":698,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340887,"byte_end":340890,"line_start":699,"line_end":699,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340891,"byte_end":340913,"line_start":700,"line_end":700,"column_start":1,"column_end":23}},{"value":"/   le_i128(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340914,"byte_end":340930,"line_start":701,"line_end":701,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340931,"byte_end":340937,"line_start":702,"line_end":702,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340938,"byte_end":340941,"line_start":703,"line_end":703,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":340942,"byte_end":341103,"line_start":704,"line_end":704,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341104,"byte_end":341189,"line_start":705,"line_end":705,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341190,"byte_end":341197,"line_start":706,"line_end":706,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341198,"byte_end":341207,"line_start":707,"line_end":707,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341208,"byte_end":341227,"line_start":708,"line_end":708,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2381},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341950,"byte_end":341952,"line_start":733,"line_end":733,"column_start":8,"column_end":10},"name":"u8","qualname":"::number::complete::u8","value":"pub fn u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341413,"byte_end":341454,"line_start":716,"line_end":716,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341455,"byte_end":341458,"line_start":717,"line_end":717,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341459,"byte_end":341517,"line_start":718,"line_end":718,"column_start":1,"column_end":59}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341518,"byte_end":341592,"line_start":719,"line_end":719,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341593,"byte_end":341604,"line_start":720,"line_end":720,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341605,"byte_end":341652,"line_start":721,"line_end":721,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341653,"byte_end":341681,"line_start":722,"line_end":722,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341682,"byte_end":341716,"line_start":723,"line_end":723,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341717,"byte_end":341720,"line_start":724,"line_end":724,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341721,"byte_end":341743,"line_start":725,"line_end":725,"column_start":1,"column_end":23}},{"value":"/   u8(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341744,"byte_end":341755,"line_start":726,"line_end":726,"column_start":1,"column_end":12}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341756,"byte_end":341762,"line_start":727,"line_end":727,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341763,"byte_end":341766,"line_start":728,"line_end":728,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341767,"byte_end":341846,"line_start":729,"line_end":729,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341847,"byte_end":341924,"line_start":730,"line_end":730,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341925,"byte_end":341932,"line_start":731,"line_end":731,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":341933,"byte_end":341942,"line_start":732,"line_end":732,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2384},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":343243,"byte_end":343246,"line_start":773,"line_end":773,"column_start":8,"column_end":11},"name":"u16","qualname":"::number::complete::u16","value":"pub fn u16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 2 bytes integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 2 bytes integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342300,"byte_end":342342,"line_start":747,"line_end":747,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342343,"byte_end":342346,"line_start":748,"line_end":748,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u16 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342347,"byte_end":342434,"line_start":749,"line_end":749,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u16 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342435,"byte_end":342520,"line_start":750,"line_end":750,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342521,"byte_end":342595,"line_start":751,"line_end":751,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342596,"byte_end":342599,"line_start":752,"line_end":752,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342600,"byte_end":342611,"line_start":753,"line_end":753,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342612,"byte_end":342659,"line_start":754,"line_end":754,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342660,"byte_end":342688,"line_start":755,"line_end":755,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u16;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342689,"byte_end":342724,"line_start":756,"line_end":756,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342725,"byte_end":342728,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ let be_u16 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342729,"byte_end":342751,"line_start":758,"line_end":758,"column_start":1,"column_end":23}},{"value":"/   u16(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342752,"byte_end":342794,"line_start":759,"line_end":759,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342795,"byte_end":342801,"line_start":760,"line_end":760,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342802,"byte_end":342805,"line_start":761,"line_end":761,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342806,"byte_end":342883,"line_start":762,"line_end":762,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_u16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342884,"byte_end":342969,"line_start":763,"line_end":763,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342970,"byte_end":342973,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ let le_u16 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342974,"byte_end":342996,"line_start":765,"line_end":765,"column_start":1,"column_end":23}},{"value":"/   u16(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":342997,"byte_end":343042,"line_start":766,"line_end":766,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":343043,"byte_end":343049,"line_start":767,"line_end":767,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":343050,"byte_end":343053,"line_start":768,"line_end":768,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":343054,"byte_end":343131,"line_start":769,"line_end":769,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_u16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":343132,"byte_end":343217,"line_start":770,"line_end":770,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":343218,"byte_end":343225,"line_start":771,"line_end":771,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":343226,"byte_end":343235,"line_start":772,"line_end":772,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2387},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344647,"byte_end":344650,"line_start":812,"line_end":812,"column_start":8,"column_end":11},"name":"u24","qualname":"::number::complete::u24","value":"pub fn u24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 3 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":343697,"byte_end":343738,"line_start":787,"line_end":787,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":343739,"byte_end":343742,"line_start":788,"line_end":788,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u24 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":343743,"byte_end":343830,"line_start":789,"line_end":789,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u24 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":343831,"byte_end":343916,"line_start":790,"line_end":790,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":343917,"byte_end":343991,"line_start":791,"line_end":791,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":343992,"byte_end":344003,"line_start":792,"line_end":792,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344004,"byte_end":344051,"line_start":793,"line_end":793,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344052,"byte_end":344080,"line_start":794,"line_end":794,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u24;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344081,"byte_end":344116,"line_start":795,"line_end":795,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344117,"byte_end":344120,"line_start":796,"line_end":796,"column_start":1,"column_end":4}},{"value":"/ let be_u24 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344121,"byte_end":344143,"line_start":797,"line_end":797,"column_start":1,"column_end":23}},{"value":"/   u24(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344144,"byte_end":344186,"line_start":798,"line_end":798,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344187,"byte_end":344193,"line_start":799,"line_end":799,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344194,"byte_end":344197,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344198,"byte_end":344281,"line_start":801,"line_end":801,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_u24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344282,"byte_end":344367,"line_start":802,"line_end":802,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344368,"byte_end":344371,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/ let le_u24 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344372,"byte_end":344394,"line_start":804,"line_end":804,"column_start":1,"column_end":23}},{"value":"/   u24(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344395,"byte_end":344440,"line_start":805,"line_end":805,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344441,"byte_end":344447,"line_start":806,"line_end":806,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344448,"byte_end":344451,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344452,"byte_end":344535,"line_start":808,"line_end":808,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_u24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344536,"byte_end":344621,"line_start":809,"line_end":809,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344622,"byte_end":344629,"line_start":810,"line_end":810,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":344630,"byte_end":344639,"line_start":811,"line_end":811,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2390},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":346063,"byte_end":346066,"line_start":851,"line_end":851,"column_start":8,"column_end":11},"name":"u32","qualname":"::number::complete::u32","value":"pub fn u32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 4 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345101,"byte_end":345142,"line_start":826,"line_end":826,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345143,"byte_end":345146,"line_start":827,"line_end":827,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u32 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345147,"byte_end":345234,"line_start":828,"line_end":828,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u32 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345235,"byte_end":345320,"line_start":829,"line_end":829,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345321,"byte_end":345395,"line_start":830,"line_end":830,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345396,"byte_end":345407,"line_start":831,"line_end":831,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345408,"byte_end":345455,"line_start":832,"line_end":832,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345456,"byte_end":345484,"line_start":833,"line_end":833,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345485,"byte_end":345520,"line_start":834,"line_end":834,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345521,"byte_end":345524,"line_start":835,"line_end":835,"column_start":1,"column_end":4}},{"value":"/ let be_u32 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345525,"byte_end":345547,"line_start":836,"line_end":836,"column_start":1,"column_end":23}},{"value":"/   u32(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345548,"byte_end":345590,"line_start":837,"line_end":837,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345591,"byte_end":345597,"line_start":838,"line_end":838,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345598,"byte_end":345601,"line_start":839,"line_end":839,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345602,"byte_end":345691,"line_start":840,"line_end":840,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_u32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345692,"byte_end":345777,"line_start":841,"line_end":841,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345778,"byte_end":345781,"line_start":842,"line_end":842,"column_start":1,"column_end":4}},{"value":"/ let le_u32 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345782,"byte_end":345804,"line_start":843,"line_end":843,"column_start":1,"column_end":23}},{"value":"/   u32(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345805,"byte_end":345850,"line_start":844,"line_end":844,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345851,"byte_end":345857,"line_start":845,"line_end":845,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345858,"byte_end":345861,"line_start":846,"line_end":846,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345862,"byte_end":345951,"line_start":847,"line_end":847,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_u32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":345952,"byte_end":346037,"line_start":848,"line_end":848,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":346038,"byte_end":346045,"line_start":849,"line_end":849,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":346046,"byte_end":346055,"line_start":850,"line_end":850,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2393},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":347527,"byte_end":347530,"line_start":890,"line_end":890,"column_start":8,"column_end":11},"name":"u64","qualname":"::number::complete::u64","value":"pub fn u64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 8 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":346517,"byte_end":346558,"line_start":865,"line_end":865,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":346559,"byte_end":346562,"line_start":866,"line_end":866,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u64 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":346563,"byte_end":346650,"line_start":867,"line_end":867,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u64 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":346651,"byte_end":346736,"line_start":868,"line_end":868,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":346737,"byte_end":346811,"line_start":869,"line_end":869,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":346812,"byte_end":346823,"line_start":870,"line_end":870,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":346824,"byte_end":346871,"line_start":871,"line_end":871,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":346872,"byte_end":346900,"line_start":872,"line_end":872,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":346901,"byte_end":346936,"line_start":873,"line_end":873,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":346937,"byte_end":346940,"line_start":874,"line_end":874,"column_start":1,"column_end":4}},{"value":"/ let be_u64 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":346941,"byte_end":346963,"line_start":875,"line_end":875,"column_start":1,"column_end":23}},{"value":"/   u64(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":346964,"byte_end":347006,"line_start":876,"line_end":876,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":347007,"byte_end":347013,"line_start":877,"line_end":877,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":347014,"byte_end":347017,"line_start":878,"line_end":878,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":347018,"byte_end":347131,"line_start":879,"line_end":879,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_u64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":347132,"byte_end":347217,"line_start":880,"line_end":880,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":347218,"byte_end":347221,"line_start":881,"line_end":881,"column_start":1,"column_end":4}},{"value":"/ let le_u64 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":347222,"byte_end":347244,"line_start":882,"line_end":882,"column_start":1,"column_end":23}},{"value":"/   u64(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":347245,"byte_end":347290,"line_start":883,"line_end":883,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":347291,"byte_end":347297,"line_start":884,"line_end":884,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":347298,"byte_end":347301,"line_start":885,"line_end":885,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":347302,"byte_end":347415,"line_start":886,"line_end":886,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_u64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":347416,"byte_end":347501,"line_start":887,"line_end":887,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":347502,"byte_end":347509,"line_start":888,"line_end":888,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":347510,"byte_end":347519,"line_start":889,"line_end":889,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2396},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349119,"byte_end":349123,"line_start":930,"line_end":930,"column_start":8,"column_end":12},"name":"u128","qualname":"::number::complete::u128","value":"pub fn u128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 16 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":347981,"byte_end":348023,"line_start":904,"line_end":904,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348024,"byte_end":348027,"line_start":905,"line_end":905,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u128 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348028,"byte_end":348116,"line_start":906,"line_end":906,"column_start":1,"column_end":89}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u128 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348117,"byte_end":348203,"line_start":907,"line_end":907,"column_start":1,"column_end":87}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348204,"byte_end":348278,"line_start":908,"line_end":908,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348279,"byte_end":348290,"line_start":909,"line_end":909,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348291,"byte_end":348338,"line_start":910,"line_end":910,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348339,"byte_end":348367,"line_start":911,"line_end":911,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u128;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348368,"byte_end":348404,"line_start":912,"line_end":912,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348405,"byte_end":348408,"line_start":913,"line_end":913,"column_start":1,"column_end":4}},{"value":"/ let be_u128 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348409,"byte_end":348432,"line_start":914,"line_end":914,"column_start":1,"column_end":24}},{"value":"/   u128(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348433,"byte_end":348476,"line_start":915,"line_end":915,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348477,"byte_end":348483,"line_start":916,"line_end":916,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348484,"byte_end":348487,"line_start":917,"line_end":917,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348488,"byte_end":348650,"line_start":918,"line_end":918,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_u128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348651,"byte_end":348737,"line_start":919,"line_end":919,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348738,"byte_end":348741,"line_start":920,"line_end":920,"column_start":1,"column_end":4}},{"value":"/ let le_u128 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348742,"byte_end":348765,"line_start":921,"line_end":921,"column_start":1,"column_end":24}},{"value":"/   u128(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348766,"byte_end":348812,"line_start":922,"line_end":922,"column_start":1,"column_end":47}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348813,"byte_end":348819,"line_start":923,"line_end":923,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348820,"byte_end":348823,"line_start":924,"line_end":924,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348824,"byte_end":348986,"line_start":925,"line_end":925,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_u128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":348987,"byte_end":349073,"line_start":926,"line_end":926,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349074,"byte_end":349081,"line_start":927,"line_end":927,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349082,"byte_end":349091,"line_start":928,"line_end":928,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349092,"byte_end":349111,"line_start":929,"line_end":929,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2399},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350113,"byte_end":350115,"line_start":961,"line_end":961,"column_start":8,"column_end":10},"name":"i8","qualname":"::number::complete::i8","value":"pub fn i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349579,"byte_end":349617,"line_start":944,"line_end":944,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349618,"byte_end":349621,"line_start":945,"line_end":945,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349622,"byte_end":349680,"line_start":946,"line_end":946,"column_start":1,"column_end":59}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349681,"byte_end":349755,"line_start":947,"line_end":947,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349756,"byte_end":349767,"line_start":948,"line_end":948,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349768,"byte_end":349815,"line_start":949,"line_end":949,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349816,"byte_end":349844,"line_start":950,"line_end":950,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349845,"byte_end":349879,"line_start":951,"line_end":951,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349880,"byte_end":349883,"line_start":952,"line_end":952,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349884,"byte_end":349906,"line_start":953,"line_end":953,"column_start":1,"column_end":23}},{"value":"/   i8(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349907,"byte_end":349918,"line_start":954,"line_end":954,"column_start":1,"column_end":12}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349919,"byte_end":349925,"line_start":955,"line_end":955,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349926,"byte_end":349929,"line_start":956,"line_end":956,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":349930,"byte_end":350009,"line_start":957,"line_end":957,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350010,"byte_end":350087,"line_start":958,"line_end":958,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350088,"byte_end":350095,"line_start":959,"line_end":959,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350096,"byte_end":350105,"line_start":960,"line_end":960,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2402},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":351204,"byte_end":351207,"line_start":993,"line_end":993,"column_start":8,"column_end":11},"name":"i16","qualname":"::number::complete::i16","value":"pub fn i16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 2 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 2 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350269,"byte_end":350307,"line_start":968,"line_end":968,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350308,"byte_end":350311,"line_start":969,"line_end":969,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i16 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350312,"byte_end":350399,"line_start":970,"line_end":970,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i16 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350400,"byte_end":350485,"line_start":971,"line_end":971,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350486,"byte_end":350560,"line_start":972,"line_end":972,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350561,"byte_end":350572,"line_start":973,"line_end":973,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350573,"byte_end":350620,"line_start":974,"line_end":974,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350621,"byte_end":350649,"line_start":975,"line_end":975,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i16;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350650,"byte_end":350685,"line_start":976,"line_end":976,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350686,"byte_end":350689,"line_start":977,"line_end":977,"column_start":1,"column_end":4}},{"value":"/ let be_i16 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350690,"byte_end":350712,"line_start":978,"line_end":978,"column_start":1,"column_end":23}},{"value":"/   i16(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350713,"byte_end":350755,"line_start":979,"line_end":979,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350756,"byte_end":350762,"line_start":980,"line_end":980,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350763,"byte_end":350766,"line_start":981,"line_end":981,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350767,"byte_end":350844,"line_start":982,"line_end":982,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_i16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350845,"byte_end":350930,"line_start":983,"line_end":983,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350931,"byte_end":350934,"line_start":984,"line_end":984,"column_start":1,"column_end":4}},{"value":"/ let le_i16 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350935,"byte_end":350957,"line_start":985,"line_end":985,"column_start":1,"column_end":23}},{"value":"/   i16(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":350958,"byte_end":351003,"line_start":986,"line_end":986,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":351004,"byte_end":351010,"line_start":987,"line_end":987,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":351011,"byte_end":351014,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":351015,"byte_end":351092,"line_start":989,"line_end":989,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_i16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":351093,"byte_end":351178,"line_start":990,"line_end":990,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":351179,"byte_end":351186,"line_start":991,"line_end":991,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":351187,"byte_end":351196,"line_start":992,"line_end":992,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2405},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352605,"byte_end":352608,"line_start":1032,"line_end":1032,"column_start":8,"column_end":11},"name":"i24","qualname":"::number::complete::i24","value":"pub fn i24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 3 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":351658,"byte_end":351696,"line_start":1007,"line_end":1007,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":351697,"byte_end":351700,"line_start":1008,"line_end":1008,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i24 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":351701,"byte_end":351788,"line_start":1009,"line_end":1009,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i24 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":351789,"byte_end":351874,"line_start":1010,"line_end":1010,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":351875,"byte_end":351949,"line_start":1011,"line_end":1011,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":351950,"byte_end":351961,"line_start":1012,"line_end":1012,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":351962,"byte_end":352009,"line_start":1013,"line_end":1013,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352010,"byte_end":352038,"line_start":1014,"line_end":1014,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i24;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352039,"byte_end":352074,"line_start":1015,"line_end":1015,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352075,"byte_end":352078,"line_start":1016,"line_end":1016,"column_start":1,"column_end":4}},{"value":"/ let be_i24 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352079,"byte_end":352101,"line_start":1017,"line_end":1017,"column_start":1,"column_end":23}},{"value":"/   i24(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352102,"byte_end":352144,"line_start":1018,"line_end":1018,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352145,"byte_end":352151,"line_start":1019,"line_end":1019,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352152,"byte_end":352155,"line_start":1020,"line_end":1020,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352156,"byte_end":352239,"line_start":1021,"line_end":1021,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_i24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352240,"byte_end":352325,"line_start":1022,"line_end":1022,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352326,"byte_end":352329,"line_start":1023,"line_end":1023,"column_start":1,"column_end":4}},{"value":"/ let le_i24 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352330,"byte_end":352352,"line_start":1024,"line_end":1024,"column_start":1,"column_end":23}},{"value":"/   i24(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352353,"byte_end":352398,"line_start":1025,"line_end":1025,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352399,"byte_end":352405,"line_start":1026,"line_end":1026,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352406,"byte_end":352409,"line_start":1027,"line_end":1027,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352410,"byte_end":352493,"line_start":1028,"line_end":1028,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_i24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352494,"byte_end":352579,"line_start":1029,"line_end":1029,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352580,"byte_end":352587,"line_start":1030,"line_end":1030,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":352588,"byte_end":352597,"line_start":1031,"line_end":1031,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2408},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354018,"byte_end":354021,"line_start":1071,"line_end":1071,"column_start":8,"column_end":11},"name":"i32","qualname":"::number::complete::i32","value":"pub fn i32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 4 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353059,"byte_end":353097,"line_start":1046,"line_end":1046,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353098,"byte_end":353101,"line_start":1047,"line_end":1047,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i32 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353102,"byte_end":353189,"line_start":1048,"line_end":1048,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i32 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353190,"byte_end":353275,"line_start":1049,"line_end":1049,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353276,"byte_end":353350,"line_start":1050,"line_end":1050,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353351,"byte_end":353362,"line_start":1051,"line_end":1051,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353363,"byte_end":353410,"line_start":1052,"line_end":1052,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353411,"byte_end":353439,"line_start":1053,"line_end":1053,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353440,"byte_end":353475,"line_start":1054,"line_end":1054,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353476,"byte_end":353479,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ let be_i32 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353480,"byte_end":353502,"line_start":1056,"line_end":1056,"column_start":1,"column_end":23}},{"value":"/   i32(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353503,"byte_end":353545,"line_start":1057,"line_end":1057,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353546,"byte_end":353552,"line_start":1058,"line_end":1058,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353553,"byte_end":353556,"line_start":1059,"line_end":1059,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353557,"byte_end":353646,"line_start":1060,"line_end":1060,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_i32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353647,"byte_end":353732,"line_start":1061,"line_end":1061,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353733,"byte_end":353736,"line_start":1062,"line_end":1062,"column_start":1,"column_end":4}},{"value":"/ let le_i32 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353737,"byte_end":353759,"line_start":1063,"line_end":1063,"column_start":1,"column_end":23}},{"value":"/   i32(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353760,"byte_end":353805,"line_start":1064,"line_end":1064,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353806,"byte_end":353812,"line_start":1065,"line_end":1065,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353813,"byte_end":353816,"line_start":1066,"line_end":1066,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353817,"byte_end":353906,"line_start":1067,"line_end":1067,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_i32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353907,"byte_end":353992,"line_start":1068,"line_end":1068,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":353993,"byte_end":354000,"line_start":1069,"line_end":1069,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354001,"byte_end":354010,"line_start":1070,"line_end":1070,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2411},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":355479,"byte_end":355482,"line_start":1110,"line_end":1110,"column_start":8,"column_end":11},"name":"i64","qualname":"::number::complete::i64","value":"pub fn i64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 8 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354472,"byte_end":354510,"line_start":1085,"line_end":1085,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354511,"byte_end":354514,"line_start":1086,"line_end":1086,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i64 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354515,"byte_end":354602,"line_start":1087,"line_end":1087,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i64 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354603,"byte_end":354688,"line_start":1088,"line_end":1088,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354689,"byte_end":354763,"line_start":1089,"line_end":1089,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354764,"byte_end":354775,"line_start":1090,"line_end":1090,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354776,"byte_end":354823,"line_start":1091,"line_end":1091,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354824,"byte_end":354852,"line_start":1092,"line_end":1092,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354853,"byte_end":354888,"line_start":1093,"line_end":1093,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354889,"byte_end":354892,"line_start":1094,"line_end":1094,"column_start":1,"column_end":4}},{"value":"/ let be_i64 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354893,"byte_end":354915,"line_start":1095,"line_end":1095,"column_start":1,"column_end":23}},{"value":"/   i64(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354916,"byte_end":354958,"line_start":1096,"line_end":1096,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354959,"byte_end":354965,"line_start":1097,"line_end":1097,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354966,"byte_end":354969,"line_start":1098,"line_end":1098,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":354970,"byte_end":355083,"line_start":1099,"line_end":1099,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_i64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":355084,"byte_end":355169,"line_start":1100,"line_end":1100,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":355170,"byte_end":355173,"line_start":1101,"line_end":1101,"column_start":1,"column_end":4}},{"value":"/ let le_i64 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":355174,"byte_end":355196,"line_start":1102,"line_end":1102,"column_start":1,"column_end":23}},{"value":"/   i64(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":355197,"byte_end":355242,"line_start":1103,"line_end":1103,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":355243,"byte_end":355249,"line_start":1104,"line_end":1104,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":355250,"byte_end":355253,"line_start":1105,"line_end":1105,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":355254,"byte_end":355367,"line_start":1106,"line_end":1106,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_i64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":355368,"byte_end":355453,"line_start":1107,"line_end":1107,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":355454,"byte_end":355461,"line_start":1108,"line_end":1108,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":355462,"byte_end":355471,"line_start":1109,"line_end":1109,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2414},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357068,"byte_end":357072,"line_start":1150,"line_end":1150,"column_start":8,"column_end":12},"name":"i128","qualname":"::number::complete::i128","value":"pub fn i128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 16 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":355933,"byte_end":355972,"line_start":1124,"line_end":1124,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":355973,"byte_end":355976,"line_start":1125,"line_end":1125,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i128 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":355977,"byte_end":356065,"line_start":1126,"line_end":1126,"column_start":1,"column_end":89}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i128 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356066,"byte_end":356152,"line_start":1127,"line_end":1127,"column_start":1,"column_end":87}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356153,"byte_end":356227,"line_start":1128,"line_end":1128,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356228,"byte_end":356239,"line_start":1129,"line_end":1129,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356240,"byte_end":356287,"line_start":1130,"line_end":1130,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356288,"byte_end":356316,"line_start":1131,"line_end":1131,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i128;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356317,"byte_end":356353,"line_start":1132,"line_end":1132,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356354,"byte_end":356357,"line_start":1133,"line_end":1133,"column_start":1,"column_end":4}},{"value":"/ let be_i128 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356358,"byte_end":356381,"line_start":1134,"line_end":1134,"column_start":1,"column_end":24}},{"value":"/   i128(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356382,"byte_end":356425,"line_start":1135,"line_end":1135,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356426,"byte_end":356432,"line_start":1136,"line_end":1136,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356433,"byte_end":356436,"line_start":1137,"line_end":1137,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356437,"byte_end":356599,"line_start":1138,"line_end":1138,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_i128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356600,"byte_end":356686,"line_start":1139,"line_end":1139,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356687,"byte_end":356690,"line_start":1140,"line_end":1140,"column_start":1,"column_end":4}},{"value":"/ let le_i128 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356691,"byte_end":356714,"line_start":1141,"line_end":1141,"column_start":1,"column_end":24}},{"value":"/   i128(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356715,"byte_end":356761,"line_start":1142,"line_end":1142,"column_start":1,"column_end":47}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356762,"byte_end":356768,"line_start":1143,"line_end":1143,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356769,"byte_end":356772,"line_start":1144,"line_end":1144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356773,"byte_end":356935,"line_start":1145,"line_end":1145,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_i128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":356936,"byte_end":357022,"line_start":1146,"line_end":1146,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357023,"byte_end":357030,"line_start":1147,"line_end":1147,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357031,"byte_end":357040,"line_start":1148,"line_end":1148,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357041,"byte_end":357060,"line_start":1149,"line_end":1149,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2417},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358036,"byte_end":358042,"line_start":1180,"line_end":1180,"column_start":8,"column_end":14},"name":"be_f32","qualname":"::number::complete::be_f32","value":"pub fn be_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 4 bytes floating point number.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357528,"byte_end":357586,"line_start":1164,"line_end":1164,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357587,"byte_end":357590,"line_start":1165,"line_end":1165,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357591,"byte_end":357666,"line_start":1166,"line_end":1166,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357667,"byte_end":357678,"line_start":1167,"line_end":1167,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357679,"byte_end":357726,"line_start":1168,"line_end":1168,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357727,"byte_end":357755,"line_start":1169,"line_end":1169,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_f32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357756,"byte_end":357794,"line_start":1170,"line_end":1170,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357795,"byte_end":357798,"line_start":1171,"line_end":1171,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357799,"byte_end":357821,"line_start":1172,"line_end":1172,"column_start":1,"column_end":23}},{"value":"/   be_f32(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357822,"byte_end":357837,"line_start":1173,"line_end":1173,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357838,"byte_end":357844,"line_start":1174,"line_end":1174,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357845,"byte_end":357848,"line_start":1175,"line_end":1175,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357849,"byte_end":357925,"line_start":1176,"line_end":1176,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":357926,"byte_end":358010,"line_start":1177,"line_end":1177,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358011,"byte_end":358018,"line_start":1178,"line_end":1178,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358019,"byte_end":358028,"line_start":1179,"line_end":1179,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2420},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358802,"byte_end":358808,"line_start":1206,"line_end":1206,"column_start":8,"column_end":14},"name":"be_f64","qualname":"::number::complete::be_f64","value":"pub fn be_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 8 bytes floating point number.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358270,"byte_end":358328,"line_start":1190,"line_end":1190,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358329,"byte_end":358332,"line_start":1191,"line_end":1191,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358333,"byte_end":358408,"line_start":1192,"line_end":1192,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358409,"byte_end":358420,"line_start":1193,"line_end":1193,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358421,"byte_end":358468,"line_start":1194,"line_end":1194,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358469,"byte_end":358497,"line_start":1195,"line_end":1195,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_f64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358498,"byte_end":358536,"line_start":1196,"line_end":1196,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358537,"byte_end":358540,"line_start":1197,"line_end":1197,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358541,"byte_end":358563,"line_start":1198,"line_end":1198,"column_start":1,"column_end":23}},{"value":"/   be_f64(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358564,"byte_end":358579,"line_start":1199,"line_end":1199,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358580,"byte_end":358586,"line_start":1200,"line_end":1200,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358587,"byte_end":358590,"line_start":1201,"line_end":1201,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358591,"byte_end":358691,"line_start":1202,"line_end":1202,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358692,"byte_end":358776,"line_start":1203,"line_end":1203,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358777,"byte_end":358784,"line_start":1204,"line_end":1204,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":358785,"byte_end":358794,"line_start":1205,"line_end":1205,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2423},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359547,"byte_end":359553,"line_start":1232,"line_end":1232,"column_start":8,"column_end":14},"name":"le_f32","qualname":"::number::complete::le_f32","value":"pub fn le_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 4 bytes floating point number.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359036,"byte_end":359097,"line_start":1216,"line_end":1216,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359098,"byte_end":359101,"line_start":1217,"line_end":1217,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359102,"byte_end":359177,"line_start":1218,"line_end":1218,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359178,"byte_end":359189,"line_start":1219,"line_end":1219,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359190,"byte_end":359237,"line_start":1220,"line_end":1220,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359238,"byte_end":359266,"line_start":1221,"line_end":1221,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_f32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359267,"byte_end":359305,"line_start":1222,"line_end":1222,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359306,"byte_end":359309,"line_start":1223,"line_end":1223,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359310,"byte_end":359332,"line_start":1224,"line_end":1224,"column_start":1,"column_end":23}},{"value":"/   le_f32(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359333,"byte_end":359348,"line_start":1225,"line_end":1225,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359349,"byte_end":359355,"line_start":1226,"line_end":1226,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359356,"byte_end":359359,"line_start":1227,"line_end":1227,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359360,"byte_end":359436,"line_start":1228,"line_end":1228,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359437,"byte_end":359521,"line_start":1229,"line_end":1229,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359522,"byte_end":359529,"line_start":1230,"line_end":1230,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359530,"byte_end":359539,"line_start":1231,"line_end":1231,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2426},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360316,"byte_end":360322,"line_start":1258,"line_end":1258,"column_start":8,"column_end":14},"name":"le_f64","qualname":"::number::complete::le_f64","value":"pub fn le_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 8 bytes floating point number.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359781,"byte_end":359842,"line_start":1242,"line_end":1242,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359843,"byte_end":359846,"line_start":1243,"line_end":1243,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359847,"byte_end":359922,"line_start":1244,"line_end":1244,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359923,"byte_end":359934,"line_start":1245,"line_end":1245,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359935,"byte_end":359982,"line_start":1246,"line_end":1246,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":359983,"byte_end":360011,"line_start":1247,"line_end":1247,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_f64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360012,"byte_end":360050,"line_start":1248,"line_end":1248,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360051,"byte_end":360054,"line_start":1249,"line_end":1249,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360055,"byte_end":360077,"line_start":1250,"line_end":1250,"column_start":1,"column_end":23}},{"value":"/   le_f64(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360078,"byte_end":360093,"line_start":1251,"line_end":1251,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360094,"byte_end":360100,"line_start":1252,"line_end":1252,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360101,"byte_end":360104,"line_start":1253,"line_end":1253,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360105,"byte_end":360205,"line_start":1254,"line_end":1254,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360206,"byte_end":360290,"line_start":1255,"line_end":1255,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360291,"byte_end":360298,"line_start":1256,"line_end":1256,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360299,"byte_end":360308,"line_start":1257,"line_end":1257,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2429},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361484,"byte_end":361487,"line_start":1293,"line_end":1293,"column_start":8,"column_end":11},"name":"f32","qualname":"::number::complete::f32","value":"pub fn f32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a 4 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes a 4 byte floating point number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360550,"byte_end":360595,"line_start":1268,"line_end":1268,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360596,"byte_end":360599,"line_start":1269,"line_end":1269,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian f32 float,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360600,"byte_end":360685,"line_start":1270,"line_end":1270,"column_start":1,"column_end":86}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian f32 float.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360686,"byte_end":360769,"line_start":1271,"line_end":1271,"column_start":1,"column_end":84}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360770,"byte_end":360844,"line_start":1272,"line_end":1272,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360845,"byte_end":360856,"line_start":1273,"line_end":1273,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360857,"byte_end":360904,"line_start":1274,"line_end":1274,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360905,"byte_end":360933,"line_start":1275,"line_end":1275,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::f32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360934,"byte_end":360969,"line_start":1276,"line_end":1276,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360970,"byte_end":360973,"line_start":1277,"line_end":1277,"column_start":1,"column_end":4}},{"value":"/ let be_f32 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360974,"byte_end":360996,"line_start":1278,"line_end":1278,"column_start":1,"column_end":23}},{"value":"/   f32(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":360997,"byte_end":361039,"line_start":1279,"line_end":1279,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361040,"byte_end":361046,"line_start":1280,"line_end":1280,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361047,"byte_end":361050,"line_start":1281,"line_end":1281,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f32(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361051,"byte_end":361127,"line_start":1282,"line_end":1282,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(be_f32(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361128,"byte_end":361212,"line_start":1283,"line_end":1283,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361213,"byte_end":361216,"line_start":1284,"line_end":1284,"column_start":1,"column_end":4}},{"value":"/ let le_f32 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361217,"byte_end":361239,"line_start":1285,"line_end":1285,"column_start":1,"column_end":23}},{"value":"/   f32(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361240,"byte_end":361285,"line_start":1286,"line_end":1286,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361286,"byte_end":361292,"line_start":1287,"line_end":1287,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361293,"byte_end":361296,"line_start":1288,"line_end":1288,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f32(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361297,"byte_end":361373,"line_start":1289,"line_end":1289,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(le_f32(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361374,"byte_end":361458,"line_start":1290,"line_end":1290,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361459,"byte_end":361466,"line_start":1291,"line_end":1291,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361467,"byte_end":361476,"line_start":1292,"line_end":1292,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2432},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362921,"byte_end":362924,"line_start":1332,"line_end":1332,"column_start":8,"column_end":11},"name":"f64","qualname":"::number::complete::f64","value":"pub fn f64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an 8 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes an 8 byte floating point number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361938,"byte_end":361984,"line_start":1307,"line_end":1307,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361985,"byte_end":361988,"line_start":1308,"line_end":1308,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian f64 float,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":361989,"byte_end":362074,"line_start":1309,"line_end":1309,"column_start":1,"column_end":86}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian f64 float.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362075,"byte_end":362158,"line_start":1310,"line_end":1310,"column_start":1,"column_end":84}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362159,"byte_end":362233,"line_start":1311,"line_end":1311,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362234,"byte_end":362245,"line_start":1312,"line_end":1312,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362246,"byte_end":362293,"line_start":1313,"line_end":1313,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362294,"byte_end":362322,"line_start":1314,"line_end":1314,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::f64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362323,"byte_end":362358,"line_start":1315,"line_end":1315,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362359,"byte_end":362362,"line_start":1316,"line_end":1316,"column_start":1,"column_end":4}},{"value":"/ let be_f64 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362363,"byte_end":362385,"line_start":1317,"line_end":1317,"column_start":1,"column_end":23}},{"value":"/   f64(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362386,"byte_end":362428,"line_start":1318,"line_end":1318,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362429,"byte_end":362435,"line_start":1319,"line_end":1319,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362436,"byte_end":362439,"line_start":1320,"line_end":1320,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f64(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362440,"byte_end":362540,"line_start":1321,"line_end":1321,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(be_f64(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362541,"byte_end":362625,"line_start":1322,"line_end":1322,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362626,"byte_end":362629,"line_start":1323,"line_end":1323,"column_start":1,"column_end":4}},{"value":"/ let le_f64 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362630,"byte_end":362652,"line_start":1324,"line_end":1324,"column_start":1,"column_end":23}},{"value":"/   f64(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362653,"byte_end":362698,"line_start":1325,"line_end":1325,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362699,"byte_end":362705,"line_start":1326,"line_end":1326,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362706,"byte_end":362709,"line_start":1327,"line_end":1327,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f64(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362710,"byte_end":362810,"line_start":1328,"line_end":1328,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(le_f64(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362811,"byte_end":362895,"line_start":1329,"line_end":1329,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362896,"byte_end":362903,"line_start":1330,"line_end":1330,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":362904,"byte_end":362913,"line_start":1331,"line_end":1331,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2435},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363921,"byte_end":363928,"line_start":1363,"line_end":1363,"column_start":8,"column_end":15},"name":"hex_u32","qualname":"::number::complete::hex_u32","value":"pub fn hex_u32<'a, E: ParseError<&'a [u8]>>(&'a [u8])\n-> IResult<&'a [u8], u32, E>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a hex-encoded integer.","sig":null,"attributes":[{"value":"/ Recognizes a hex-encoded integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363375,"byte_end":363412,"line_start":1346,"line_end":1346,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363413,"byte_end":363416,"line_start":1347,"line_end":1347,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will parse until the end of input if it has less than 8 bytes.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363417,"byte_end":363503,"line_start":1348,"line_end":1348,"column_start":1,"column_end":87}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363504,"byte_end":363515,"line_start":1349,"line_end":1349,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363516,"byte_end":363563,"line_start":1350,"line_end":1350,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363564,"byte_end":363592,"line_start":1351,"line_end":1351,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::hex_u32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363593,"byte_end":363632,"line_start":1352,"line_end":1352,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363633,"byte_end":363636,"line_start":1353,"line_end":1353,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363637,"byte_end":363659,"line_start":1354,"line_end":1354,"column_start":1,"column_end":23}},{"value":"/   hex_u32(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363660,"byte_end":363676,"line_start":1355,"line_end":1355,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363677,"byte_end":363683,"line_start":1356,"line_end":1356,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363684,"byte_end":363687,"line_start":1357,"line_end":1357,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"01AE\"[..]), Ok((&b\"\"[..], 0x01AE)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363688,"byte_end":363749,"line_start":1358,"line_end":1358,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Ok((&b\"\"[..], 0x0ABC)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363750,"byte_end":363810,"line_start":1359,"line_end":1359,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(parser(&b\"ggg\"[..]), Err(Err::Error((&b\"ggg\"[..], ErrorKind::IsA))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363811,"byte_end":363895,"line_start":1360,"line_end":1360,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363896,"byte_end":363903,"line_start":1361,"line_end":1361,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":363904,"byte_end":363913,"line_start":1362,"line_end":1362,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6016},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":365078,"byte_end":365093,"line_start":1404,"line_end":1404,"column_start":8,"column_end":23},"name":"recognize_float","qualname":"::number::complete::recognize_float","value":"pub fn recognize_float<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter, <T as InputIter>::Item: AsChar, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns the corresponding slice.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns the corresponding slice.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364451,"byte_end":364541,"line_start":1385,"line_end":1385,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364542,"byte_end":364545,"line_start":1386,"line_end":1386,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364546,"byte_end":364603,"line_start":1387,"line_end":1387,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364604,"byte_end":364607,"line_start":1388,"line_end":1388,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364608,"byte_end":364619,"line_start":1389,"line_end":1389,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364620,"byte_end":364667,"line_start":1390,"line_end":1390,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364668,"byte_end":364696,"line_start":1391,"line_end":1391,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::recognize_float;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364697,"byte_end":364744,"line_start":1392,"line_end":1392,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364745,"byte_end":364748,"line_start":1393,"line_end":1393,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364749,"byte_end":364771,"line_start":1394,"line_end":1394,"column_start":1,"column_end":23}},{"value":"/   recognize_float(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364772,"byte_end":364796,"line_start":1395,"line_end":1395,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364797,"byte_end":364803,"line_start":1396,"line_end":1396,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364804,"byte_end":364807,"line_start":1397,"line_end":1397,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", \"11e-1\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364808,"byte_end":364859,"line_start":1398,"line_end":1398,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", \"123E-02\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364860,"byte_end":364915,"line_start":1399,"line_end":1399,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", \"123\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364916,"byte_end":364971,"line_start":1400,"line_end":1400,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":364972,"byte_end":365045,"line_start":1401,"line_end":1401,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":365046,"byte_end":365053,"line_start":1402,"line_end":1402,"column_start":1,"column_end":8}},{"value":"rustfmt::skip","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":365054,"byte_end":365070,"line_start":1403,"line_end":1403,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":2439},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":365901,"byte_end":365922,"line_start":1433,"line_end":1433,"column_start":8,"column_end":29},"name":"recognize_float_parts","qualname":"::number::complete::recognize_float_parts","value":"pub fn recognize_float_parts<T, E: ParseError<T>>(T)\n-> IResult<T, (bool, T, T, i32), E> where T: Slice<RangeFrom<usize>> +\nSlice<RangeTo<usize>> + Slice<Range<usize>>, T: Clone + Offset, T: InputIter +\nInputTake, <T as InputIter>::Item: AsChar + Copy, T: InputTakeAtPosition +\nInputLength, <T as InputTakeAtPosition>::Item: AsChar,\nT: for<'a> Compare<&'a [u8]>, T: AsBytes","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a floating point number in text format and returns the integer, fraction and exponent parts of the input data","sig":null,"attributes":[{"value":"/ Recognizes a floating point number in text format and returns the integer, fraction and exponent parts of the input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":365703,"byte_end":365827,"line_start":1429,"line_end":1429,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":365828,"byte_end":365831,"line_start":1430,"line_end":1430,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":365832,"byte_end":365889,"line_start":1431,"line_end":1431,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":365890,"byte_end":365893,"line_start":1432,"line_end":1432,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":2445},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368842,"byte_end":368847,"line_start":1537,"line_end":1537,"column_start":8,"column_end":13},"name":"float","qualname":"::number::complete::float","value":"pub fn float<T, E: ParseError<T>>(T) -> IResult<T, f32, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>> + Slice<Range<usize>>,\nT: Clone + Offset, T: InputIter + InputLength + InputTake,\n<T as InputIter>::Item: AsChar + Copy, <T as InputIter>::IterElem: Clone,\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar, T: AsBytes,\nT: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in text format and returns a f32.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in text format and returns a f32.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368284,"byte_end":368354,"line_start":1520,"line_end":1520,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368355,"byte_end":368358,"line_start":1521,"line_end":1521,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368359,"byte_end":368416,"line_start":1522,"line_end":1522,"column_start":1,"column_end":58}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368417,"byte_end":368428,"line_start":1523,"line_end":1523,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368429,"byte_end":368476,"line_start":1524,"line_end":1524,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368477,"byte_end":368505,"line_start":1525,"line_end":1525,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::float;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368506,"byte_end":368543,"line_start":1526,"line_end":1526,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368544,"byte_end":368547,"line_start":1527,"line_end":1527,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368548,"byte_end":368570,"line_start":1528,"line_end":1528,"column_start":1,"column_end":23}},{"value":"/   float(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368571,"byte_end":368585,"line_start":1529,"line_end":1529,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368586,"byte_end":368592,"line_start":1530,"line_end":1530,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368593,"byte_end":368596,"line_start":1531,"line_end":1531,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368597,"byte_end":368644,"line_start":1532,"line_end":1532,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368645,"byte_end":368695,"line_start":1533,"line_end":1533,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368696,"byte_end":368751,"line_start":1534,"line_end":1534,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368752,"byte_end":368826,"line_start":1535,"line_end":1535,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":368827,"byte_end":368834,"line_start":1536,"line_end":1536,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2449},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":370074,"byte_end":370080,"line_start":1580,"line_end":1580,"column_start":8,"column_end":14},"name":"double","qualname":"::number::complete::double","value":"pub fn double<T, E: ParseError<T>>(T) -> IResult<T, f64, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>> + Slice<Range<usize>>,\nT: Clone + Offset, T: InputIter + InputLength + InputTake,\n<T as InputIter>::Item: AsChar + Copy, <T as InputIter>::IterElem: Clone,\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar, T: AsBytes,\nT: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in text format and returns a f32.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in text format and returns a f32.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369516,"byte_end":369586,"line_start":1563,"line_end":1563,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369587,"byte_end":369590,"line_start":1564,"line_end":1564,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369591,"byte_end":369648,"line_start":1565,"line_end":1565,"column_start":1,"column_end":58}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369649,"byte_end":369660,"line_start":1566,"line_end":1566,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369661,"byte_end":369708,"line_start":1567,"line_end":1567,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369709,"byte_end":369737,"line_start":1568,"line_end":1568,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::float;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369738,"byte_end":369775,"line_start":1569,"line_end":1569,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369776,"byte_end":369779,"line_start":1570,"line_end":1570,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369780,"byte_end":369802,"line_start":1571,"line_end":1571,"column_start":1,"column_end":23}},{"value":"/   float(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369803,"byte_end":369817,"line_start":1572,"line_end":1572,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369818,"byte_end":369824,"line_start":1573,"line_end":1573,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369825,"byte_end":369828,"line_start":1574,"line_end":1574,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369829,"byte_end":369876,"line_start":1575,"line_end":1575,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369877,"byte_end":369927,"line_start":1576,"line_end":1576,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369928,"byte_end":369983,"line_start":1577,"line_end":1577,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":369984,"byte_end":370058,"line_start":1578,"line_end":1578,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/complete.rs","byte_start":370059,"byte_end":370066,"line_start":1579,"line_end":1579,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2453},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::number::streaming","value":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","parent":null,"children":[{"krate":0,"index":2454},{"krate":0,"index":2457},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2464},{"krate":0,"index":2467},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2474},{"krate":0,"index":2477},{"krate":0,"index":2480},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2487},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2495},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2502},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2509},{"krate":0,"index":2512},{"krate":0,"index":2515},{"krate":0,"index":2518},{"krate":0,"index":2521},{"krate":0,"index":2524},{"krate":0,"index":2527},{"krate":0,"index":2530},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2538},{"krate":0,"index":2541},{"krate":0,"index":2544},{"krate":0,"index":2547},{"krate":0,"index":2550},{"krate":0,"index":2553},{"krate":0,"index":2556},{"krate":0,"index":2559},{"krate":0,"index":2562},{"krate":0,"index":2565},{"krate":0,"index":2568},{"krate":0,"index":2571},{"krate":0,"index":2574},{"krate":0,"index":2577},{"krate":0,"index":2580},{"krate":0,"index":2583},{"krate":0,"index":2586},{"krate":0,"index":2589},{"krate":0,"index":2592},{"krate":0,"index":2595},{"krate":0,"index":2598},{"krate":0,"index":2601},{"krate":0,"index":2604},{"krate":0,"index":2607},{"krate":0,"index":2610},{"krate":0,"index":2613},{"krate":0,"index":2616},{"krate":0,"index":2619},{"krate":0,"index":2622},{"krate":0,"index":2625},{"krate":0,"index":2628},{"krate":0,"index":2631},{"krate":0,"index":2634},{"krate":0,"index":2637},{"krate":0,"index":2640},{"krate":0,"index":2643},{"krate":0,"index":2646},{"krate":0,"index":2649},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2658},{"krate":0,"index":2661},{"krate":0,"index":6047},{"krate":0,"index":2665},{"krate":0,"index":2671},{"krate":0,"index":2675}],"decl_id":null,"docs":" Parsers recognizing numbers, streaming version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing numbers, streaming version","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":383776,"byte_end":383826,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":2535},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385319,"byte_end":385324,"line_start":50,"line_end":50,"column_start":8,"column_end":13},"name":"be_u8","qualname":"::number::streaming::be_u8","value":"pub fn be_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":384829,"byte_end":384871,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":384872,"byte_end":384875,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":384876,"byte_end":384972,"line_start":37,"line_end":37,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":384973,"byte_end":384984,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":384985,"byte_end":385032,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385033,"byte_end":385071,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385072,"byte_end":385075,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385076,"byte_end":385098,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/   be_u8::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385099,"byte_end":385134,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385135,"byte_end":385141,"line_start":44,"line_end":44,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385142,"byte_end":385145,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385146,"byte_end":385221,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385222,"byte_end":385293,"line_start":47,"line_end":47,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385294,"byte_end":385301,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385302,"byte_end":385311,"line_start":49,"line_end":49,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2538},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386167,"byte_end":386173,"line_start":80,"line_end":80,"column_start":8,"column_end":14},"name":"be_u16","qualname":"::number::streaming::be_u16","value":"pub fn be_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 2 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385658,"byte_end":385711,"line_start":64,"line_end":64,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385712,"byte_end":385715,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385716,"byte_end":385812,"line_start":66,"line_end":66,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385813,"byte_end":385816,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385817,"byte_end":385828,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385829,"byte_end":385876,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u16;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385877,"byte_end":385916,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385917,"byte_end":385920,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385921,"byte_end":385943,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/   be_u16::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385944,"byte_end":385980,"line_start":73,"line_end":73,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385981,"byte_end":385987,"line_start":74,"line_end":74,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385988,"byte_end":385991,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":385992,"byte_end":386065,"line_start":76,"line_end":76,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386066,"byte_end":386141,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386142,"byte_end":386149,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386150,"byte_end":386159,"line_start":79,"line_end":79,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2541},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387113,"byte_end":387119,"line_start":113,"line_end":113,"column_start":8,"column_end":14},"name":"be_u24","qualname":"::number::streaming::be_u24","value":"pub fn be_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 3 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 3 byte integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386599,"byte_end":386651,"line_start":97,"line_end":97,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386652,"byte_end":386655,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386656,"byte_end":386752,"line_start":99,"line_end":99,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386753,"byte_end":386756,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386757,"byte_end":386768,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386769,"byte_end":386816,"line_start":102,"line_end":102,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u24;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386817,"byte_end":386856,"line_start":103,"line_end":103,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386857,"byte_end":386860,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386861,"byte_end":386883,"line_start":105,"line_end":105,"column_start":1,"column_end":23}},{"value":"/   be_u24::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386884,"byte_end":386920,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386921,"byte_end":386927,"line_start":107,"line_end":107,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386928,"byte_end":386931,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x000102)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":386932,"byte_end":387011,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387012,"byte_end":387087,"line_start":110,"line_end":110,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387088,"byte_end":387095,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387096,"byte_end":387105,"line_start":112,"line_end":112,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2544},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388066,"byte_end":388072,"line_start":146,"line_end":146,"column_start":8,"column_end":14},"name":"be_u32","qualname":"::number::streaming::be_u32","value":"pub fn be_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 4 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387545,"byte_end":387598,"line_start":130,"line_end":130,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387599,"byte_end":387602,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387603,"byte_end":387699,"line_start":132,"line_end":132,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387700,"byte_end":387703,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387704,"byte_end":387715,"line_start":134,"line_end":134,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387716,"byte_end":387763,"line_start":135,"line_end":135,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387764,"byte_end":387803,"line_start":136,"line_end":136,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387804,"byte_end":387807,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387808,"byte_end":387830,"line_start":138,"line_end":138,"column_start":1,"column_end":23}},{"value":"/   be_u32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387831,"byte_end":387867,"line_start":139,"line_end":139,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387868,"byte_end":387874,"line_start":140,"line_end":140,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387875,"byte_end":387878,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387879,"byte_end":387964,"line_start":142,"line_end":142,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":387965,"byte_end":388040,"line_start":143,"line_end":143,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388041,"byte_end":388048,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388049,"byte_end":388058,"line_start":145,"line_end":145,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2547},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389043,"byte_end":389049,"line_start":179,"line_end":179,"column_start":8,"column_end":14},"name":"be_u64","qualname":"::number::streaming::be_u64","value":"pub fn be_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 8 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388498,"byte_end":388551,"line_start":163,"line_end":163,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388552,"byte_end":388555,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388556,"byte_end":388652,"line_start":165,"line_end":165,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388653,"byte_end":388656,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388657,"byte_end":388668,"line_start":167,"line_end":167,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388669,"byte_end":388716,"line_start":168,"line_end":168,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388717,"byte_end":388756,"line_start":169,"line_end":169,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388757,"byte_end":388760,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388761,"byte_end":388783,"line_start":171,"line_end":171,"column_start":1,"column_end":23}},{"value":"/   be_u64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388784,"byte_end":388820,"line_start":172,"line_end":172,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388821,"byte_end":388827,"line_start":173,"line_end":173,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388828,"byte_end":388831,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388832,"byte_end":388941,"line_start":175,"line_end":175,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":388942,"byte_end":389017,"line_start":176,"line_end":176,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389018,"byte_end":389025,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389026,"byte_end":389035,"line_start":178,"line_end":178,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2550},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390088,"byte_end":390095,"line_start":212,"line_end":212,"column_start":8,"column_end":15},"name":"be_u128","qualname":"::number::streaming::be_u128","value":"pub fn be_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 16 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389475,"byte_end":389529,"line_start":196,"line_end":196,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389530,"byte_end":389533,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389534,"byte_end":389630,"line_start":198,"line_end":198,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389631,"byte_end":389642,"line_start":199,"line_end":199,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389643,"byte_end":389690,"line_start":200,"line_end":200,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u128;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389691,"byte_end":389731,"line_start":201,"line_end":201,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389732,"byte_end":389735,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389736,"byte_end":389758,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/   be_u128::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389759,"byte_end":389796,"line_start":204,"line_end":204,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389797,"byte_end":389803,"line_start":205,"line_end":205,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389804,"byte_end":389807,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203040506070809101112131415)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389808,"byte_end":389965,"line_start":207,"line_end":207,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":389966,"byte_end":390042,"line_start":208,"line_end":208,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390043,"byte_end":390050,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390051,"byte_end":390060,"line_start":210,"line_end":210,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390061,"byte_end":390080,"line_start":211,"line_end":211,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390991,"byte_end":390996,"line_start":242,"line_end":242,"column_start":8,"column_end":13},"name":"be_i8","qualname":"::number::streaming::be_i8","value":"pub fn be_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390525,"byte_end":390564,"line_start":229,"line_end":229,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390565,"byte_end":390568,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390569,"byte_end":390665,"line_start":231,"line_end":231,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390666,"byte_end":390677,"line_start":232,"line_end":232,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390678,"byte_end":390725,"line_start":233,"line_end":233,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390726,"byte_end":390764,"line_start":234,"line_end":234,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390765,"byte_end":390768,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i8::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390769,"byte_end":390813,"line_start":236,"line_end":236,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390814,"byte_end":390817,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390818,"byte_end":390893,"line_start":238,"line_end":238,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390894,"byte_end":390965,"line_start":239,"line_end":239,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390966,"byte_end":390973,"line_start":240,"line_end":240,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":390974,"byte_end":390983,"line_start":241,"line_end":241,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2556},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391639,"byte_end":391645,"line_start":262,"line_end":262,"column_start":8,"column_end":14},"name":"be_i16","qualname":"::number::streaming::be_i16","value":"pub fn be_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 2 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391161,"byte_end":391212,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391213,"byte_end":391216,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391217,"byte_end":391313,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391314,"byte_end":391325,"line_start":252,"line_end":252,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391326,"byte_end":391373,"line_start":253,"line_end":253,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i16;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391374,"byte_end":391413,"line_start":254,"line_end":254,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391414,"byte_end":391417,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i16::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391418,"byte_end":391463,"line_start":256,"line_end":256,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391464,"byte_end":391467,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391468,"byte_end":391541,"line_start":258,"line_end":258,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391542,"byte_end":391613,"line_start":259,"line_end":259,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391614,"byte_end":391621,"line_start":260,"line_end":260,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391622,"byte_end":391631,"line_start":261,"line_end":261,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2559},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392297,"byte_end":392303,"line_start":282,"line_end":282,"column_start":8,"column_end":14},"name":"be_i24","qualname":"::number::streaming::be_i24","value":"pub fn be_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 3 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391813,"byte_end":391864,"line_start":269,"line_end":269,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391865,"byte_end":391868,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391869,"byte_end":391965,"line_start":271,"line_end":271,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391966,"byte_end":391977,"line_start":272,"line_end":272,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":391978,"byte_end":392025,"line_start":273,"line_end":273,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i24;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392026,"byte_end":392065,"line_start":274,"line_end":274,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392066,"byte_end":392069,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i24::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392070,"byte_end":392115,"line_start":276,"line_end":276,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392116,"byte_end":392119,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x000102)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392120,"byte_end":392199,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392200,"byte_end":392271,"line_start":279,"line_end":279,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392272,"byte_end":392279,"line_start":280,"line_end":280,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392280,"byte_end":392289,"line_start":281,"line_end":281,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2562},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393111,"byte_end":393117,"line_start":307,"line_end":307,"column_start":8,"column_end":14},"name":"be_i32","qualname":"::number::streaming::be_i32","value":"pub fn be_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 4 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392621,"byte_end":392672,"line_start":294,"line_end":294,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392673,"byte_end":392676,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392677,"byte_end":392773,"line_start":296,"line_end":296,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392774,"byte_end":392785,"line_start":297,"line_end":297,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392786,"byte_end":392833,"line_start":298,"line_end":298,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392834,"byte_end":392873,"line_start":299,"line_end":299,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392874,"byte_end":392877,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i32::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392878,"byte_end":392923,"line_start":301,"line_end":301,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392924,"byte_end":392927,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":392928,"byte_end":393013,"line_start":303,"line_end":303,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(4))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393014,"byte_end":393085,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393086,"byte_end":393093,"line_start":305,"line_end":305,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393094,"byte_end":393103,"line_start":306,"line_end":306,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2565},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393807,"byte_end":393813,"line_start":328,"line_end":328,"column_start":8,"column_end":14},"name":"be_i64","qualname":"::number::streaming::be_i64","value":"pub fn be_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 8 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393285,"byte_end":393336,"line_start":314,"line_end":314,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393337,"byte_end":393340,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393341,"byte_end":393437,"line_start":316,"line_end":316,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393438,"byte_end":393441,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393442,"byte_end":393453,"line_start":318,"line_end":318,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393454,"byte_end":393501,"line_start":319,"line_end":319,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393502,"byte_end":393541,"line_start":320,"line_end":320,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393542,"byte_end":393545,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i64::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393546,"byte_end":393591,"line_start":322,"line_end":322,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393592,"byte_end":393595,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393596,"byte_end":393705,"line_start":324,"line_end":324,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393706,"byte_end":393781,"line_start":325,"line_end":325,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393782,"byte_end":393789,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393790,"byte_end":393799,"line_start":327,"line_end":327,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394571,"byte_end":394578,"line_start":349,"line_end":349,"column_start":8,"column_end":15},"name":"be_i128","qualname":"::number::streaming::be_i128","value":"pub fn be_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 16 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":393981,"byte_end":394033,"line_start":335,"line_end":335,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394034,"byte_end":394037,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394038,"byte_end":394134,"line_start":337,"line_end":337,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394135,"byte_end":394146,"line_start":338,"line_end":338,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394147,"byte_end":394194,"line_start":339,"line_end":339,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i128;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394195,"byte_end":394235,"line_start":340,"line_end":340,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394236,"byte_end":394239,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i128::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394240,"byte_end":394286,"line_start":342,"line_end":342,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394287,"byte_end":394290,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203040506070809101112131415)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394291,"byte_end":394448,"line_start":344,"line_end":344,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394449,"byte_end":394525,"line_start":345,"line_end":345,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394526,"byte_end":394533,"line_start":346,"line_end":346,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394534,"byte_end":394543,"line_start":347,"line_end":347,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394544,"byte_end":394563,"line_start":348,"line_end":348,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2571},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395218,"byte_end":395223,"line_start":369,"line_end":369,"column_start":8,"column_end":13},"name":"le_u8","qualname":"::number::streaming::le_u8","value":"pub fn le_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394749,"byte_end":394791,"line_start":356,"line_end":356,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394792,"byte_end":394795,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394796,"byte_end":394892,"line_start":358,"line_end":358,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394893,"byte_end":394904,"line_start":359,"line_end":359,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394905,"byte_end":394952,"line_start":360,"line_end":360,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394953,"byte_end":394991,"line_start":361,"line_end":361,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394992,"byte_end":394995,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ let parser = le_u8::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":394996,"byte_end":395040,"line_start":363,"line_end":363,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395041,"byte_end":395044,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395045,"byte_end":395120,"line_start":365,"line_end":365,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395121,"byte_end":395192,"line_start":366,"line_end":366,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395193,"byte_end":395200,"line_start":367,"line_end":367,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395201,"byte_end":395210,"line_start":368,"line_end":368,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2574},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396069,"byte_end":396075,"line_start":399,"line_end":399,"column_start":8,"column_end":14},"name":"le_u16","qualname":"::number::streaming::le_u16","value":"pub fn le_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 2 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395557,"byte_end":395613,"line_start":383,"line_end":383,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395614,"byte_end":395617,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395618,"byte_end":395714,"line_start":385,"line_end":385,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395715,"byte_end":395718,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395719,"byte_end":395730,"line_start":387,"line_end":387,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395731,"byte_end":395778,"line_start":388,"line_end":388,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u16;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395779,"byte_end":395818,"line_start":389,"line_end":389,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395819,"byte_end":395822,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395823,"byte_end":395845,"line_start":391,"line_end":391,"column_start":1,"column_end":23}},{"value":"/   le_u16::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395846,"byte_end":395882,"line_start":392,"line_end":392,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395883,"byte_end":395889,"line_start":393,"line_end":393,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395890,"byte_end":395893,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395894,"byte_end":395967,"line_start":395,"line_end":395,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":395968,"byte_end":396043,"line_start":396,"line_end":396,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396044,"byte_end":396051,"line_start":397,"line_end":397,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396052,"byte_end":396061,"line_start":398,"line_end":398,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2577},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397032,"byte_end":397038,"line_start":432,"line_end":432,"column_start":8,"column_end":14},"name":"le_u24","qualname":"::number::streaming::le_u24","value":"pub fn le_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 3 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396514,"byte_end":396570,"line_start":416,"line_end":416,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396571,"byte_end":396574,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396575,"byte_end":396671,"line_start":418,"line_end":418,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396672,"byte_end":396675,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396676,"byte_end":396687,"line_start":420,"line_end":420,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396688,"byte_end":396735,"line_start":421,"line_end":421,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u24;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396736,"byte_end":396775,"line_start":422,"line_end":422,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396776,"byte_end":396779,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396780,"byte_end":396802,"line_start":424,"line_end":424,"column_start":1,"column_end":23}},{"value":"/   le_u24::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396803,"byte_end":396839,"line_start":425,"line_end":425,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396840,"byte_end":396846,"line_start":426,"line_end":426,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396847,"byte_end":396850,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396851,"byte_end":396930,"line_start":428,"line_end":428,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":396931,"byte_end":397006,"line_start":429,"line_end":429,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397007,"byte_end":397014,"line_start":430,"line_end":430,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397015,"byte_end":397024,"line_start":431,"line_end":431,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2580},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398001,"byte_end":398007,"line_start":465,"line_end":465,"column_start":8,"column_end":14},"name":"le_u32","qualname":"::number::streaming::le_u32","value":"pub fn le_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 4 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397477,"byte_end":397533,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397534,"byte_end":397537,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397538,"byte_end":397634,"line_start":451,"line_end":451,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397635,"byte_end":397638,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397639,"byte_end":397650,"line_start":453,"line_end":453,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397651,"byte_end":397698,"line_start":454,"line_end":454,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397699,"byte_end":397738,"line_start":455,"line_end":455,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397739,"byte_end":397742,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397743,"byte_end":397765,"line_start":457,"line_end":457,"column_start":1,"column_end":23}},{"value":"/   le_u32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397766,"byte_end":397802,"line_start":458,"line_end":458,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397803,"byte_end":397809,"line_start":459,"line_end":459,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397810,"byte_end":397813,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x03020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397814,"byte_end":397899,"line_start":461,"line_end":461,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397900,"byte_end":397975,"line_start":462,"line_end":462,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397976,"byte_end":397983,"line_start":463,"line_end":463,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":397984,"byte_end":397993,"line_start":464,"line_end":464,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2583},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398994,"byte_end":399000,"line_start":498,"line_end":498,"column_start":8,"column_end":14},"name":"le_u64","qualname":"::number::streaming::le_u64","value":"pub fn le_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 8 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398446,"byte_end":398502,"line_start":482,"line_end":482,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398503,"byte_end":398506,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398507,"byte_end":398603,"line_start":484,"line_end":484,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398604,"byte_end":398607,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398608,"byte_end":398619,"line_start":486,"line_end":486,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398620,"byte_end":398667,"line_start":487,"line_end":487,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398668,"byte_end":398707,"line_start":488,"line_end":488,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398708,"byte_end":398711,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398712,"byte_end":398734,"line_start":490,"line_end":490,"column_start":1,"column_end":23}},{"value":"/   le_u64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398735,"byte_end":398771,"line_start":491,"line_end":491,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398772,"byte_end":398778,"line_start":492,"line_end":492,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398779,"byte_end":398782,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398783,"byte_end":398892,"line_start":494,"line_end":494,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398893,"byte_end":398968,"line_start":495,"line_end":495,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398969,"byte_end":398976,"line_start":496,"line_end":496,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":398977,"byte_end":398986,"line_start":497,"line_end":497,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2586},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400059,"byte_end":400066,"line_start":532,"line_end":532,"column_start":8,"column_end":15},"name":"le_u128","qualname":"::number::streaming::le_u128","value":"pub fn le_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 16 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":399439,"byte_end":399496,"line_start":515,"line_end":515,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":399497,"byte_end":399500,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":399501,"byte_end":399597,"line_start":517,"line_end":517,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":399598,"byte_end":399601,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":399602,"byte_end":399613,"line_start":519,"line_end":519,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":399614,"byte_end":399661,"line_start":520,"line_end":520,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u128;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":399662,"byte_end":399702,"line_start":521,"line_end":521,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":399703,"byte_end":399706,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":399707,"byte_end":399729,"line_start":523,"line_end":523,"column_start":1,"column_end":23}},{"value":"/   le_u128::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":399730,"byte_end":399767,"line_start":524,"line_end":524,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":399768,"byte_end":399774,"line_start":525,"line_end":525,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":399775,"byte_end":399778,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x15141312111009080706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":399779,"byte_end":399936,"line_start":527,"line_end":527,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":399937,"byte_end":400013,"line_start":528,"line_end":528,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400014,"byte_end":400021,"line_start":529,"line_end":529,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400022,"byte_end":400031,"line_start":530,"line_end":530,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400032,"byte_end":400051,"line_start":531,"line_end":531,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2589},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400975,"byte_end":400980,"line_start":562,"line_end":562,"column_start":8,"column_end":13},"name":"le_i8","qualname":"::number::streaming::le_i8","value":"pub fn le_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400509,"byte_end":400548,"line_start":549,"line_end":549,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400549,"byte_end":400552,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400553,"byte_end":400649,"line_start":551,"line_end":551,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400650,"byte_end":400661,"line_start":552,"line_end":552,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400662,"byte_end":400709,"line_start":553,"line_end":553,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400710,"byte_end":400748,"line_start":554,"line_end":554,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400749,"byte_end":400752,"line_start":555,"line_end":555,"column_start":1,"column_end":4}},{"value":"/ let parser = le_i8::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400753,"byte_end":400797,"line_start":556,"line_end":556,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400798,"byte_end":400801,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400802,"byte_end":400877,"line_start":558,"line_end":558,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400878,"byte_end":400949,"line_start":559,"line_end":559,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400950,"byte_end":400957,"line_start":560,"line_end":560,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":400958,"byte_end":400967,"line_start":561,"line_end":561,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2592},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401655,"byte_end":401661,"line_start":585,"line_end":585,"column_start":8,"column_end":14},"name":"le_i16","qualname":"::number::streaming::le_i16","value":"pub fn le_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 2 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401145,"byte_end":401199,"line_start":569,"line_end":569,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401200,"byte_end":401203,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401204,"byte_end":401300,"line_start":571,"line_end":571,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401301,"byte_end":401304,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401305,"byte_end":401316,"line_start":573,"line_end":573,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401317,"byte_end":401364,"line_start":574,"line_end":574,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i16;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401365,"byte_end":401404,"line_start":575,"line_end":575,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401405,"byte_end":401408,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401409,"byte_end":401431,"line_start":577,"line_end":577,"column_start":1,"column_end":23}},{"value":"/   le_i16::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401432,"byte_end":401468,"line_start":578,"line_end":578,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401469,"byte_end":401475,"line_start":579,"line_end":579,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401476,"byte_end":401479,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401480,"byte_end":401553,"line_start":581,"line_end":581,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401554,"byte_end":401629,"line_start":582,"line_end":582,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401630,"byte_end":401637,"line_start":583,"line_end":583,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401638,"byte_end":401647,"line_start":584,"line_end":584,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2595},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402345,"byte_end":402351,"line_start":608,"line_end":608,"column_start":8,"column_end":14},"name":"le_i24","qualname":"::number::streaming::le_i24","value":"pub fn le_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 3 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401829,"byte_end":401883,"line_start":592,"line_end":592,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401884,"byte_end":401887,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401888,"byte_end":401984,"line_start":594,"line_end":594,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401985,"byte_end":401988,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":401989,"byte_end":402000,"line_start":596,"line_end":596,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402001,"byte_end":402048,"line_start":597,"line_end":597,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i24;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402049,"byte_end":402088,"line_start":598,"line_end":598,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402089,"byte_end":402092,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402093,"byte_end":402115,"line_start":600,"line_end":600,"column_start":1,"column_end":23}},{"value":"/   le_i24::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402116,"byte_end":402152,"line_start":601,"line_end":601,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402153,"byte_end":402159,"line_start":602,"line_end":602,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402160,"byte_end":402163,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402164,"byte_end":402243,"line_start":604,"line_end":604,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402244,"byte_end":402319,"line_start":605,"line_end":605,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402320,"byte_end":402327,"line_start":606,"line_end":606,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402328,"byte_end":402337,"line_start":607,"line_end":607,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2598},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403191,"byte_end":403197,"line_start":636,"line_end":636,"column_start":8,"column_end":14},"name":"le_i32","qualname":"::number::streaming::le_i32","value":"pub fn le_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 4 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402669,"byte_end":402723,"line_start":620,"line_end":620,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402724,"byte_end":402727,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402728,"byte_end":402824,"line_start":622,"line_end":622,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402825,"byte_end":402828,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402829,"byte_end":402840,"line_start":624,"line_end":624,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402841,"byte_end":402888,"line_start":625,"line_end":625,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402889,"byte_end":402928,"line_start":626,"line_end":626,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402929,"byte_end":402932,"line_start":627,"line_end":627,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402933,"byte_end":402955,"line_start":628,"line_end":628,"column_start":1,"column_end":23}},{"value":"/   le_i32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402956,"byte_end":402992,"line_start":629,"line_end":629,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":402993,"byte_end":402999,"line_start":630,"line_end":630,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403000,"byte_end":403003,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x03020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403004,"byte_end":403089,"line_start":632,"line_end":632,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403090,"byte_end":403165,"line_start":633,"line_end":633,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403166,"byte_end":403173,"line_start":634,"line_end":634,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403174,"byte_end":403183,"line_start":635,"line_end":635,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2601},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403911,"byte_end":403917,"line_start":659,"line_end":659,"column_start":8,"column_end":14},"name":"le_i64","qualname":"::number::streaming::le_i64","value":"pub fn le_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 8 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403365,"byte_end":403419,"line_start":643,"line_end":643,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403420,"byte_end":403423,"line_start":644,"line_end":644,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403424,"byte_end":403520,"line_start":645,"line_end":645,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403521,"byte_end":403524,"line_start":646,"line_end":646,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403525,"byte_end":403536,"line_start":647,"line_end":647,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403537,"byte_end":403584,"line_start":648,"line_end":648,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403585,"byte_end":403624,"line_start":649,"line_end":649,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403625,"byte_end":403628,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403629,"byte_end":403651,"line_start":651,"line_end":651,"column_start":1,"column_end":23}},{"value":"/   le_i64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403652,"byte_end":403688,"line_start":652,"line_end":652,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403689,"byte_end":403695,"line_start":653,"line_end":653,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403696,"byte_end":403699,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403700,"byte_end":403809,"line_start":655,"line_end":655,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403810,"byte_end":403885,"line_start":656,"line_end":656,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403886,"byte_end":403893,"line_start":657,"line_end":657,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":403894,"byte_end":403903,"line_start":658,"line_end":658,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2604},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404703,"byte_end":404710,"line_start":683,"line_end":683,"column_start":8,"column_end":15},"name":"le_i128","qualname":"::number::streaming::le_i128","value":"pub fn le_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 16 bytes integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404085,"byte_end":404140,"line_start":666,"line_end":666,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404141,"byte_end":404144,"line_start":667,"line_end":667,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404145,"byte_end":404241,"line_start":668,"line_end":668,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404242,"byte_end":404245,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404246,"byte_end":404257,"line_start":670,"line_end":670,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404258,"byte_end":404305,"line_start":671,"line_end":671,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i128;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404306,"byte_end":404346,"line_start":672,"line_end":672,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404347,"byte_end":404350,"line_start":673,"line_end":673,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404351,"byte_end":404373,"line_start":674,"line_end":674,"column_start":1,"column_end":23}},{"value":"/   le_i128::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404374,"byte_end":404411,"line_start":675,"line_end":675,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404412,"byte_end":404418,"line_start":676,"line_end":676,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404419,"byte_end":404422,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x15141312111009080706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404423,"byte_end":404580,"line_start":678,"line_end":678,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404581,"byte_end":404657,"line_start":679,"line_end":679,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404658,"byte_end":404665,"line_start":680,"line_end":680,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404666,"byte_end":404675,"line_start":681,"line_end":681,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404676,"byte_end":404695,"line_start":682,"line_end":682,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2607},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405456,"byte_end":405458,"line_start":707,"line_end":707,"column_start":8,"column_end":10},"name":"u8","qualname":"::number::streaming::u8","value":"pub fn u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404881,"byte_end":404922,"line_start":690,"line_end":690,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404923,"byte_end":404926,"line_start":691,"line_end":691,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404927,"byte_end":404985,"line_start":692,"line_end":692,"column_start":1,"column_end":59}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":404986,"byte_end":405082,"line_start":693,"line_end":693,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405083,"byte_end":405094,"line_start":694,"line_end":694,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405095,"byte_end":405142,"line_start":695,"line_end":695,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405143,"byte_end":405171,"line_start":696,"line_end":696,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405172,"byte_end":405207,"line_start":697,"line_end":697,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405208,"byte_end":405211,"line_start":698,"line_end":698,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405212,"byte_end":405234,"line_start":699,"line_end":699,"column_start":1,"column_end":23}},{"value":"/   u8::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405235,"byte_end":405267,"line_start":700,"line_end":700,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405268,"byte_end":405274,"line_start":701,"line_end":701,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405275,"byte_end":405278,"line_start":702,"line_end":702,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405279,"byte_end":405358,"line_start":703,"line_end":703,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405359,"byte_end":405430,"line_start":704,"line_end":704,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405431,"byte_end":405438,"line_start":705,"line_end":705,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405439,"byte_end":405448,"line_start":706,"line_end":706,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2610},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406780,"byte_end":406783,"line_start":747,"line_end":747,"column_start":8,"column_end":11},"name":"u16","qualname":"::number::streaming::u16","value":"pub fn u16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 2 bytes integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 2 bytes integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405792,"byte_end":405834,"line_start":721,"line_end":721,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405835,"byte_end":405838,"line_start":722,"line_end":722,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u16 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405839,"byte_end":405926,"line_start":723,"line_end":723,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u16 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":405927,"byte_end":406012,"line_start":724,"line_end":724,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406013,"byte_end":406109,"line_start":725,"line_end":725,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406110,"byte_end":406113,"line_start":726,"line_end":726,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406114,"byte_end":406125,"line_start":727,"line_end":727,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406126,"byte_end":406173,"line_start":728,"line_end":728,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406174,"byte_end":406202,"line_start":729,"line_end":729,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u16;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406203,"byte_end":406239,"line_start":730,"line_end":730,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406240,"byte_end":406243,"line_start":731,"line_end":731,"column_start":1,"column_end":4}},{"value":"/ let be_u16 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406244,"byte_end":406266,"line_start":732,"line_end":732,"column_start":1,"column_end":23}},{"value":"/   u16::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406267,"byte_end":406330,"line_start":733,"line_end":733,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406331,"byte_end":406337,"line_start":734,"line_end":734,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406338,"byte_end":406341,"line_start":735,"line_end":735,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406342,"byte_end":406419,"line_start":736,"line_end":736,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_u16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406420,"byte_end":406495,"line_start":737,"line_end":737,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406496,"byte_end":406499,"line_start":738,"line_end":738,"column_start":1,"column_end":4}},{"value":"/ let le_u16 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406500,"byte_end":406522,"line_start":739,"line_end":739,"column_start":1,"column_end":23}},{"value":"/   u16::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406523,"byte_end":406589,"line_start":740,"line_end":740,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406590,"byte_end":406596,"line_start":741,"line_end":741,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406597,"byte_end":406600,"line_start":742,"line_end":742,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406601,"byte_end":406678,"line_start":743,"line_end":743,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_u16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406679,"byte_end":406754,"line_start":744,"line_end":744,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406755,"byte_end":406762,"line_start":745,"line_end":745,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":406763,"byte_end":406772,"line_start":746,"line_end":746,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2613},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":408228,"byte_end":408231,"line_start":786,"line_end":786,"column_start":8,"column_end":11},"name":"u24","qualname":"::number::streaming::u24","value":"pub fn u24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 3 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407234,"byte_end":407275,"line_start":761,"line_end":761,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407276,"byte_end":407279,"line_start":762,"line_end":762,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u24 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407280,"byte_end":407367,"line_start":763,"line_end":763,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u24 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407368,"byte_end":407453,"line_start":764,"line_end":764,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407454,"byte_end":407550,"line_start":765,"line_end":765,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407551,"byte_end":407562,"line_start":766,"line_end":766,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407563,"byte_end":407610,"line_start":767,"line_end":767,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407611,"byte_end":407639,"line_start":768,"line_end":768,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u24;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407640,"byte_end":407676,"line_start":769,"line_end":769,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407677,"byte_end":407680,"line_start":770,"line_end":770,"column_start":1,"column_end":4}},{"value":"/ let be_u24 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407681,"byte_end":407703,"line_start":771,"line_end":771,"column_start":1,"column_end":23}},{"value":"/   u24::<_,(_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407704,"byte_end":407766,"line_start":772,"line_end":772,"column_start":1,"column_end":63}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407767,"byte_end":407773,"line_start":773,"line_end":773,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407774,"byte_end":407777,"line_start":774,"line_end":774,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407778,"byte_end":407861,"line_start":775,"line_end":775,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_u24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407862,"byte_end":407937,"line_start":776,"line_end":776,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407938,"byte_end":407941,"line_start":777,"line_end":777,"column_start":1,"column_end":4}},{"value":"/ let le_u24 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407942,"byte_end":407964,"line_start":778,"line_end":778,"column_start":1,"column_end":23}},{"value":"/   u24::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":407965,"byte_end":408031,"line_start":779,"line_end":779,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":408032,"byte_end":408038,"line_start":780,"line_end":780,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":408039,"byte_end":408042,"line_start":781,"line_end":781,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":408043,"byte_end":408126,"line_start":782,"line_end":782,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_u24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":408127,"byte_end":408202,"line_start":783,"line_end":783,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":408203,"byte_end":408210,"line_start":784,"line_end":784,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":408211,"byte_end":408220,"line_start":785,"line_end":785,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2616},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409689,"byte_end":409692,"line_start":825,"line_end":825,"column_start":8,"column_end":11},"name":"u32","qualname":"::number::streaming::u32","value":"pub fn u32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 4 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":408682,"byte_end":408723,"line_start":800,"line_end":800,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":408724,"byte_end":408727,"line_start":801,"line_end":801,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u32 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":408728,"byte_end":408815,"line_start":802,"line_end":802,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u32 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":408816,"byte_end":408901,"line_start":803,"line_end":803,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":408902,"byte_end":408998,"line_start":804,"line_end":804,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":408999,"byte_end":409010,"line_start":805,"line_end":805,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409011,"byte_end":409058,"line_start":806,"line_end":806,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409059,"byte_end":409087,"line_start":807,"line_end":807,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409088,"byte_end":409124,"line_start":808,"line_end":808,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409125,"byte_end":409128,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ let be_u32 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409129,"byte_end":409151,"line_start":810,"line_end":810,"column_start":1,"column_end":23}},{"value":"/   u32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409152,"byte_end":409215,"line_start":811,"line_end":811,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409216,"byte_end":409222,"line_start":812,"line_end":812,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409223,"byte_end":409226,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409227,"byte_end":409316,"line_start":814,"line_end":814,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_u32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409317,"byte_end":409392,"line_start":815,"line_end":815,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409393,"byte_end":409396,"line_start":816,"line_end":816,"column_start":1,"column_end":4}},{"value":"/ let le_u32 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409397,"byte_end":409419,"line_start":817,"line_end":817,"column_start":1,"column_end":23}},{"value":"/   u32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409420,"byte_end":409486,"line_start":818,"line_end":818,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409487,"byte_end":409493,"line_start":819,"line_end":819,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409494,"byte_end":409497,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409498,"byte_end":409587,"line_start":821,"line_end":821,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_u32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409588,"byte_end":409663,"line_start":822,"line_end":822,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409664,"byte_end":409671,"line_start":823,"line_end":823,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":409672,"byte_end":409681,"line_start":824,"line_end":824,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2619},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":411198,"byte_end":411201,"line_start":864,"line_end":864,"column_start":8,"column_end":11},"name":"u64","qualname":"::number::streaming::u64","value":"pub fn u64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 8 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410143,"byte_end":410184,"line_start":839,"line_end":839,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410185,"byte_end":410188,"line_start":840,"line_end":840,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u64 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410189,"byte_end":410276,"line_start":841,"line_end":841,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u64 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410277,"byte_end":410362,"line_start":842,"line_end":842,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410363,"byte_end":410459,"line_start":843,"line_end":843,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410460,"byte_end":410471,"line_start":844,"line_end":844,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410472,"byte_end":410519,"line_start":845,"line_end":845,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410520,"byte_end":410548,"line_start":846,"line_end":846,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410549,"byte_end":410585,"line_start":847,"line_end":847,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410586,"byte_end":410589,"line_start":848,"line_end":848,"column_start":1,"column_end":4}},{"value":"/ let be_u64 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410590,"byte_end":410612,"line_start":849,"line_end":849,"column_start":1,"column_end":23}},{"value":"/   u64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410613,"byte_end":410676,"line_start":850,"line_end":850,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410677,"byte_end":410683,"line_start":851,"line_end":851,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410684,"byte_end":410687,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410688,"byte_end":410801,"line_start":853,"line_end":853,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_u64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410802,"byte_end":410877,"line_start":854,"line_end":854,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410878,"byte_end":410881,"line_start":855,"line_end":855,"column_start":1,"column_end":4}},{"value":"/ let le_u64 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410882,"byte_end":410904,"line_start":856,"line_end":856,"column_start":1,"column_end":23}},{"value":"/   u64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410905,"byte_end":410971,"line_start":857,"line_end":857,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410972,"byte_end":410978,"line_start":858,"line_end":858,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410979,"byte_end":410982,"line_start":859,"line_end":859,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":410983,"byte_end":411096,"line_start":860,"line_end":860,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_u64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":411097,"byte_end":411172,"line_start":861,"line_end":861,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":411173,"byte_end":411180,"line_start":862,"line_end":862,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":411181,"byte_end":411190,"line_start":863,"line_end":863,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2622},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412837,"byte_end":412841,"line_start":904,"line_end":904,"column_start":8,"column_end":12},"name":"u128","qualname":"::number::streaming::u128","value":"pub fn u128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 16 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":411652,"byte_end":411694,"line_start":878,"line_end":878,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":411695,"byte_end":411698,"line_start":879,"line_end":879,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u128 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":411699,"byte_end":411787,"line_start":880,"line_end":880,"column_start":1,"column_end":89}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u128 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":411788,"byte_end":411874,"line_start":881,"line_end":881,"column_start":1,"column_end":87}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":411875,"byte_end":411971,"line_start":882,"line_end":882,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":411972,"byte_end":411983,"line_start":883,"line_end":883,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":411984,"byte_end":412031,"line_start":884,"line_end":884,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412032,"byte_end":412060,"line_start":885,"line_end":885,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u128;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412061,"byte_end":412098,"line_start":886,"line_end":886,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412099,"byte_end":412102,"line_start":887,"line_end":887,"column_start":1,"column_end":4}},{"value":"/ let be_u128 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412103,"byte_end":412126,"line_start":888,"line_end":888,"column_start":1,"column_end":24}},{"value":"/   u128::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412127,"byte_end":412191,"line_start":889,"line_end":889,"column_start":1,"column_end":65}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412192,"byte_end":412198,"line_start":890,"line_end":890,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412199,"byte_end":412202,"line_start":891,"line_end":891,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412203,"byte_end":412365,"line_start":892,"line_end":892,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_u128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412366,"byte_end":412443,"line_start":893,"line_end":893,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412444,"byte_end":412447,"line_start":894,"line_end":894,"column_start":1,"column_end":4}},{"value":"/ let le_u128 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412448,"byte_end":412471,"line_start":895,"line_end":895,"column_start":1,"column_end":24}},{"value":"/   u128::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412472,"byte_end":412539,"line_start":896,"line_end":896,"column_start":1,"column_end":68}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412540,"byte_end":412546,"line_start":897,"line_end":897,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412547,"byte_end":412550,"line_start":898,"line_end":898,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412551,"byte_end":412713,"line_start":899,"line_end":899,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_u128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412714,"byte_end":412791,"line_start":900,"line_end":900,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412792,"byte_end":412799,"line_start":901,"line_end":901,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412800,"byte_end":412809,"line_start":902,"line_end":902,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":412810,"byte_end":412829,"line_start":903,"line_end":903,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2625},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413869,"byte_end":413871,"line_start":935,"line_end":935,"column_start":8,"column_end":10},"name":"i8","qualname":"::number::streaming::i8","value":"pub fn i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413297,"byte_end":413335,"line_start":918,"line_end":918,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413336,"byte_end":413339,"line_start":919,"line_end":919,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413340,"byte_end":413398,"line_start":920,"line_end":920,"column_start":1,"column_end":59}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413399,"byte_end":413495,"line_start":921,"line_end":921,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413496,"byte_end":413507,"line_start":922,"line_end":922,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413508,"byte_end":413555,"line_start":923,"line_end":923,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413556,"byte_end":413584,"line_start":924,"line_end":924,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i8;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413585,"byte_end":413620,"line_start":925,"line_end":925,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413621,"byte_end":413624,"line_start":926,"line_end":926,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413625,"byte_end":413647,"line_start":927,"line_end":927,"column_start":1,"column_end":23}},{"value":"/   i8::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413648,"byte_end":413680,"line_start":928,"line_end":928,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413681,"byte_end":413687,"line_start":929,"line_end":929,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413688,"byte_end":413691,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413692,"byte_end":413771,"line_start":931,"line_end":931,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413772,"byte_end":413843,"line_start":932,"line_end":932,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413844,"byte_end":413851,"line_start":933,"line_end":933,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":413852,"byte_end":413861,"line_start":934,"line_end":934,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2628},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":415005,"byte_end":415008,"line_start":967,"line_end":967,"column_start":8,"column_end":11},"name":"i16","qualname":"::number::streaming::i16","value":"pub fn i16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 2 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 2 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414025,"byte_end":414063,"line_start":942,"line_end":942,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414064,"byte_end":414067,"line_start":943,"line_end":943,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i16 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414068,"byte_end":414155,"line_start":944,"line_end":944,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i16 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414156,"byte_end":414241,"line_start":945,"line_end":945,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414242,"byte_end":414338,"line_start":946,"line_end":946,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414339,"byte_end":414350,"line_start":947,"line_end":947,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414351,"byte_end":414398,"line_start":948,"line_end":948,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414399,"byte_end":414427,"line_start":949,"line_end":949,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i16;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414428,"byte_end":414464,"line_start":950,"line_end":950,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414465,"byte_end":414468,"line_start":951,"line_end":951,"column_start":1,"column_end":4}},{"value":"/ let be_i16 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414469,"byte_end":414491,"line_start":952,"line_end":952,"column_start":1,"column_end":23}},{"value":"/   i16::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414492,"byte_end":414555,"line_start":953,"line_end":953,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414556,"byte_end":414562,"line_start":954,"line_end":954,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414563,"byte_end":414566,"line_start":955,"line_end":955,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414567,"byte_end":414644,"line_start":956,"line_end":956,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_i16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414645,"byte_end":414720,"line_start":957,"line_end":957,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414721,"byte_end":414724,"line_start":958,"line_end":958,"column_start":1,"column_end":4}},{"value":"/ let le_i16 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414725,"byte_end":414747,"line_start":959,"line_end":959,"column_start":1,"column_end":23}},{"value":"/   i16::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414748,"byte_end":414814,"line_start":960,"line_end":960,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414815,"byte_end":414821,"line_start":961,"line_end":961,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414822,"byte_end":414825,"line_start":962,"line_end":962,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414826,"byte_end":414903,"line_start":963,"line_end":963,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_i16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414904,"byte_end":414979,"line_start":964,"line_end":964,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414980,"byte_end":414987,"line_start":965,"line_end":965,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":414988,"byte_end":414997,"line_start":966,"line_end":966,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2631},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":416451,"byte_end":416454,"line_start":1006,"line_end":1006,"column_start":8,"column_end":11},"name":"i24","qualname":"::number::streaming::i24","value":"pub fn i24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 3 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":415459,"byte_end":415497,"line_start":981,"line_end":981,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":415498,"byte_end":415501,"line_start":982,"line_end":982,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i24 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":415502,"byte_end":415589,"line_start":983,"line_end":983,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i24 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":415590,"byte_end":415675,"line_start":984,"line_end":984,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":415676,"byte_end":415772,"line_start":985,"line_end":985,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":415773,"byte_end":415784,"line_start":986,"line_end":986,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":415785,"byte_end":415832,"line_start":987,"line_end":987,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":415833,"byte_end":415861,"line_start":988,"line_end":988,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i24;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":415862,"byte_end":415898,"line_start":989,"line_end":989,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":415899,"byte_end":415902,"line_start":990,"line_end":990,"column_start":1,"column_end":4}},{"value":"/ let be_i24 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":415903,"byte_end":415925,"line_start":991,"line_end":991,"column_start":1,"column_end":23}},{"value":"/   i24::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":415926,"byte_end":415989,"line_start":992,"line_end":992,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":415990,"byte_end":415996,"line_start":993,"line_end":993,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":415997,"byte_end":416000,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":416001,"byte_end":416084,"line_start":995,"line_end":995,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_i24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":416085,"byte_end":416160,"line_start":996,"line_end":996,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":416161,"byte_end":416164,"line_start":997,"line_end":997,"column_start":1,"column_end":4}},{"value":"/ let le_i24 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":416165,"byte_end":416187,"line_start":998,"line_end":998,"column_start":1,"column_end":23}},{"value":"/   i24::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":416188,"byte_end":416254,"line_start":999,"line_end":999,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":416255,"byte_end":416261,"line_start":1000,"line_end":1000,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":416262,"byte_end":416265,"line_start":1001,"line_end":1001,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":416266,"byte_end":416349,"line_start":1002,"line_end":1002,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_i24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":416350,"byte_end":416425,"line_start":1003,"line_end":1003,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":416426,"byte_end":416433,"line_start":1004,"line_end":1004,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":416434,"byte_end":416443,"line_start":1005,"line_end":1005,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2634},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417909,"byte_end":417912,"line_start":1045,"line_end":1045,"column_start":8,"column_end":11},"name":"i32","qualname":"::number::streaming::i32","value":"pub fn i32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 4 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":416905,"byte_end":416943,"line_start":1020,"line_end":1020,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":416944,"byte_end":416947,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i32 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":416948,"byte_end":417035,"line_start":1022,"line_end":1022,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i32 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417036,"byte_end":417121,"line_start":1023,"line_end":1023,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417122,"byte_end":417218,"line_start":1024,"line_end":1024,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417219,"byte_end":417230,"line_start":1025,"line_end":1025,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417231,"byte_end":417278,"line_start":1026,"line_end":1026,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417279,"byte_end":417307,"line_start":1027,"line_end":1027,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417308,"byte_end":417344,"line_start":1028,"line_end":1028,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417345,"byte_end":417348,"line_start":1029,"line_end":1029,"column_start":1,"column_end":4}},{"value":"/ let be_i32 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417349,"byte_end":417371,"line_start":1030,"line_end":1030,"column_start":1,"column_end":23}},{"value":"/   i32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417372,"byte_end":417435,"line_start":1031,"line_end":1031,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417436,"byte_end":417442,"line_start":1032,"line_end":1032,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417443,"byte_end":417446,"line_start":1033,"line_end":1033,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417447,"byte_end":417536,"line_start":1034,"line_end":1034,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_i32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417537,"byte_end":417612,"line_start":1035,"line_end":1035,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417613,"byte_end":417616,"line_start":1036,"line_end":1036,"column_start":1,"column_end":4}},{"value":"/ let le_i32 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417617,"byte_end":417639,"line_start":1037,"line_end":1037,"column_start":1,"column_end":23}},{"value":"/   i32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417640,"byte_end":417706,"line_start":1038,"line_end":1038,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417707,"byte_end":417713,"line_start":1039,"line_end":1039,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417714,"byte_end":417717,"line_start":1040,"line_end":1040,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417718,"byte_end":417807,"line_start":1041,"line_end":1041,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_i32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417808,"byte_end":417883,"line_start":1042,"line_end":1042,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417884,"byte_end":417891,"line_start":1043,"line_end":1043,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":417892,"byte_end":417901,"line_start":1044,"line_end":1044,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2637},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":419415,"byte_end":419418,"line_start":1084,"line_end":1084,"column_start":8,"column_end":11},"name":"i64","qualname":"::number::streaming::i64","value":"pub fn i64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 8 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":418363,"byte_end":418401,"line_start":1059,"line_end":1059,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":418402,"byte_end":418405,"line_start":1060,"line_end":1060,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i64 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":418406,"byte_end":418493,"line_start":1061,"line_end":1061,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i64 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":418494,"byte_end":418579,"line_start":1062,"line_end":1062,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":418580,"byte_end":418676,"line_start":1063,"line_end":1063,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":418677,"byte_end":418688,"line_start":1064,"line_end":1064,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":418689,"byte_end":418736,"line_start":1065,"line_end":1065,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":418737,"byte_end":418765,"line_start":1066,"line_end":1066,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":418766,"byte_end":418802,"line_start":1067,"line_end":1067,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":418803,"byte_end":418806,"line_start":1068,"line_end":1068,"column_start":1,"column_end":4}},{"value":"/ let be_i64 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":418807,"byte_end":418829,"line_start":1069,"line_end":1069,"column_start":1,"column_end":23}},{"value":"/   i64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":418830,"byte_end":418893,"line_start":1070,"line_end":1070,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":418894,"byte_end":418900,"line_start":1071,"line_end":1071,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":418901,"byte_end":418904,"line_start":1072,"line_end":1072,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":418905,"byte_end":419018,"line_start":1073,"line_end":1073,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_i64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":419019,"byte_end":419094,"line_start":1074,"line_end":1074,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":419095,"byte_end":419098,"line_start":1075,"line_end":1075,"column_start":1,"column_end":4}},{"value":"/ let le_i64 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":419099,"byte_end":419121,"line_start":1076,"line_end":1076,"column_start":1,"column_end":23}},{"value":"/   i64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":419122,"byte_end":419188,"line_start":1077,"line_end":1077,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":419189,"byte_end":419195,"line_start":1078,"line_end":1078,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":419196,"byte_end":419199,"line_start":1079,"line_end":1079,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":419200,"byte_end":419313,"line_start":1080,"line_end":1080,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_i64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":419314,"byte_end":419389,"line_start":1081,"line_end":1081,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":419390,"byte_end":419397,"line_start":1082,"line_end":1082,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":419398,"byte_end":419407,"line_start":1083,"line_end":1083,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2640},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421051,"byte_end":421055,"line_start":1124,"line_end":1124,"column_start":8,"column_end":12},"name":"i128","qualname":"::number::streaming::i128","value":"pub fn i128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 16 byte integer","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":419869,"byte_end":419908,"line_start":1098,"line_end":1098,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":419909,"byte_end":419912,"line_start":1099,"line_end":1099,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i128 integer,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":419913,"byte_end":420001,"line_start":1100,"line_end":1100,"column_start":1,"column_end":89}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i128 integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420002,"byte_end":420088,"line_start":1101,"line_end":1101,"column_start":1,"column_end":87}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420089,"byte_end":420185,"line_start":1102,"line_end":1102,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420186,"byte_end":420197,"line_start":1103,"line_end":1103,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420198,"byte_end":420245,"line_start":1104,"line_end":1104,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420246,"byte_end":420274,"line_start":1105,"line_end":1105,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i128;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420275,"byte_end":420312,"line_start":1106,"line_end":1106,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420313,"byte_end":420316,"line_start":1107,"line_end":1107,"column_start":1,"column_end":4}},{"value":"/ let be_i128 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420317,"byte_end":420340,"line_start":1108,"line_end":1108,"column_start":1,"column_end":24}},{"value":"/   i128::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420341,"byte_end":420405,"line_start":1109,"line_end":1109,"column_start":1,"column_end":65}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420406,"byte_end":420412,"line_start":1110,"line_end":1110,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420413,"byte_end":420416,"line_start":1111,"line_end":1111,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420417,"byte_end":420579,"line_start":1112,"line_end":1112,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_i128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420580,"byte_end":420657,"line_start":1113,"line_end":1113,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420658,"byte_end":420661,"line_start":1114,"line_end":1114,"column_start":1,"column_end":4}},{"value":"/ let le_i128 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420662,"byte_end":420685,"line_start":1115,"line_end":1115,"column_start":1,"column_end":24}},{"value":"/   i128::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420686,"byte_end":420753,"line_start":1116,"line_end":1116,"column_start":1,"column_end":68}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420754,"byte_end":420760,"line_start":1117,"line_end":1117,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420761,"byte_end":420764,"line_start":1118,"line_end":1118,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420765,"byte_end":420927,"line_start":1119,"line_end":1119,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_i128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":420928,"byte_end":421005,"line_start":1120,"line_end":1120,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421006,"byte_end":421013,"line_start":1121,"line_end":1121,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421014,"byte_end":421023,"line_start":1122,"line_end":1122,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421024,"byte_end":421043,"line_start":1123,"line_end":1123,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2643},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422027,"byte_end":422033,"line_start":1153,"line_end":1153,"column_start":8,"column_end":14},"name":"be_f32","qualname":"::number::streaming::be_f32","value":"pub fn be_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 4 bytes floating point number.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421511,"byte_end":421569,"line_start":1138,"line_end":1138,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421570,"byte_end":421573,"line_start":1139,"line_end":1139,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421574,"byte_end":421670,"line_start":1140,"line_end":1140,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421671,"byte_end":421682,"line_start":1141,"line_end":1141,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421683,"byte_end":421730,"line_start":1142,"line_end":1142,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_f32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421731,"byte_end":421770,"line_start":1143,"line_end":1143,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421771,"byte_end":421774,"line_start":1144,"line_end":1144,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421775,"byte_end":421797,"line_start":1145,"line_end":1145,"column_start":1,"column_end":23}},{"value":"/   be_f32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421798,"byte_end":421834,"line_start":1146,"line_end":1146,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421835,"byte_end":421841,"line_start":1147,"line_end":1147,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421842,"byte_end":421845,"line_start":1148,"line_end":1148,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x40, 0x29, 0x00, 0x00][..]), Ok((&b\"\"[..], 2.640625)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421846,"byte_end":421926,"line_start":1149,"line_end":1149,"column_start":1,"column_end":81}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":421927,"byte_end":422001,"line_start":1150,"line_end":1150,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422002,"byte_end":422009,"line_start":1151,"line_end":1151,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422010,"byte_end":422019,"line_start":1152,"line_end":1152,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2646},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422797,"byte_end":422803,"line_start":1178,"line_end":1178,"column_start":8,"column_end":14},"name":"be_f64","qualname":"::number::streaming::be_f64","value":"pub fn be_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 8 bytes floating point number.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422261,"byte_end":422319,"line_start":1163,"line_end":1163,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422320,"byte_end":422323,"line_start":1164,"line_end":1164,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422324,"byte_end":422420,"line_start":1165,"line_end":1165,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422421,"byte_end":422432,"line_start":1166,"line_end":1166,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422433,"byte_end":422480,"line_start":1167,"line_end":1167,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_f64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422481,"byte_end":422520,"line_start":1168,"line_end":1168,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422521,"byte_end":422524,"line_start":1169,"line_end":1169,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422525,"byte_end":422547,"line_start":1170,"line_end":1170,"column_start":1,"column_end":23}},{"value":"/   be_f64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422548,"byte_end":422584,"line_start":1171,"line_end":1171,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422585,"byte_end":422591,"line_start":1172,"line_end":1172,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422592,"byte_end":422595,"line_start":1173,"line_end":1173,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422596,"byte_end":422696,"line_start":1174,"line_end":1174,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422697,"byte_end":422771,"line_start":1175,"line_end":1175,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422772,"byte_end":422779,"line_start":1176,"line_end":1176,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":422780,"byte_end":422789,"line_start":1177,"line_end":1177,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2649},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423546,"byte_end":423552,"line_start":1203,"line_end":1203,"column_start":8,"column_end":14},"name":"le_f32","qualname":"::number::streaming::le_f32","value":"pub fn le_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 4 bytes floating point number.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423031,"byte_end":423092,"line_start":1188,"line_end":1188,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423093,"byte_end":423096,"line_start":1189,"line_end":1189,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423097,"byte_end":423193,"line_start":1190,"line_end":1190,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423194,"byte_end":423205,"line_start":1191,"line_end":1191,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423206,"byte_end":423253,"line_start":1192,"line_end":1192,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_f32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423254,"byte_end":423293,"line_start":1193,"line_end":1193,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423294,"byte_end":423297,"line_start":1194,"line_end":1194,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423298,"byte_end":423320,"line_start":1195,"line_end":1195,"column_start":1,"column_end":23}},{"value":"/   le_f32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423321,"byte_end":423357,"line_start":1196,"line_end":1196,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423358,"byte_end":423364,"line_start":1197,"line_end":1197,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423365,"byte_end":423368,"line_start":1198,"line_end":1198,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423369,"byte_end":423445,"line_start":1199,"line_end":1199,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423446,"byte_end":423520,"line_start":1200,"line_end":1200,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423521,"byte_end":423528,"line_start":1201,"line_end":1201,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423529,"byte_end":423538,"line_start":1202,"line_end":1202,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2652},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424324,"byte_end":424330,"line_start":1228,"line_end":1228,"column_start":8,"column_end":14},"name":"le_f64","qualname":"::number::streaming::le_f64","value":"pub fn le_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 8 bytes floating point number.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423780,"byte_end":423841,"line_start":1213,"line_end":1213,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423842,"byte_end":423845,"line_start":1214,"line_end":1214,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423846,"byte_end":423942,"line_start":1215,"line_end":1215,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423943,"byte_end":423954,"line_start":1216,"line_end":1216,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":423955,"byte_end":424002,"line_start":1217,"line_end":1217,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_f64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424003,"byte_end":424042,"line_start":1218,"line_end":1218,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424043,"byte_end":424046,"line_start":1219,"line_end":1219,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424047,"byte_end":424069,"line_start":1220,"line_end":1220,"column_start":1,"column_end":23}},{"value":"/   le_f64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424070,"byte_end":424106,"line_start":1221,"line_end":1221,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424107,"byte_end":424113,"line_start":1222,"line_end":1222,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424114,"byte_end":424117,"line_start":1223,"line_end":1223,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 3145728.0)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424118,"byte_end":424223,"line_start":1224,"line_end":1224,"column_start":1,"column_end":106}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424224,"byte_end":424298,"line_start":1225,"line_end":1225,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424299,"byte_end":424306,"line_start":1226,"line_end":1226,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424307,"byte_end":424316,"line_start":1227,"line_end":1227,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2655},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425537,"byte_end":425540,"line_start":1263,"line_end":1263,"column_start":8,"column_end":11},"name":"f32","qualname":"::number::streaming::f32","value":"pub fn f32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a 4 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes a 4 byte floating point number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424558,"byte_end":424603,"line_start":1238,"line_end":1238,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424604,"byte_end":424607,"line_start":1239,"line_end":1239,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian f32 float,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424608,"byte_end":424693,"line_start":1240,"line_end":1240,"column_start":1,"column_end":86}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian f32 float.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424694,"byte_end":424777,"line_start":1241,"line_end":1241,"column_start":1,"column_end":84}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424778,"byte_end":424874,"line_start":1242,"line_end":1242,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424875,"byte_end":424886,"line_start":1243,"line_end":1243,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424887,"byte_end":424934,"line_start":1244,"line_end":1244,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424935,"byte_end":424963,"line_start":1245,"line_end":1245,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::f32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":424964,"byte_end":425000,"line_start":1246,"line_end":1246,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425001,"byte_end":425004,"line_start":1247,"line_end":1247,"column_start":1,"column_end":4}},{"value":"/ let be_f32 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425005,"byte_end":425027,"line_start":1248,"line_end":1248,"column_start":1,"column_end":23}},{"value":"/   f32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425028,"byte_end":425091,"line_start":1249,"line_end":1249,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425092,"byte_end":425098,"line_start":1250,"line_end":1250,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425099,"byte_end":425102,"line_start":1251,"line_end":1251,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f32(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425103,"byte_end":425179,"line_start":1252,"line_end":1252,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(be_f32(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425180,"byte_end":425254,"line_start":1253,"line_end":1253,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425255,"byte_end":425258,"line_start":1254,"line_end":1254,"column_start":1,"column_end":4}},{"value":"/ let le_f32 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425259,"byte_end":425281,"line_start":1255,"line_end":1255,"column_start":1,"column_end":23}},{"value":"/   f32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425282,"byte_end":425348,"line_start":1256,"line_end":1256,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425349,"byte_end":425355,"line_start":1257,"line_end":1257,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425356,"byte_end":425359,"line_start":1258,"line_end":1258,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f32(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425360,"byte_end":425436,"line_start":1259,"line_end":1259,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(le_f32(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425437,"byte_end":425511,"line_start":1260,"line_end":1260,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425512,"byte_end":425519,"line_start":1261,"line_end":1261,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425520,"byte_end":425529,"line_start":1262,"line_end":1262,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2658},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427019,"byte_end":427022,"line_start":1302,"line_end":1302,"column_start":8,"column_end":11},"name":"f64","qualname":"::number::streaming::f64","value":"pub fn f64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an 8 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes an 8 byte floating point number","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":425991,"byte_end":426037,"line_start":1277,"line_end":1277,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426038,"byte_end":426041,"line_start":1278,"line_end":1278,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian f64 float,","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426042,"byte_end":426127,"line_start":1279,"line_end":1279,"column_start":1,"column_end":86}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian f64 float.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426128,"byte_end":426211,"line_start":1280,"line_end":1280,"column_start":1,"column_end":84}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426212,"byte_end":426308,"line_start":1281,"line_end":1281,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426309,"byte_end":426320,"line_start":1282,"line_end":1282,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426321,"byte_end":426368,"line_start":1283,"line_end":1283,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426369,"byte_end":426397,"line_start":1284,"line_end":1284,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::f64;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426398,"byte_end":426434,"line_start":1285,"line_end":1285,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426435,"byte_end":426438,"line_start":1286,"line_end":1286,"column_start":1,"column_end":4}},{"value":"/ let be_f64 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426439,"byte_end":426461,"line_start":1287,"line_end":1287,"column_start":1,"column_end":23}},{"value":"/   f64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426462,"byte_end":426525,"line_start":1288,"line_end":1288,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426526,"byte_end":426532,"line_start":1289,"line_end":1289,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426533,"byte_end":426536,"line_start":1290,"line_end":1290,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f64(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426537,"byte_end":426637,"line_start":1291,"line_end":1291,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(be_f64(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(5))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426638,"byte_end":426712,"line_start":1292,"line_end":1292,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426713,"byte_end":426716,"line_start":1293,"line_end":1293,"column_start":1,"column_end":4}},{"value":"/ let le_f64 = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426717,"byte_end":426739,"line_start":1294,"line_end":1294,"column_start":1,"column_end":23}},{"value":"/   f64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426740,"byte_end":426806,"line_start":1295,"line_end":1295,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426807,"byte_end":426813,"line_start":1296,"line_end":1296,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426814,"byte_end":426817,"line_start":1297,"line_end":1297,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f64(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426818,"byte_end":426918,"line_start":1298,"line_end":1298,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(le_f64(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(5))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426919,"byte_end":426993,"line_start":1299,"line_end":1299,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":426994,"byte_end":427001,"line_start":1300,"line_end":1300,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427002,"byte_end":427011,"line_start":1301,"line_end":1301,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2661},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":428002,"byte_end":428009,"line_start":1332,"line_end":1332,"column_start":8,"column_end":15},"name":"hex_u32","qualname":"::number::streaming::hex_u32","value":"pub fn hex_u32<'a, E: ParseError<&'a [u8]>>(&'a [u8])\n-> IResult<&'a [u8], u32, E>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a hex-encoded integer.","sig":null,"attributes":[{"value":"/ Recognizes a hex-encoded integer.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427473,"byte_end":427510,"line_start":1316,"line_end":1316,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427511,"byte_end":427514,"line_start":1317,"line_end":1317,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427515,"byte_end":427611,"line_start":1318,"line_end":1318,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427612,"byte_end":427623,"line_start":1319,"line_end":1319,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427624,"byte_end":427671,"line_start":1320,"line_end":1320,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::hex_u32;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427672,"byte_end":427712,"line_start":1321,"line_end":1321,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427713,"byte_end":427716,"line_start":1322,"line_end":1322,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427717,"byte_end":427739,"line_start":1323,"line_end":1323,"column_start":1,"column_end":23}},{"value":"/   hex_u32(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427740,"byte_end":427756,"line_start":1324,"line_end":1324,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427757,"byte_end":427763,"line_start":1325,"line_end":1325,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427764,"byte_end":427767,"line_start":1326,"line_end":1326,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(b\"01AE;\"), Ok((&b\";\"[..], 0x01AE)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427768,"byte_end":427826,"line_start":1327,"line_end":1327,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(parser(b\"abc\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427827,"byte_end":427896,"line_start":1328,"line_end":1328,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(b\"ggg\"), Err(Err::Error((&b\"ggg\"[..], ErrorKind::IsA))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427897,"byte_end":427976,"line_start":1329,"line_end":1329,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427977,"byte_end":427984,"line_start":1330,"line_end":1330,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":427985,"byte_end":427994,"line_start":1331,"line_end":1331,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6047},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":429191,"byte_end":429206,"line_start":1373,"line_end":1373,"column_start":8,"column_end":23},"name":"recognize_float","qualname":"::number::streaming::recognize_float","value":"pub fn recognize_float<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter, <T as InputIter>::Item: AsChar, T: InputTakeAtPosition +\nInputLength, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a floating point number in text format and returns the corresponding part of the input.","sig":null,"attributes":[{"value":"/ Recognizes a floating point number in text format and returns the corresponding part of the input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":428534,"byte_end":428636,"line_start":1355,"line_end":1355,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":428637,"byte_end":428640,"line_start":1356,"line_end":1356,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if it reaches the end of input.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":428641,"byte_end":428740,"line_start":1357,"line_end":1357,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":428741,"byte_end":428744,"line_start":1358,"line_end":1358,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":428745,"byte_end":428756,"line_start":1359,"line_end":1359,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":428757,"byte_end":428804,"line_start":1360,"line_end":1360,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::recognize_float;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":428805,"byte_end":428853,"line_start":1361,"line_end":1361,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":428854,"byte_end":428857,"line_start":1362,"line_end":1362,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":428858,"byte_end":428880,"line_start":1363,"line_end":1363,"column_start":1,"column_end":23}},{"value":"/   recognize_float(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":428881,"byte_end":428905,"line_start":1364,"line_end":1364,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":428906,"byte_end":428912,"line_start":1365,"line_end":1365,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":428913,"byte_end":428916,"line_start":1366,"line_end":1366,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1;\"), Ok((\";\", \"11e-1\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":428917,"byte_end":428970,"line_start":1367,"line_end":1367,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"123E-02;\"), Ok((\";\", \"123E-02\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":428971,"byte_end":429028,"line_start":1368,"line_end":1368,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", \"123\")));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":429029,"byte_end":429084,"line_start":1369,"line_end":1369,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":429085,"byte_end":429158,"line_start":1370,"line_end":1370,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":429159,"byte_end":429166,"line_start":1371,"line_end":1371,"column_start":1,"column_end":8}},{"value":"rustfmt::skip","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":429167,"byte_end":429183,"line_start":1372,"line_end":1372,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":2665},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":430066,"byte_end":430087,"line_start":1402,"line_end":1402,"column_start":8,"column_end":29},"name":"recognize_float_parts","qualname":"::number::streaming::recognize_float_parts","value":"pub fn recognize_float_parts<T, E: ParseError<T>>(T)\n-> IResult<T, (bool, T, T, i32), E> where T: Slice<RangeFrom<usize>> +\nSlice<RangeTo<usize>>, T: Clone + Offset, T: InputIter +\ncrate::traits::ParseTo<i32>, <T as InputIter>::Item: AsChar,\nT: InputTakeAtPosition + InputTake + InputLength,\n<T as InputTakeAtPosition>::Item: AsChar, T: for<'a> Compare<&'a [u8]>,\nT: AsBytes","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a floating point number in text format and returns the integer, fraction and exponent parts of the input data","sig":null,"attributes":[{"value":"/ Recognizes a floating point number in text format and returns the integer, fraction and exponent parts of the input data","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":429829,"byte_end":429953,"line_start":1398,"line_end":1398,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":429954,"byte_end":429957,"line_start":1399,"line_end":1399,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":429958,"byte_end":430054,"line_start":1400,"line_end":1400,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":430055,"byte_end":430058,"line_start":1401,"line_end":1401,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":2671},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":433121,"byte_end":433126,"line_start":1511,"line_end":1511,"column_start":8,"column_end":13},"name":"float","qualname":"::number::streaming::float","value":"pub fn float<T, E: ParseError<T>>(T) -> IResult<T, f32, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter + InputLength + InputTake + crate::traits::ParseTo<i32>,\n<T as InputIter>::Item: AsChar, <T as InputIter>::IterElem: Clone,\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar, T: AsBytes,\nT: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in text format and returns a f32.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in text format and returns a f32.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432520,"byte_end":432590,"line_start":1493,"line_end":1493,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432591,"byte_end":432594,"line_start":1494,"line_end":1494,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432595,"byte_end":432691,"line_start":1495,"line_end":1495,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432692,"byte_end":432695,"line_start":1496,"line_end":1496,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432696,"byte_end":432707,"line_start":1497,"line_end":1497,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432708,"byte_end":432755,"line_start":1498,"line_end":1498,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432756,"byte_end":432784,"line_start":1499,"line_end":1499,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::float;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432785,"byte_end":432822,"line_start":1500,"line_end":1500,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432823,"byte_end":432826,"line_start":1501,"line_end":1501,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432827,"byte_end":432849,"line_start":1502,"line_end":1502,"column_start":1,"column_end":23}},{"value":"/   float(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432850,"byte_end":432864,"line_start":1503,"line_end":1503,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432865,"byte_end":432871,"line_start":1504,"line_end":1504,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432872,"byte_end":432875,"line_start":1505,"line_end":1505,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432876,"byte_end":432923,"line_start":1506,"line_end":1506,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432924,"byte_end":432974,"line_start":1507,"line_end":1507,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":432975,"byte_end":433030,"line_start":1508,"line_end":1508,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":433031,"byte_end":433105,"line_start":1509,"line_end":1509,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":433106,"byte_end":433113,"line_start":1510,"line_end":1510,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2675},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":434397,"byte_end":434403,"line_start":1555,"line_end":1555,"column_start":8,"column_end":14},"name":"double","qualname":"::number::streaming::double","value":"pub fn double<T, E: ParseError<T>>(T) -> IResult<T, f64, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter + InputLength + InputTake + crate::traits::ParseTo<i32>,\n<T as InputIter>::Item: AsChar, <T as InputIter>::IterElem: Clone,\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar, T: AsBytes,\nT: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in text format and returns a f32.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in text format and returns a f32.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":433796,"byte_end":433866,"line_start":1537,"line_end":1537,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":433867,"byte_end":433870,"line_start":1538,"line_end":1538,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":433871,"byte_end":433967,"line_start":1539,"line_end":1539,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":433968,"byte_end":433971,"line_start":1540,"line_end":1540,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":433972,"byte_end":433983,"line_start":1541,"line_end":1541,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":433984,"byte_end":434031,"line_start":1542,"line_end":1542,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":434032,"byte_end":434060,"line_start":1543,"line_end":1543,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::float;","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":434061,"byte_end":434098,"line_start":1544,"line_end":1544,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":434099,"byte_end":434102,"line_start":1545,"line_end":1545,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":434103,"byte_end":434125,"line_start":1546,"line_end":1546,"column_start":1,"column_end":23}},{"value":"/   float(s)","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":434126,"byte_end":434140,"line_start":1547,"line_end":1547,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":434141,"byte_end":434147,"line_start":1548,"line_end":1548,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":434148,"byte_end":434151,"line_start":1549,"line_end":1549,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":434152,"byte_end":434199,"line_start":1550,"line_end":1550,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":434200,"byte_end":434250,"line_start":1551,"line_end":1551,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":434251,"byte_end":434306,"line_start":1552,"line_end":1552,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":434307,"byte_end":434381,"line_start":1553,"line_end":1553,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/streaming.rs","byte_start":434382,"byte_end":434389,"line_start":1554,"line_end":1554,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6053},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/mod.rs","byte_start":320154,"byte_end":320157,"line_start":10,"line_end":10,"column_start":3,"column_end":6},"name":"Big","qualname":"::number::Endianness::Big","value":"Endianness::Big","parent":{"krate":0,"index":6052},"children":[],"decl_id":null,"docs":" Big endian\n","sig":null,"attributes":[{"value":"/ Big endian","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/mod.rs","byte_start":320137,"byte_end":320151,"line_start":9,"line_end":9,"column_start":3,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6055},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/mod.rs","byte_start":320181,"byte_end":320187,"line_start":12,"line_end":12,"column_start":3,"column_end":9},"name":"Little","qualname":"::number::Endianness::Little","value":"Endianness::Little","parent":{"krate":0,"index":6052},"children":[],"decl_id":null,"docs":" Little endian\n","sig":null,"attributes":[{"value":"/ Little endian","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/mod.rs","byte_start":320161,"byte_end":320178,"line_start":11,"line_end":11,"column_start":3,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6057},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/mod.rs","byte_start":320230,"byte_end":320236,"line_start":14,"line_end":14,"column_start":3,"column_end":9},"name":"Native","qualname":"::number::Endianness::Native","value":"Endianness::Native","parent":{"krate":0,"index":6052},"children":[],"decl_id":null,"docs":" Will match the host's endianness\n","sig":null,"attributes":[{"value":"/ Will match the host's endianness","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/mod.rs","byte_start":320191,"byte_end":320227,"line_start":13,"line_end":13,"column_start":3,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":6052},"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/mod.rs","byte_start":320122,"byte_end":320132,"line_start":8,"line_end":8,"column_start":10,"column_end":20},"name":"Endianness","qualname":"::number::Endianness","value":"pub enum Endianness { Big, Little, Native, }","parent":null,"children":[{"krate":0,"index":6053},{"krate":0,"index":6055},{"krate":0,"index":6057}],"decl_id":null,"docs":" Configurable endianness\n","sig":null,"attributes":[{"value":"/ Configurable endianness","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/mod.rs","byte_start":320040,"byte_end":320067,"line_start":6,"line_end":6,"column_start":1,"column_end":28}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18237,"byte_end":18242,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18393,"byte_end":18398,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18599,"byte_end":18604,"line_start":82,"line_end":82,"column_start":29,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18651,"byte_end":18656,"line_start":84,"line_end":84,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18954,"byte_end":18959,"line_start":92,"line_end":92,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":19172,"byte_end":19177,"line_start":99,"line_end":99,"column_start":58,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":21541,"byte_end":21553,"line_start":172,"line_end":172,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":22094,"byte_end":22106,"line_start":193,"line_end":193,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":22392,"byte_end":22404,"line_start":202,"line_end":202,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":22660,"byte_end":22672,"line_start":210,"line_end":210,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":23199,"byte_end":23211,"line_start":226,"line_end":226,"column_start":58,"column_end":70},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":30929,"byte_end":30938,"line_start":483,"line_end":483,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2847}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":43191,"byte_end":43198,"line_start":35,"line_end":35,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":43957,"byte_end":43963,"line_start":57,"line_end":57,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45770,"byte_end":45773,"line_start":108,"line_end":108,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":46447,"byte_end":46450,"line_start":139,"line_end":139,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":46857,"byte_end":46860,"line_start":153,"line_end":153,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":47518,"byte_end":47521,"line_start":176,"line_end":176,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":47764,"byte_end":47767,"line_start":185,"line_end":185,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":48008,"byte_end":48011,"line_start":194,"line_end":194,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":48256,"byte_end":48259,"line_start":203,"line_end":203,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":48490,"byte_end":48493,"line_start":211,"line_end":211,"column_start":20,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":48526,"byte_end":48529,"line_start":213,"line_end":213,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":49037,"byte_end":49040,"line_start":231,"line_end":231,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":51224,"byte_end":51225,"line_start":320,"line_end":320,"column_start":42,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":51457,"byte_end":51460,"line_start":333,"line_end":333,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":51845,"byte_end":51848,"line_start":347,"line_end":347,"column_start":83,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":52319,"byte_end":52326,"line_start":365,"line_end":365,"column_start":7,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":52744,"byte_end":52751,"line_start":382,"line_end":382,"column_start":7,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":53146,"byte_end":53149,"line_start":399,"line_end":399,"column_start":7,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":53571,"byte_end":53573,"line_start":416,"line_end":416,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":54358,"byte_end":54362,"line_start":447,"line_end":447,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":67808,"byte_end":67809,"line_start":499,"line_end":499,"column_start":7,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":75253,"byte_end":75254,"line_start":789,"line_end":789,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":86717,"byte_end":86722,"line_start":1283,"line_end":1283,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":86917,"byte_end":86922,"line_start":1292,"line_end":1292,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":87205,"byte_end":87217,"line_start":1303,"line_end":1303,"column_start":57,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":87542,"byte_end":87554,"line_start":1313,"line_end":1313,"column_start":66,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":110012,"byte_end":110026,"line_start":696,"line_end":696,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15454,"byte_end":15459,"line_start":446,"line_end":446,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":66}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15522,"byte_end":15532,"line_start":452,"line_end":452,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":816}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15555,"byte_end":15561,"line_start":454,"line_end":454,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1075}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15584,"byte_end":15592,"line_start":456,"line_end":456,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1123}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15615,"byte_end":15620,"line_start":458,"line_end":458,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1209}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15644,"byte_end":15649,"line_start":461,"line_end":461,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1377}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/mod.rs","byte_start":159246,"byte_end":159254,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1378}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bytes/mod.rs","byte_start":159264,"byte_end":159273,"line_start":4,"line_end":4,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1536}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15672,"byte_end":15676,"line_start":463,"line_end":463,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1696}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208343,"byte_end":208351,"line_start":4,"line_end":4,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1697}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/bits/mod.rs","byte_start":208361,"byte_end":208370,"line_start":5,"line_end":5,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1756}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15700,"byte_end":15709,"line_start":466,"line_end":466,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1862}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221338,"byte_end":221346,"line_start":8,"line_end":8,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1863}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/character/mod.rs","byte_start":221356,"byte_end":221365,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2036}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/lib.rs","byte_start":15743,"byte_end":15749,"line_start":471,"line_end":471,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2220}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/mod.rs","byte_start":320010,"byte_end":320018,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2221}},{"kind":"Mod","span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/number/mod.rs","byte_start":320028,"byte_end":320037,"line_start":4,"line_end":4,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2453}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":16434,"byte_end":16439,"line_start":16,"line_end":16,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":17310,"byte_end":17315,"line_start":39,"line_end":39,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":79}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18237,"byte_end":18242,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18393,"byte_end":18398,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2679},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18599,"byte_end":18604,"line_start":82,"line_end":82,"column_start":29,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2679},"to":{"krate":0,"index":79}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18651,"byte_end":18656,"line_start":84,"line_end":84,"column_start":40,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2679},"to":{"krate":0,"index":82}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":18954,"byte_end":18959,"line_start":92,"line_end":92,"column_start":40,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2679},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":19172,"byte_end":19177,"line_start":99,"line_end":99,"column_start":58,"column_end":63},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2679},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":21541,"byte_end":21553,"line_start":172,"line_end":172,"column_start":27,"column_end":39},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2692},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":22094,"byte_end":22106,"line_start":193,"line_end":193,"column_start":29,"column_end":41},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2692},"to":{"krate":0,"index":79}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":22392,"byte_end":22404,"line_start":202,"line_end":202,"column_start":40,"column_end":52},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2692},"to":{"krate":0,"index":82}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":22660,"byte_end":22672,"line_start":210,"line_end":210,"column_start":40,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2692},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":23199,"byte_end":23211,"line_start":226,"line_end":226,"column_start":58,"column_end":70},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2692},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/error.rs","byte_start":30929,"byte_end":30938,"line_start":483,"line_end":483,"column_start":6,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":43191,"byte_end":43198,"line_start":35,"line_end":35,"column_start":35,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":200},"to":{"krate":0,"index":204}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":43957,"byte_end":43963,"line_start":57,"line_end":57,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":45770,"byte_end":45773,"line_start":108,"line_end":108,"column_start":9,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":46447,"byte_end":46450,"line_start":139,"line_end":139,"column_start":9,"column_end":12},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":46857,"byte_end":46860,"line_start":153,"line_end":153,"column_start":9,"column_end":12},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":47518,"byte_end":47521,"line_start":176,"line_end":176,"column_start":6,"column_end":9},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":47764,"byte_end":47767,"line_start":185,"line_end":185,"column_start":6,"column_end":9},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":48008,"byte_end":48011,"line_start":194,"line_end":194,"column_start":6,"column_end":9},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":48256,"byte_end":48259,"line_start":203,"line_end":203,"column_start":6,"column_end":9},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":48490,"byte_end":48493,"line_start":211,"line_end":211,"column_start":20,"column_end":23},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2866},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":48526,"byte_end":48529,"line_start":213,"line_end":213,"column_start":26,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2866},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":49037,"byte_end":49040,"line_start":231,"line_end":231,"column_start":19,"column_end":22},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2866},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":51224,"byte_end":51225,"line_start":320,"line_end":320,"column_start":42,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":294},"to":{"krate":0,"index":266}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":51457,"byte_end":51460,"line_start":333,"line_end":333,"column_start":39,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":266}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":51845,"byte_end":51848,"line_start":347,"line_end":347,"column_start":83,"column_end":86},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":305},"to":{"krate":0,"index":266}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":52319,"byte_end":52326,"line_start":365,"line_end":365,"column_start":7,"column_end":14},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":266}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":52744,"byte_end":52751,"line_start":382,"line_end":382,"column_start":7,"column_end":14},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":338},"to":{"krate":0,"index":266}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":53146,"byte_end":53149,"line_start":399,"line_end":399,"column_start":7,"column_end":10},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":354},"to":{"krate":0,"index":266}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":53571,"byte_end":53573,"line_start":416,"line_end":416,"column_start":23,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":368},"to":{"krate":0,"index":266}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/internal.rs","byte_start":54358,"byte_end":54362,"line_start":447,"line_end":447,"column_start":27,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":381},"to":{"krate":0,"index":266}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":62790,"byte_end":62795,"line_start":328,"line_end":328,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":548}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":65832,"byte_end":65837,"line_start":444,"line_end":444,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":67808,"byte_end":67809,"line_start":499,"line_end":499,"column_start":7,"column_end":8},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":596},"to":{"krate":0,"index":581}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":75253,"byte_end":75254,"line_start":789,"line_end":789,"column_start":20,"column_end":21},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":657},"to":{"krate":0,"index":644}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":86717,"byte_end":86722,"line_start":1283,"line_end":1283,"column_start":50,"column_end":55},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2679},"to":{"krate":0,"index":780}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":86917,"byte_end":86922,"line_start":1292,"line_end":1292,"column_start":59,"column_end":64},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2679},"to":{"krate":0,"index":780}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":87205,"byte_end":87217,"line_start":1303,"line_end":1303,"column_start":57,"column_end":69},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2692},"to":{"krate":0,"index":780}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/traits.rs","byte_start":87542,"byte_end":87554,"line_start":1313,"line_end":1313,"column_start":66,"column_end":78},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2692},"to":{"krate":0,"index":780}},{"span":{"file_name":"/Users/merisb/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.0.0/src/combinator/mod.rs","byte_start":110012,"byte_end":110026,"line_start":696,"line_end":696,"column_start":22,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1033},"to":{"krate":4294967295,"index":4294967295}}]}